//Utilities
(function($){
    if(!this.leonardo) this.leonardo = new Object({});
    var util = this.leonardo.util || new Object({});

    /* TK 1270927 refs #756 */
    util.mobile = (function(a) {
        return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))
    })(navigator.userAgent || navigator.vendor || window.opera);

    util.getCurrentViewport = function(){
        var windowWidth = $(window).width();

        var pixelRatio = window.devicePixelRatio;
//        if (pixelRatio > 1) pixelRatio = ((pixelRatio*80)/100);
//        	console.log (pixelRatio);
//        	
        /* TK 1270927 refs #756 */
        if (!util.mobile) windowWidth *= pixelRatio;

        if(windowWidth < 768){
            return "MOBILE";
        }else if(windowWidth >= 768 && windowWidth < 1024){
            return "TABLET_PORTRAIT";
        }else if(windowWidth >= 1024 && windowWidth < 1280){
            return "TABLET_LANDSCAPE";
        }else{
            return "DESKTOP";
        }
    };

    //This guid is RFC4122 version 4 compliant
    util.guid = function uuidv4(){
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c){
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    };

    util.getUrlVars = function(){
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');

        for(var i = 0; i < hashes.length; i++){
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }

        return vars;
    };

    //===Debounce===
    // Returns a function, that, as long as it continues to be invoked, will not
    // be triggered. The function will be called after it stops being called for
    // N milliseconds. If `immediate` is passed, trigger the function on the
    // leading edge, instead of the trailing.
    util.debounce = function(func, wait, immediate){
        var timeout;
        return function(){
            var context = this, args = arguments;
            var later = function() {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };

    util.isLegacyIE = (window.ActiveXObject ? true : false) || (!!window.MSInputMethodContext && !!document.documentMode);
    util.cssPropertySupported = function(property){
        return property in document.body.style;
    }

    this.leonardo.util = util;
})(jQuery);
;//Start Module: All Products
(function($){
    'use strict';

    var allProducts = window.leonardo.allProducts || new Object({});
    var filters = $('#Division .filter-container--subfilters--list--subfilter');
    var subFilterContainer = $('#Mission');
    var products = $('.product-card');

    allProducts.init = function(){
        filters.on('click', function(){
            $(this).addClass('active').siblings().removeClass('active');

            allProducts.filter($(this).data('filter'));

            var filterDataType = $(this).attr('data-filter');

            if(filterDataType != "*"){
                subFilterContainer.removeClass('hidden');
                $('.filter-container--filters--filter[data-filter="Mission"]').addClass('subFilterActive');

                if($('#Mission .filter-container--subfilters--list--subfilter').length){
                    subFilterContainer.removeClass('hidden');
                    $('.filter-container--filters--filter[data-filter="Mission"]').addClass('subFilterActive');
                } else {
                    subFilterContainer.addClass('hidden');
                    $('.filter-container--filters--filter[data-filter="Mission"]').removeClass('subFilterActive');
                }
            }else{
                subFilterContainer.addClass('hidden');
                $('.filter-container--filters--filter[data-filter="Mission"]').removeClass('subFilterActive');
            }

        });

        filters.first().trigger('click');

        //subfilters functionality
        subFilterContainer.on('click', '.filter-container--subfilters--list--subfilter', function(e){
            if($(this).hasClass('notActive'))
                $(this).removeClass('notActive');
            else
                $(this).addClass('notActive');

            allProducts.subFilter($(this));
        });

    };

    allProducts.filter = function(productType){
        if(!productType) productType = '*';

        products.each(function(i, e){
            e = $(e);
            if(productType === "*"){
                e.removeClass('hidden');
            }else if(e.data('product-type').toUpperCase() === productType.toUpperCase()){
                e.removeClass('hidden');
            }else{
                e.addClass('hidden');
            }
        });

        //Get sub-filters
        if(productType !== "*")
            allProducts.getSubFilters();
    };

    allProducts.getSubFilters = function(){
        var arrSubFilters = [];

        products.each(function(i, e){
            if(!$(e).hasClass('hidden')){
                arrSubFilters.push($(e).data('product-subtype'));
            }
        });

        //Remove duplicates
        arrSubFilters = arrSubFilters.filter(function(e, i, arr){
            return i == arr.indexOf(e);
        });

        subFilterContainer.empty();

        if(arrSubFilters.length > 1){
            subFilterContainer.append('<div class="filter-container--subfilters--list--title-mobile">Mission</div>');
            arrSubFilters.forEach(function(e, i){
                if(arrSubFilters[i] != ''){
                    subFilterContainer.append('<a class="filter-container--subfilters--list--subfilter btn-leo btn-leo-light" href="javascript:void(0)" title="' + arrSubFilters[i] + '" data-sub-filter="' + arrSubFilters[i] + '">' + arrSubFilters[i] + '<span class="filter-container--subfilters--list--subfilter--btn-close"></span></a>');
                }
            });
            subFilterContainer.removeClass('hidden');
        }
    };

    allProducts.subFilter = function(subTypeFilterLink){
        var subType = subTypeFilterLink.data('sub-filter');

        products.each(function(i, e){
            e = $(e);

            if(e.data('product-subtype').toUpperCase() === subType.toUpperCase())
                e.addClass('hidden');

            if(!subTypeFilterLink.hasClass('notActive') && e.data('product-subtype').toUpperCase() === subType.toUpperCase())
                e.removeClass('hidden');
        });
    };

    window.leonardo.allProducts = allProducts;
})(jQuery);
//End Module: All Products
;//Start Module: Background Image
(function($){
    'use strict';

    var backgroundImage = window.leonardo.backgroundImage || new Object({});

    backgroundImage.init = function(){
        if ("IntersectionObserver" in window) {
            backgroundImage.lazyImageObserver = new IntersectionObserver(function(entries, observer) {
                entries.forEach(function(entry) {
                    if (entry.isIntersecting) {
                        var target = entry.target;
                        backgroundImage.applyImage(target);
                        backgroundImage.lazyImageObserver.unobserve(target);
                    }
                });
            });
        }

        $('[data-img-url-d],[data-src-url-d],[data-img-url-tl],[data-src-url-tl],[data-img-url-tp],[data-src-url-tp],[data-img-url-m],[data-src-url-m]').each(function(i, e){
            backgroundImage.applyTo(e,false);
        });

        $(window).on('resize', function(){
            backgroundImage.resize();
        });
    };

    backgroundImage.applyImage = function(obj){
        var $obj = $(obj);
        switch (window.leonardo.util.getCurrentViewport()){
            case 'DESKTOP':
                if($obj.data('img-url-d'))
                    $(obj)[0].style.setProperty( 'background-image', 'url(\''+ $obj.data('img-url-d') +'\')', 'important' );
                if($obj.data('src-url-d'))
                    $(obj).attr('src', $obj.data('src-url-d'));
                break;
            case 'TABLET_LANDSCAPE':
                if($obj.data('img-url-tl'))
                    $(obj)[0].style.setProperty( 'background-image', 'url(\''+ $obj.data('img-url-tl') +'\')', 'important' );
                if($obj.data('src-url-tl'))
                    $(obj).attr('src', $(obj).data('src-url-tl'));
                break;
            case 'TABLET_PORTRAIT':
                if($(obj).data('img-url-tp'))
                    $(obj)[0].style.setProperty( 'background-image', 'url(\''+ $obj.data('img-url-tp') +'\')', 'important' );
                if($(obj).data('src-url-tp'))
                    $(obj).attr('src', $(obj).data('src-url-tp'));
                break;
            case 'MOBILE':
                if($obj.data('img-url-m'))
                    $obj[0].style.setProperty( 'background-image', 'url(\''+ $obj.data('img-url-m') +'\')', 'important' );
                if($obj.data('src-url-m'))
                    $obj.attr('src', $(obj).data('src-url-m'));
                break;
        }
    };

    backgroundImage.applyTo = function(obj,isCover){
        var $obj = $(obj);
        if ("IntersectionObserver" in window) {
            if ($obj[0]) backgroundImage.lazyImageObserver.observe($obj[0]);
        } else {
            backgroundImage.applyImage($obj);
        }
        if(isCover && $obj.data('img-url-d')){
            $obj[0].style.setProperty( 'background-size', 'cover' );
            $obj[0].style.setProperty( 'background-color', '#f1f0f0' );
        }
    }

    backgroundImage.resize = window.leonardo.util.debounce(function(){
        backgroundImage.init();
    }, 500);

    window.leonardo.backgroundImage = backgroundImage;
})(jQuery);
//End Module: Background Image
;//Start Module: Chosen Select
(function($){
    'use strict';

    var chosenSelect = window.leonardo.chosenSelect || new Object({});

    chosenSelect.init = function(){
        chosenSelect.createChosen($('.chosen-select'));
    };

    chosenSelect.createChosen = function(selects){
        if(!selects.jquery) selects = $(selects);

        selects.chosen({
            disable_search_threshold: 9
        });
    };

    window.leonardo.chosenSelect = chosenSelect;
})(jQuery);
//End Module: Chosen Select
;//Start Module: Cookie Policy Dialog
(function($){
    'use strict';

    var cookiePolicyDialog = window.leonardo.cookiePolicyDialog || new Object({});

    var dialog = $('.cookie-policy-dialog');
    var acceptBtn = $('#btn-cookie-policy-dialog-accept');

    cookiePolicyDialog.init = function(){
        acceptBtn.on('click', function(){
            dialog.addClass('fade');
            window.setTimeout(function(){
                dialog.addClass('hidden');
            }, 300);
        });
    };

    window.leonardo.cookiePolicyDialog = cookiePolicyDialog;
})(jQuery);
//End Module: Cookie Policy Dialog
;//Start Module: Countdown Widget
(function($){
    'use strict';

    var countdownWidget = window.leonardo.countdownWidget || new Object({});

    var countdowns = $('.countdown-widget');

    countdownWidget.init = function(){
        countdowns.each(function(i, countdown){
            countdown = $(countdown);
            var counterDays = countdown.find('.countdown-widget--counters--counter.days').find('.countdown-widget--counters--counter--val');
            var counterHours = countdown.find('.countdown-widget--counters--counter.hours').find('.countdown-widget--counters--counter--val');
            var counterMinutes = countdown.find('.countdown-widget--counters--counter.minutes').find('.countdown-widget--counters--counter--val');
            var counterSeconds = countdown.find('.countdown-widget--counters--counter.seconds').find('.countdown-widget--counters--counter--val');

            countdown.on('timeLeftChanged', function(){
                countdownWidget.updateCountdown(countdown, counterDays, counterHours, counterMinutes, counterSeconds);
            });

            countdown.trigger('timeLeftChanged');
            countdown.removeClass('hidden');
        });

        window.setInterval(function(){
            countdownWidget.updateTimeLeft();
        }, 1000);
    };

    countdownWidget.refreshCountdownsWidget = function(){
        countdowns = $('.countdown-widget');
        countdowns.each(function(i, countdown){
            countdown = $(countdown);
            var counterDays = countdown.find('.countdown-widget--counters--counter.days').find('.countdown-widget--counters--counter--val');
            var counterHours = countdown.find('.countdown-widget--counters--counter.hours').find('.countdown-widget--counters--counter--val');
            var counterMinutes = countdown.find('.countdown-widget--counters--counter.minutes').find('.countdown-widget--counters--counter--val');
            var counterSeconds = countdown.find('.countdown-widget--counters--counter.seconds').find('.countdown-widget--counters--counter--val');

            countdown.on('timeLeftChanged', function(){
                countdownWidget.updateCountdown(countdown, counterDays, counterHours, counterMinutes, counterSeconds);
            });

            countdown.trigger('timeLeftChanged');
            countdown.removeClass('hidden');
        });
    }

    countdownWidget.getCountdownTime = function(timeLeft){
        var retObj = {};

        if(isNaN(parseFloat(timeLeft))) timeLeft = 0;

        if(timeLeft >= 86400){
            retObj.days = timeLeft - (timeLeft % 86400);
            retObj.days = retObj.days / 86400;
            timeLeft = timeLeft % 86400;
        }else{
            retObj.days = 0;
        }

        if(timeLeft >= 3600){
            retObj.hours = timeLeft - (timeLeft % 3600);
            retObj.hours = retObj.hours / 3600;
            timeLeft = timeLeft % 3600;
        }else{
            retObj.hours = 0;
        }

        if(timeLeft >= 60){
            retObj.minutes = timeLeft - (timeLeft % 60);
            retObj.minutes = retObj.minutes / 60;
            timeLeft = timeLeft % 60;
        }else{
            retObj.minutes = 0;
        }

        retObj.seconds = timeLeft;

        return retObj;
    };
    countdownWidget.removeCountdown = function(countdown){
        countdown.remove();
    };

    countdownWidget.updateCountdown = function(countdown, counterDays, counterHours, counterMinutes, counterSeconds){
        var timeLeft = countdownWidget.getCountdownTime(countdown.data('time-left'));

        counterDays.text(padLeftWithZero(timeLeft.days));
        counterHours.text(padLeftWithZero(timeLeft.hours));
        counterMinutes.text(padLeftWithZero(timeLeft.minutes));

        if(timeLeft.days == 0 && timeLeft.hours == 0 && timeLeft.minutes == 0  &&
            ((counterSeconds.length > 0 && timeLeft.seconds == 0) ||
                (counterSeconds.length <= 0) ||
                ($('.countdown-widget--counters--counter.seconds:visible').length == 0))){
            countdownWidget.removeCountdown(countdown);
            return false;
        }

        if(counterSeconds.length) counterSeconds.text(padLeftWithZero(timeLeft.seconds));
    };

    countdownWidget.updateTimeLeft = function(){
        countdowns.each(function(i, countdown){
            countdown = $(countdown);
            countdown.data('time-left', parseFloat(countdown.data('time-left')) - 1);
            countdown.trigger('timeLeftChanged');
        });
    };

    function padLeftWithZero(n, count){
        if(!n) n = 0;
        if(!count) count = 2;

        if(n.toString().length < count){
            return n.toString().padStart(count, '0');
        }else{
            return n;
        }
    }

    window.leonardo.countdownWidget = countdownWidget;
})(jQuery);
;//Start Module: Datepicker
(function($){
    'use strict';

    var datepicker = window.leonardo.datepicker || new Object({});

    datepicker.init = function(){
        var eventsCalendar = $('.calendar--date');
        var datepicker = $('input[data-toggle="datepicker"]:not(.calendar--date)');
        var datepickerTemplate = '' +
            '<div class="datepicker-container">' +
            '<div class="datepicker-panel" data-view="years picker">' +
            '<ul>' +
            '<li data-view="years prev">' +
            '<span class="icon-navigate" data-view="years prev"></span>' +
            '</li>' +
            '<li data-view="years current"></li>' +
            '<li data-view="years next">' +
            '<span class="icon-navigate" data-view="years next"></span>' +
            '</li>' +
            '</ul>' +
            '<ul data-view="years"></ul>' +
            '</div>' +
            '<div class="datepicker-panel" data-view="months picker">' +
            '<ul>' +
            '<li data-view="year prev">' +
            '<span class="icon-navigate" data-view="year prev"></span>' +
            '</li>' +
            '<li data-view="year current"></li>' +
            '<li data-view="year next">' +
            '<span class="icon-navigate" data-view="year next"></span>' +
            '</li>' +
            '</ul>' +
            '<ul data-view="months"></ul>' +
            '</div>' +
            '<div class="datepicker-panel" data-view="days picker">' +
            '<ul>' +
            '<li data-view="month prev">' +
            '<span class="icon-navigate" data-view="month prev"></span>' +
            '</li>' +
            '<li data-view="month current"></li>' +
            '<li data-view="month next">' +
            '<span class="icon-navigate" data-view="month next"></span>' +
            '</li>' +
            '</ul>' +
            '<ul data-view="week"></ul>' +
            '<ul data-view="days"></ul>' +
            '</div>' +
            '</div>';

        if(eventsCalendar.length){
            eventsCalendar.datepicker({
                autoHide: true,
                template: datepickerTemplate,
                offset: 0,
                daysMin: ['S','M', 'T', 'W', 'T', 'F', 'S'],
                // monthsShort: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                format: 'dd/mm/yyyy',
                language: 'en',
                weekStart: 0,
                monthPicker: false,
                yearPicker: false,
                container: '.calendar--wrapper',
                inline: true
            });

            // LFT TO : Modificata logica per caricamento eventi via ajax
            var highlightDates = function(currentDate) {

                var highlight = function(events, currentDate) {
                    var days = eventsCalendar.parents(".calendar--wrapper").find("ul[data-view='days'] li:not(.muted)");

                    $(events).each(function(i,e) {
                        var date = new Date(parseInt(e.time));
                        if (date.getYear() === currentDate.getYear() && date.getMonth() === currentDate.getMonth()) {
                            days.each(function(){
                                if($(this).text() == date.getDate().toString()) {
                                    $(this).append('<span class="highlightDate"></span>');
                                    $(this).data("classPK", e.classPK);
                                }
                            });
                        }
                        /**/
                    });
                }

                var events = eventsCalendar.data("events");
                if (!events) {
                    var ajaxURL = eventsCalendar.attr("data-events-url");
                    $.getJSON(ajaxURL, function(data) {
                        eventsCalendar.data("events", data.events);
                        highlight(data.events, currentDate);
                    });
                }
                else {
                    highlight(events, currentDate);
                }

            }

            var showEvent = function(pickedDate) {
                var eventsWrap = eventsCalendar.parents(".section-grid").find(".events-calendar--upcoming-events--wrap.event");
                if (eventsWrap){
                    eventsWrap.find(".journal-content-article").html("");
                    var url = eventsWrap.attr("data-event-url");
                    var pickedDay = eventsCalendar.parents(".calendar--wrapper").find("ul[data-view='days'] li:not(.muted).picked");
                    var classPK = pickedDay.data("classPK");
                    if (classPK){
                        var ppid = window.leonardo.util.getPortletId(url);
                        var ns = Liferay.Util.getPortletNamespace(ppid);
                        url = Liferay.Util.addParams(ns + "classPK="+classPK,url);
                        eventsWrap.load(url);
                        return;
                    }
                }
            }

            eventsCalendar.on('render.datepicker', function(e){
                highlightDates(e.date)
            });

            eventsCalendar.on('pick.datepicker', function(e){
                showEvent(e.date)
            });

            window.setTimeout(function(){
                highlightDates(new Date());
            }, 100);
        }

    };

    window.leonardo.datepicker = datepicker;
}(jQuery));
//End Module: Datepicker
;//Start Module: Filter Widget Multimedia
(function($){
    "use strict";

    var filterWidgetMultimedia = window.leonardo.filterWidgetMultimedia || new Object({});
    var _currentView;

    filterWidgetMultimedia.init=function(){
        _currentView = filterWidgetMultimedia.getCurrentViewport();

        /* CUSTOMIZED
        $('.filter-container-multimedia--filters--filter.dropdown').on("click",function(e){
            e.preventDefault();

            var _target= $("#"+$(this).attr('data-filter'));
            
                $(this).siblings().removeClass('active');
                $(this).toggleClass('active');

            if($(this).attr('data-filter')!="All"){
                _target.siblings().removeClass('active');
                _target.toggleClass('active');
            }else{
                $('.filter-container-multimedia--subfilters--list').toggleClass('active');
            }
        });

        $('.filter-container-multimedia--subfilters--list--subfilter').on("click",function(){
            $('.filter-container-multimedia--subfilters--list--subfilter').removeClass('active');
            $(this).toggleClass('active');
            $('.filter-container-multimedia--filters--filter[data-filter="All"]').text($(this).attr('title'));
            if($(window).width()<768){
                $('.filter-container-multimedia--filters--filter[data-filter="All"], .filter-container-multimedia--subfilters--list').removeClass('active');
            }
        });
         */

        $('.sublevel').on("click",function(){
            $(this).toggleClass('notActive');
        });

        $(window).resize(function(){
            if(_currentView != filterWidgetMultimedia.getCurrentViewport() )
            {
                if($(window).width()<768){
                    if($('.filter-container-multimedia--filters--filter').hasClass('active')){
                        $('.filter-container-multimedia--filters--filter').addClass('active');
                        $('.filter-container-multimedia--subfilters--list').addClass('active');
                    }

                }else{
                    $('.filter-container-multimedia--filters--filter').removeClass('active');
                    $('.filter-container-multimedia--subfilters--list').removeClass('active');
                }
            }

            _currentView=filterWidgetMultimedia.getCurrentViewport();
        });
    };

    filterWidgetMultimedia.getCurrentViewport = function(){
        var windowWidth = $(window).width();

        if(windowWidth < 768){
            return "MOBILE";
        }else if(windowWidth >= 768){
            return "DESKTOP";
        }
    };

    window.leonardo.filterWidgetMultimedia = filterWidgetMultimedia;
})(jQuery);
//Start Module: Filter Widget Multimedia
;//Start Module: Filter Widget modificato da team liferay
(function($){
    "use strict";

    var filterWidget = window.leonardo.filterWidget || new Object({});
    var datepickerTemplate = '' +
        '<div class="datepicker-container">' +
        '<div class="datepicker-panel" data-view="years picker">' +
        '<ul>' +
        '<li data-view="years prev">' +
        '<span class="icon-navigate" data-view="years prev"></span>' +
        '</li>' +
        '<li data-view="years current"></li>' +
        '<li data-view="years next">' +
        '<span class="icon-navigate" data-view="years next"></span>' +
        '</li>' +
        '</ul>' +
        '<ul data-view="years"></ul>' +
        '</div>' +
        '<div class="datepicker-panel" data-view="months picker">' +
        '<ul>' +
        '<li data-view="year prev">' +
        '<span class="icon-navigate" data-view="year prev"></span>' +
        '</li>' +
        '<li data-view="year current"></li>' +
        '<li data-view="year next">' +
        '<span class="icon-navigate" data-view="year next"></span>' +
        '</li>' +
        '</ul>' +
        '<ul data-view="months"></ul>' +
        '</div>' +
        '<div class="datepicker-panel" data-view="days picker">' +
        '<ul>' +
        '<li data-view="month prev">' +
        '<span class="icon-navigate" data-view="month prev"></span>' +
        '</li>' +
        '<li data-view="month current"></li>' +
        '<li data-view="month next">' +
        '<span class="icon-navigate" data-view="month next"></span>' +
        '</li>' +
        '</ul>' +
        '<ul data-view="week"></ul>' +
        '<ul data-view="days"></ul>' +
        '</div>' +
        '</div>';

    var leonardoCalContainerDiv = $('#wrapper.leonardocompany');

    var datepickerElements = $('.datepicker.filter-widget--datepicker');
    var _currentView;

    filterWidget.init=function(){
        _currentView = filterWidget.getCurrentViewport();

        if(typeof $('html').attr('lang') != 'undefined' && $('html').attr('lang') == 'it-IT') {
            datepickerElements.datepicker({
                autoHide: true,
                container: leonardoCalContainerDiv,
                template: datepickerTemplate,
                offset: 0,
                monthsShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'],
                daysMin: ['D', 'L','M', 'M', 'G', 'V', 'S'],
                format: 'dd/mm/yyyy',
                language: 'it',
                weekStart: 1,
                monthPicker: false,
                yearPicker: false
            });
        } else {
            datepickerElements.datepicker({
                autoHide: true,
                container: leonardoCalContainerDiv,
                template: datepickerTemplate,
                offset: 0,
                daysMin: ['S','M', 'T', 'W', 'T', 'F', 'S'],
                format: 'dd/mm/yyyy',
                language: 'en',
                weekStart: 0,
                monthPicker: false,
                yearPicker: false
            });
        }


        $('.filter-container--filters--filter.dropdown').on("click",function(e){
            e.preventDefault();

            var _target= $(this).attr('data-filter');

            $(this).siblings().removeClass('active');
            $(this).toggleClass('active');

            if($(this).attr('data-filter')!="All"){
                $(this).parents('.filter-container').find('[data-id = '+ _target +']').siblings().removeClass('active');
                $(this).parents('.filter-container').find('[data-id = '+ _target +']').toggleClass('active');
            }else{
                $(this).parents('.filter-container').find('.filter-container--subfilters--list').toggleClass('active');
            }
        });

        $('.filter-container--subfilters--list--subfilter').on("click",function(){
            var $this = $(this);
            var parent = $this.parent(".filter-container--subfilters--list");
            if (parent) parent.find('.filter-container--subfilters--list--subfilter').removeClass('active');
            else $('.filter-container--subfilters--list--subfilter').removeClass('active');
            if ($this.hasClass("sublevel")) $this.toggleClass('notActive');
            else $this.toggleClass('active');
            filterWidget.subFilterActive($this);
        });

        $('.sublevel').on("click",function(){
            $(this).toggleClass('notActive');
        });

        datepickerElements.on('click',function(e){
            $(this).datepicker();
        });

        datepickerElements.on('pick.datepicker', function (e) {
            e.preventDefault();
            var _day = e.date.getDate();
            var _month = e.date.getMonth() + 1;
            var _fullYear = e.date.getFullYear();
            if((""+_day).length == 1) {
                _day = "0" + _day;
            }

            if((""+_month).length == 1) {
                _month = "0" + _month;
            }

            $(this).find('span').text(_day+"."+_month+"."+_fullYear);
        });

        $(window).resize(function(){
            if(_currentView != filterWidget.getCurrentViewport() )
            {
                if($(window).width()<768){
                    if($('.filter-container--filters--filter').hasClass('active')){
                        $('.filter-container--filters--filter').addClass('active');
                        $('.filter-container--subfilters--list').addClass('active');
                    }

                }else{
                    $('.filter-container--filters--filter').removeClass('active');
                    $('.filter-container--subfilters--list').removeClass('active');
                }
            }

            _currentView=filterWidget.getCurrentViewport();
        });
    };

    filterWidget.getCurrentViewport = function(){
        var windowWidth = $(window).width();

        if(windowWidth < 768){
            return "MOBILE";
        }else if(windowWidth >= 768){
            return "DESKTOP";
        }
    };

    //check if subfilter is active
    filterWidget.subFilterActive = function(subfilter){
        var idName = subfilter.parent('.filter-container--subfilters--list').attr('id');
        $('.filter-container--filters--filter[data-filter="'+idName+'"]').addClass('subFilterActive');
    };

    window.leonardo.filterWidget = filterWidget;
})(jQuery);
//Start Module: Filter Widget modificato da team liferay
;//Start Module: Globals
(function($){
    'use strict';

    var globals = window.leonardo.globals || new Object({});

    var updateViewportInfo = window.leonardo.util.debounce(function(){
        globals.currentViewport = window.leonardo.util.getCurrentViewport();
    }, 500);
    var win = $(window);

    globals.currentViewport = '';

    globals.init = function(){
        globals.currentViewport = window.leonardo.util.getCurrentViewport();

        win.on('resize', function(){
            updateViewportInfo();
        });

        win.trigger('resize');
    };

    window.leonardo.globals = globals;
})(jQuery);
//End Module: Globals
;//Start Module: Goto
(function($){
    'use strict';

    var goto = window.leonardo.goto || new Object({});

    goto.init = function(){
        $('.goto').on('click', function(){
            $('html, body').animate({
                'scrollTop': $(this).offset().top + $(this).outerHeight() - ($('.header').hasClass('sticky') ? $('.header').outerHeight() : 0)
            }, 600);
        });
    };

    window.leonardo.goto = goto;
})(jQuery);
//End Module: Goto
;//Start Module: Header
(function($){
    'use strict';

    var header = window.leonardo.header || new Object({});
    var quickMenu = $('.quick-menu');
    var quickMenuSpacer = $('.quick-menu--spacer');
    var menuSwitch = $('.header--switch-sites');
    var headerElement = $('.header');
    var headerSpacer = $('.header-spacer');
    var globalSearchTrigger = $('.header--nav--item--global-search-trigger');
    var langSelectorContainer = $('.quick-menu--language-selector');
    var deviceMenuTrigger = $('.header--nav--item--device-menu-trigger');
    var navItems = $('.quick-menu--menulist--item, .quick-menu--tools--item, .header--nav--item:not(.header--nav--item--device-menu-trigger)');
    var quickMenuNavContainers = $('.quick-menu--menulist, .quick-menu--tools');
    var navigator = $('.section-navigator--list');
    var win = $(window);
    var lastScrollTop = 0;
    var currentPosition = win.scrollTop();
    var currentViewport = window.leonardo.util.getCurrentViewport();
    var isHeaderOpaque = headerElement.hasClass('header--opaque');
    var quickMenuMouseEntered = false;
    var quickMenuNavContainersMouseEntered = false;
    var headerNavItemsEntered = false;
    var timeoutId;
    var quickMenuMenuListMouseEnter = false;
    var quickMenuList = $('.quick-menu .quick-menu--menulist');
    var quickMenuToolsMouseEnter = false;
    var quickMenuTools = $('.quick-menu .quick-menu--tools');
    var currEle;
    var menuOpenFromQuickMenu = false;
    var menuOpenFromQuickMenuTools = false;
    var menuOpenFromHeader = false;
    var navItemTimer;
    // var menuOpenFromHeader;
    var regionalPopup = $('.regional-popup');
    var megamenuDeviceMenu = $('.megamenu--device-menu');
    var closeMenuFunction;

    var megamenuNavItemEnterTime = 300;
    var megamenuNavItemLeaveTime = 100;


    header.init = function(){

        if($('html').hasClass('dark-theme')) {
            megamenuNavItemEnterTime = 0;
            megamenuNavItemLeaveTime = 0;
        }

        headerElement.addClass((window.leonardo.util.cssPropertySupported('backdropFilter') || window.leonardo.util.cssPropertySupported('webkitBackdropFilter')) ? 'backdrop-filter-supported' : undefined);

        win.on('scroll', function(e){
            if(window.leonardo.globals.currentViewport.toUpperCase() === 'DESKTOP'){
                currentPosition = win.scrollTop();

                if(currentPosition > lastScrollTop){
                    //Scrolling down
                    if($(window).scrollTop() > quickMenu.outerHeight()){
                        regionalPopup.addClass('sticky');
                        quickMenu.removeClass('sticky');
                        langSelectorContainer.removeClass("sticky");
                        headerElement.addClass('sticky');
                        if(headerElement.hasClass('header--opaque'))
                            headerElement.removeClass('header--opaque').addClass('header--positioned');
                        headerElement.css('top', 0 + (regionalPopup.height() | 0));
                        navigator.css('top', 0 + (regionalPopup.height() | 0));
                        headerSpacer.height((isHeaderOpaque && headerElement.hasClass("quick-menu-open") > 0) ? headerWrapElement.outerHeight() - 1 : 0);
                    }
                }else if(currentPosition < lastScrollTop){
                    //Scrolling up
                    if($(window).scrollTop() <= 0){
                        regionalPopup.removeClass('sticky');
                        quickMenu.removeClass('sticky');
                        langSelectorContainer.removeClass("sticky").css("top", "");
                        headerElement.removeClass('sticky');
                        if(headerElement.hasClass('header--positioned'))
                            headerElement.removeClass('header--positioned').addClass('header--opaque');
                        headerElement.css('top', (quickMenu.outerHeight() | 0) + (langSelectorContainer.height() | 0));
                        quickMenu.css('top', 0);
                        headerSpacer.height(0);
                    }else if(headerElement.hasClass('sticky')){
                        //Only if Section-Navigator is not in sticky state
                        if(!navigator.hasClass('sticky')){
                            regionalPopup.addClass('sticky');
                            quickMenu.addClass('sticky');
                            langSelectorContainer.addClass("sticky").css("top", quickMenu.outerHeight() + regionalPopup.height());
                            headerElement.css('top', (quickMenu.outerHeight() | 0) + (langSelectorContainer.height() | 0) + (regionalPopup.height() | 0));
                            quickMenu.css('top', regionalPopup.height());
                        }
                    }
                }

                lastScrollTop = currentPosition;
            } else {
                megamenuDeviceMenu.css('top', regionalPopup.height());
                if(navigator.hasClass('sticky')){
                    navigator.css('top', regionalPopup.height());
                }
            }
        });

        globalSearchTrigger.on('click', function(){
            window.leonardo.megamenu.hideDesktopMenu();
            window.leonardo.searchWidgetGlobal.open();
        });

        deviceMenuTrigger.on('click', function(){
            window.leonardo.megamenu.showDeviceMenu();
        });


        var eventOnNavItems = 'click mouseenter';



        navItems.on(eventOnNavItems, function(){
            currEle = $(this);


            navItemTimer = setTimeout(function(){
                if((quickMenuMenuListMouseEnter) && !(quickMenu.hasClass('quick-menu-open')) && !(quickMenu.hasClass('header-menu-open'))){
                    menuOpenFromQuickMenu = true;
                    menuOpenFromQuickMenuTools = false;
                    header.setTimeDelay();
                }else if((quickMenuToolsMouseEnter) && !(quickMenu.hasClass('quick-menu-open')) && !(quickMenu.hasClass('header-menu-open'))){
                    menuOpenFromQuickMenuTools = true;
                    menuOpenFromQuickMenu = false;
                    header.setTimeDelay();
                }else if((headerNavItemsEntered) && !(quickMenu.hasClass('header-menu-open')) && !(quickMenu.hasClass('quick-menu-open'))){
                    menuOpenFromHeader = true;
                    menuOpenFromQuickMenu = false;
                    menuOpenFromQuickMenuTools = false;
                    header.setTimeDelay();
                }else if(headerNavItemsEntered && (menuOpenFromQuickMenu || menuOpenFromQuickMenuTools)){
                    if($('.header--nav--item:hover').length == 0){
                        headerNavItemsEntered = false;
                        menuOpenFromHeader = false;
                        clearTimeout(timeoutId);
                    }else{
                        menuOpenFromQuickMenu = false;
                        menuOpenFromQuickMenuTools = false;
                        quickMenuToolsMouseEnter = false;
                        quickMenuMenuListMouseEnter = false;
                        headerNavItemsEntered = true;
                        header.setTimeDelay();
                    }
                }else if((headerNavItemsEntered) && quickMenu.hasClass('quick-menu-open') && !(quickMenu.hasClass('header-menu-open'))){
                    menuOpenFromHeader = true;
                    menuOpenFromQuickMenu = false;
                    menuOpenFromQuickMenuTools = false;
                    header.setTimeDelay();
                }else if(headerNavItemsEntered && quickMenu.hasClass('header-menu-open')){
                    menuOpenFromHeader = true;
                    menuOpenFromQuickMenu = false;
                    menuOpenFromQuickMenuTools = false;
                    header.noTimeDelay();
                }else if(menuOpenFromHeader && quickMenuMenuListMouseEnter){
                    if($('.quick-menu--menulist--item:hover').length == 0){
                        quickMenuMenuListMouseEnter = false;
                        clearTimeout(timeoutId);
                    }else{
                        menuOpenFromHeader = false;
                        headerNavItemsEntered = false;
                        menuOpenFromQuickMenu = true;
                        quickMenuMenuListMouseEnter = true;
                        header.setTimeDelay();
                    }
                }else if(menuOpenFromHeader && quickMenuToolsMouseEnter){
                    if($('.quick-menu--tools--item:hover').length == 0){
                        quickMenuToolsMouseEnter = false;
                        clearTimeout(timeoutId);
                    }else{
                        menuOpenFromHeader = false;
                        headerNavItemsEntered = false;
                        quickMenuToolsMouseEnter = true;
                        menuOpenFromQuickMenuTools = true;
                        header.setTimeDelay();
                    }
                }else if(quickMenuMenuListMouseEnter && quickMenu.hasClass('quick-menu-open') && menuOpenFromQuickMenu){
                    menuOpenFromQuickMenu = true;
                    menuOpenFromQuickMenuTools = false;
                    headerNavItemsEntered = false;
                    header.noTimeDelay();
                }else if(quickMenuMenuListMouseEnter && quickMenu.hasClass('quick-menu-open') && menuOpenFromQuickMenuTools && !(headerNavItemsEntered)){
                    if($('.quick-menu--menulist--item:hover').length == 0){
                        quickMenuMenuListMouseEnter = false;
                        clearTimeout(timeoutId);
                    }else{
                        quickMenuMenuListMouseEnter = true;
                        menuOpenFromQuickMenuTools = false;
                        menuOpenFromQuickMenu = true;
                        quickMenuMenuListMouseEnter = true;
                        header.setTimeDelay();
                    }
                }else{
                    header.noTimeDelay();
                }
            }, megamenuNavItemEnterTime);
        });


        if($('html').hasClass('dark-theme')) {
            /*
            $('.quick-menu--menulist, .service-menu').on('mouseleave', function(event){
                var target = $(event.relatedTarget);
                if(target.length>0 && target.closest('.megamenu--wrap').length==0) {
                    window.leonardo.megamenu.hideDesktopMenu();
                }
            });
            $('.megamenu--wrap').on('mouseleave', function(event){
                var target = $(event.relatedTarget);
                if(target.length>0 && target.closest('.header--wrap').length==0) {
                    window.leonardo.megamenu.hideDesktopMenu();
                }
            });
            $('.header--logo-wrapper, .global-menu, .language-menu, .header--nav--item--global-search-trigger').on('mouseenter', function(){
                 window.leonardo.megamenu.hideDesktopMenu();
            });
            */


        }

        navItems.on('mouseleave', function(){
            clearTimeout(navItemTimer);
        });

        quickMenu.on('mouseenter', function(){
            quickMenuMouseEntered = true;
        });

        quickMenu.on('mouseleave', function(){
            quickMenuMouseEntered = false;
        });

        quickMenuList.on('mouseenter', function(){
            quickMenuMenuListMouseEnter = true;
        });

        quickMenuTools.on('mouseenter', function(){
            quickMenuToolsMouseEnter = true;
        });

        quickMenuList.on('mouseleave', function(){
            quickMenuMenuListMouseEnter = false;
        });

        quickMenuTools.on('mouseleave', function(){
            quickMenuToolsMouseEnter = false;
        });

        quickMenuNavContainers.on('mouseenter', function(){
            headerNavItemsEntered = false;
            menuOpenFromHeader = false;
            quickMenuNavContainersMouseEntered = true;
        });

        quickMenuNavContainers.on('mouseleave', function(){
            window.clearTimeout(timeoutId);
            window.clearTimeout(closeMenuFunction);
            closeMenuFunction = null;
            quickMenuNavContainersMouseEntered = false;
            quickMenuMenuListMouseEnter = false;
            quickMenuToolsMouseEnter = false;
            headerNavItemsEntered = false;
            menuOpenFromHeader = false;

            closeMenuFunction = window.setTimeout(function(){
                if (quickMenuMouseEntered) {
                    window.leonardo.megamenu.hideDesktopMenu();
                }
            }, megamenuNavItemLeaveTime);
        });

        headerElement.on('mouseenter', function(event){
            headerNavItemsEntered = true;
        });

        headerElement.on('mouseleave', function(){
            window.clearTimeout(timeoutId);
            headerNavItemsEntered = false;
            menuOpenFromHeader = false;
            window.clearTimeout(closeMenuFunction);
            closeMenuFunction = null;

            closeMenuFunction = window.setTimeout(function(){
                if(!quickMenuNavContainersMouseEntered){
                    window.leonardo.megamenu.hideDesktopMenu();
                }
            }, megamenuNavItemLeaveTime);
        });

        header.setTimeDelay = function(){
            timeoutId = window.setTimeout(function(){
                if(currEle.data('menu-id')){
                    window.leonardo.megamenu.showDesktopMenu(currEle.data('menu-id'));
                }
            },50); /* TK 1124548 - Problemi con megamenu */
        }

        header.noTimeDelay = function() {
            if(currEle.data('menu-id')){
                window.leonardo.megamenu.showDesktopMenu(currEle.data('menu-id'));
            }
        }

        if($('html').hasClass('dark-theme')) {
            //new header menu

            eventOnNavItems = 'click';
            navItems.unbind( "mouseenter mouseleave");
            headerElement.unbind( "mouseenter mouseleave");
            quickMenuNavContainers.unbind( "mouseenter mouseleave");
            var megaMenu = $(".megamenu--wrap");
            var quickMenuWrap = $(".quick-menu--menulist");
            var serviceMenuWrap = $(".service-menu");
            var switchSitesListWrapper = $('.switch-sites--list-wrapper');
            var headerSwitch = $(".header--switch-sites");
            menuSwitch.on('click',function(){

                switchSitesListWrapper.toggle();
                closeMenuFunction = window.setTimeout(function(){
                    window.leonardo.megamenu.hideDesktopMenu();
                }, megamenuNavItemLeaveTime);
            });

            $('.service-menu--item').click(function () {
                switchSitesListWrapper.hide();
                var currentId = $(this).attr('data-menu-id');
                var currentMenuOpen = $("[data-menu-id='" + currentId +"']");
                if(currentMenuOpen.hasClass('active')) {
                    closeMenuFunction = window.setTimeout(function(){
                        window.leonardo.megamenu.hideDesktopMenu();
                    }, megamenuNavItemLeaveTime);
                }
            });

            $('.quick-menu--menulist--item').click(function () {
                switchSitesListWrapper.hide();

                var currentId = $(this).attr('data-menu-id');
                var currentMenuOpen = $("[data-menu-id='" + currentId +"']");
                if(currentMenuOpen.hasClass('active')) {
                    closeMenuFunction = window.setTimeout(function(){
                        window.leonardo.megamenu.hideDesktopMenu();
                    }, megamenuNavItemLeaveTime);
                }
            });

            $(document).click(function (e) {
                if (!megaMenu.is(e.target)
                    && !quickMenuWrap.is(e.target)
                    && !serviceMenuWrap.is(e.target)
                    && megaMenu.has(e.target).length === 0
                    && quickMenuWrap.has(e.target).length === 0
                    && serviceMenuWrap.has(e.target).length === 0
                ){
                    // console.log(switchSitesListWrapper.css("display"));
                    if(!headerSwitch.is(e.target) && headerSwitch.has(e.target).length === 0) {
                        switchSitesListWrapper.hide();
                    }

                    closeMenuFunction = null;
                    quickMenuNavContainersMouseEntered = false;
                    quickMenuMenuListMouseEnter = false;
                    quickMenuToolsMouseEnter = false;
                    headerNavItemsEntered = false;
                    menuOpenFromHeader = false;

                    closeMenuFunction = window.setTimeout(function(){
                        window.leonardo.megamenu.hideDesktopMenu();
                    }, megamenuNavItemLeaveTime);
                }
            });



            //open modal
            var productCard = '.products-cards-tabs--content .product-card';
            var productCardModal = '.product-card-modal-overlay';
            var modalCloseButton = '.product-card-modal-overlay .close-button';
            var modalCardTitle   = '.product-card-modal-overlay .modal-title';
            var modalCardDescription = '.product-card-modal-overlay .modal-description';
            var modalCardList    = '.product-card-modal-overlay .modal-list';
            var modalCardLink    = '.product-card-modal-overlay .modal-link';
            ///?? test da fare ??
            var bodyProductsList = '.products-cards-tabs--content.all-products';


            var htmlModal = '<div class="product-card-modal-overlay">'+
                '<div class="product-card-modal"> '+
                '<div class="product-card-modal-text">'+
                '<div class="modal-title-container"><h3 class="modal-title"></h3></div> '+
                '<p class="modal-description"></p>'+
                '<span class="modal-link"></span> '+
                '<ul class="modal-list"> '+
                '</ul>'+
                '</div>'+
                '<button class="close-button" data-close="" aria-label="Close reveal" type="button"> '+
                '<span aria-hidden="true">×</span> '+
                '</button> '+
                '</div> '+
                '</div>';

            $(bodyProductsList).append(htmlModal);

            //disabilito i link product-card--wrap nella pagina di ricerca
            if($(bodyProductsList).length>0 && $(bodyProductsList).find('a.product-card--wrap').length>0) {
                var productLinkWrapper = $(bodyProductsList).find('a.product-card--wrap');
                productLinkWrapper.each(function(){
                    $(this).attr('href', 'javascript: void(0);')
                })
            }

            //js variable modal

            var getTitle = '.product-card--desc .title';
            var getText = '.js-textModal';
            var getLink = '.js-link-product';
            var getOverviewListFileUrl = '.js-ul-overview';
            var getDownload = '.js-ul-download';

            var setTextModal;
            var setTitle;
            var setOverviewListFileUrl;
            var setDownload;
            var setLink;

            $(document).on("click",productCard, function(event) {
                event.preventDefault();

                $(productCardModal).css("visibility", "visible");
                $(productCardModal).css("opacity", "1");
                setTitle = $(this).find(getTitle).html();


                setTextModal = $(this).find(getText).html();
                setOverviewListFileUrl = $(this).find(getOverviewListFileUrl).html();

                var download = $(this).find(getDownload)
                setDownload = ( download.length > 0 ) ?$(this).find(getDownload).html() : '';


                var link = $(this).find(getLink);
                setLink = ( link.length > 0 )? $(this).find(getLink).html() : '';


                $(modalCardTitle).html(setTitle);
                $(modalCardDescription).html(setTextModal);
                $(modalCardList).html(setOverviewListFileUrl+setDownload);
                $(modalCardLink).html(setLink);
            });

            $(modalCloseButton).click(function() {
                $(productCardModal).css("opacity", "0");
                $(productCardModal).css("visibility", "hidden");
            })

            $('.product-card-modal').click(function(event) {
                event.stopPropagation();
            })

            $(productCardModal).click( function () {
                $(this).css("opacity", "0");
                $(this).css("visibility", "hidden");
            })

        }
        win.trigger('scroll').trigger('resize');
    };

    window.leonardo.header = header;
})(jQuery);
//End Module: Header
;//Start Module: Language Selector
(function($){
    "use strict";

    var langSelector = window.leonardo.langSelector || new Object({});

    var langSelectorTrigger = $('.language-selector-trigger');
    var langSelectorItems = $('.language-selector-item');
    var quickMenu = $('.quick-menu');
    var langSelectorContainer = $('.quick-menu--language-selector');
    var langSelectorContainerDeviceMenu = $('.megamenu--device-menu--content--head--language-selector');
    var langSelectorCodeElement = $('.language-selector-lang-code');
    var headerElement = $('.header');
    var headerElementDeviceMenu = $('.megamenu--device-menu--content--head');
    var megamenuDeviceMenu = $('.megamenu--device-menu');

    langSelector.init = function(){
        langSelectorTrigger.on('click', function(){
            $($(this).data('target')).toggleClass('open');
            $(this).toggleClass('open active');
            var _top = quickMenu.height() + (langSelectorContainer.height() | 0);
            headerElement.css("top", _top);

            if(megamenuDeviceMenu) {
                if(megamenuDeviceMenu.hasClass('menu-open-l3')){
                    megamenuDeviceMenu.removeClass('menu-open-l2').removeClass('menu-open-l3');
                }
                else if(megamenuDeviceMenu.hasClass('menu-open-l2')){
                    megamenuDeviceMenu.removeClass('menu-open-l2');
                }
                setTimeout(function(){
                    $($(this).data('target')).toggleClass('open');
                    $(this).toggleClass('open active');
                },100);
            }
        });

        langSelectorItems.on('click', function(){
            langSelectorCodeElement.text($(this).data('lang-code'));
            langSelectorItems
                .removeClass('active')
                .filter('[data-lang-code="' + $(this).data('lang-code') + '"]')
                .addClass('active');
        });
    };

    window.leonardo.langSelector = langSelector;
})(jQuery);
//End Module: Language Selector
;//Start Module: Lazy Load
(function($){
    'use strict';

    var lazyLoad = window.leonardo.lazyLoad || new Object({});

    lazyLoad.init = function() {

        lazyLoad.visible =function(element, partial){
            var $elem         = element,
                $win          = $(window),
                viewTop       = $win.scrollTop(),
                viewBottom    = viewTop + $win.height(),
                _top          = $elem.offset().top,
                _bottom       = _top + $elem.height(),
                compareTop    = partial === true ? _bottom : _top,
                compareBottom = partial === true ? _top : _bottom;
            return ((compareBottom <= viewBottom) && (compareTop >= viewTop));
        };

        var win = $(window);

        lazyLoad.contentLoader = function(e){
            var prodCards = $(".all-products .all-products--product-list .product-card:not(.lazy-load)");
            prodCards.each(function(i, el) {
                if(!el.jquery) el = $(el);
                if (lazyLoad.visible(el,true)) {
                    setTimeout(function(){
                        el.addClass('lazy-load');
                    }, 150 * ((i+1)/2));
                }
            });
        };

        lazyLoad.contentLoader();

        win.on('scroll', function(event) {
            lazyLoad.contentLoader();
        });
    };

    window.leonardo.lazyLoad = lazyLoad;
})(jQuery);
//End Module: Lazy Load
;//Start Module: Maps
(function($){
    var maps = window.leonardo.maps || new Object({});

    maps.libraryLoaded = function(){
        var loadEvent = new Event('mapLibraryReady');
        window.dispatchEvent(loadEvent);
    };

    maps.loadLibrary = function() {
        var languageId = Liferay.ThemeDisplay.getLanguageId();
        var language = languageId.substring(0,2);
        var region = (languageId.indexOf("_") > 0) ? languageId.substring(3) : language.toUpperCase();

        var mapLib = document.createElement("script");
        mapLib.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCSiG6zG6R8MAfIId9JA7ysPM1G_snbbCc&language='+language+'&region='+region+'&callback=window.leonardo.maps.libraryLoaded';

        var mapLibCluster = document.createElement("script");
        mapLibCluster.src = "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js";

        window.setTimeout(function(){ document.body.appendChild(mapLibCluster); }, 500);
        window.setTimeout(function(){ document.body.appendChild(mapLib); }, 500);
    };

    window.leonardo.maps = maps;
})(jQuery);
//End Module: Maps
;//Start Module: Masonry Grid
(function($){
    'use strict';

    var masonryGrid = window.leonardo.masonryGrid || new Object({});

    //Multimedia page -- CUSTOM
    masonryGrid.multimedia = function(grid) {
        setTimeout(function(){
            grid.isotope({
                itemSelector: '.grid-isotope .multimedia--card',
                percentPosition: true,
                masonry: {
                    horizontalOrder: true
                }
            });
        }, 100);
    };

    masonryGrid.init = function(){
        //Multimedia page -- CUSTOM
        masonryGrid.multimedia($('.grid-isotope'));

        $('#type').on('click', '.filter-container-multimedia--subfilters--list--subfilter, .filter-container-multimedia--subfilters--list--subfilter--links--link', function() {
            var filterValue = $(this).attr('data-filter');

            $('.grid-isotope').isotope({
                filter: filterValue
            });
        });

        //Timeline page
        var layoutMode ={};

        setTimeout(function(){
            layoutMode = $('.timeline-articles--tab-content.active').data('layout-mode');
            $('.grid-isotope-timelines').isotope(getTimelineGridLayout(layoutMode));
        }, 800);

        $('.timeline-content--header--tablist--tab').on('click',function(){
            layoutMode = $('.timeline-articles--tab-content.active').data('layout-mode');
            var $selector = $('.grid-isotope-timelines.' + layoutMode);

            $selector.isotope(getTimelineGridLayout(layoutMode));
        });
    };

    function getTimelineGridLayout(layout){
        var isotopeObj = {};

        if(layout ==  "fitRows"){
            isotopeObj = {
                itemSelector: '.timeline-articles--gallery-wrap--img',
                layoutMode: layout,
                resize: true,
                fitRows: {
                    gutter: 20
                }
            };
        }else if(layout == "masonry"){
            isotopeObj = {
                itemSelector: '.timeline-articles--gallery-wrap--img',
                layoutMode: layout,
                resize: false,
                masonry: {
                    columnWidth: 20,
                    gutter: 20
                }
            };
        }else if(layout == "masonryHorizontal"){
            isotopeObj = {
                itemSelector: '.timeline-articles--gallery-wrap--img',
                layoutMode: layout,
                resize: true,
                masonryHorizontal: {
                    columnWidth: 20,
                    gutter: 20
                }
            };
        }else if(layout == "fitColumns"){
            isotopeObj = {
                itemSelector: '.timeline-articles--gallery-wrap--img',
                layoutMode: layout,
                resize: true,
                fitColumns:{
                    gutter: 20,
                    columnWidth: 20
                }
            };
        }else if(layout == "packery"){
            isotopeObj = {
                itemSelector: '.timeline-articles--gallery-wrap--img',
                layoutMode: layout,
                resize: true,
                packery: {
                    rowHeight: 20,
                    gutter: 20
                }
            };
        }

        return isotopeObj;
    }

    window.leonardo.masonryGrid = masonryGrid;
})(jQuery);
//End Module: Masonry Grid
;//Start Module: Megamenu
(function($){
    'use strict';

    var megamenu = window.leonardo.megamenu || new Object({});

    var html = $('html');
    var body = $('body');
    var quickMenu = $('.quick-menu');
    var header = $('.header');
    var headerOverlay = $('.header--overlay');
    var navItems = $('.quick-menu--menulist--item, .quick-menu--tools--item, .header--nav--item:not(.header--nav--item--device-menu-trigger)');
    var menu = $('.megamenu');
    var menuDesktopContainer = $('.megamenu--wrap');
    var menuDeviceContainer = $('.megamenu--device-menu');
    var btnDesktopMenuClose = $('.megamenu--head--btn-close');
    var btnDeviceMenuClose = $('.megamenu--device-menu--content--head--action--close-menu');
    var btnDeviceMenuBack = $('.megamenu--device-menu--content--head--back');
    var menuMenuTitleLinks = $('.megamenu--content--menu--title-link');
    var deviceMenuItems = $('.megamenu--device-menu--content--body--menu-item');
    var globalPresenceRegions = $('.global-presence-map--global-map .presence-region');
    var globalNonPresenceRegions = $('.global-presence-map--global-map .non-presence-region');
    var globalPresenceCountries = $('a.global-presence-map--country-lists--list--group--title.d-hidden'); /* Only those items that are visible in Tablet-Landscape breakpoint */
    var MENU_GROUP_LIMIT = 6;
    var doc = $(document);

    megamenu.init = function(){
        btnDesktopMenuClose.on('click', function(){
            megamenu.hideDesktopMenu();
        });

        btnDeviceMenuBack.on('click', function(){
            if(menuDeviceContainer.hasClass('menu-open-l3')){
                menuDeviceContainer.removeClass('menu-open-l3');
            }else if(menuDeviceContainer.hasClass('menu-open-l2')){
                menuDeviceContainer.removeClass('menu-open-l2');
            }
        });

        btnDeviceMenuClose.on('click', function(){
            megamenu.hideDeviceMenu();
        });

        deviceMenuItems.each(function(i, menuItem){
            menuItem = $(menuItem);
            menuItem.addClass($(menuItem.data('target')).length ? 'has-child' : undefined);
        });

        deviceMenuItems.on('click', function(){
            var menuItem = $(this);
            var target = $(menuItem.data('target'));

            if(menuItem.hasClass('has-child')){
                menuItem
                    .closest('.megamenu--device-menu--content--body--group')
                    .find('.megamenu--device-menu--content--body--menu-item')
                    .removeClass('selected');
                menuItem.addClass('selected');
            }
            //Device Menu language selector closing on navigating to level-2 and level-3
            if($('.megamenu--device-menu--content--head--language-selector').hasClass('open')){
                $('.megamenu--device-menu--content--head--language-selector').removeClass('open');
                $('.language-selector-trigger').removeClass('open active');
            }
            if(target){
                target
                    .closest('.megamenu--device-menu--content--body--group')
                    .find('.megamenu--device-menu--content--body--menu-item-group')
                    .addClass('hidden');
                target.removeClass('hidden');

                if(menuItem.hasClass('menu-item-primary')){
                    menuDeviceContainer.removeClass('secondary-menu');
                }else if(menuItem.hasClass('menu-item-secondary')){
                    menuDeviceContainer.addClass('secondary-menu');
                }

                if(target.closest('.megamenu--device-menu--content--body--group').hasClass('group-l2')){
                    menuDeviceContainer.addClass('menu-open-l2');

                    $('.megamenu--device-menu--content--body--group.group-l3')
                        .find('.megamenu--device-menu--content--body--menu-item-group')
                        .addClass('hidden');
                }

                if(target.closest('.megamenu--device-menu--content--body--group').hasClass('group-l3')){
                    menuDeviceContainer.addClass('menu-open-l3');
                }
            }
        });

        globalPresenceRegions.on('click', function(){
            var self = $(this);
            var target = $(self.data('target'));

            //LF TEAM: FIX for jQuery version on svg element
            //globalPresenceRegions.removeClass('active');
            globalPresenceRegions.attr("class","presence-region");
            //self.addClass('active');
            self.attr("class","presence-region active");
            //end

            target.removeClass('hidden').siblings().addClass('hidden');
        });

        globalNonPresenceRegions.on('click', function(){
            var self = $(this);
            var target = $(self.data('target'));

            globalPresenceRegions.attr("class","presence-region");
            self.closest('.non-presence-region').siblings('.presence-region').attr("class","presence-region active");

            target.removeClass('hidden').siblings().addClass('hidden');
        });

        globalPresenceCountries.on('click', function(){
            $(this).closest('.global-presence-map--country-lists--list').addClass('active').siblings().removeClass('active');
        });

        megamenu.selectedNavItem = navItems.filter('.active') || null;
    };

    megamenu.showDesktopMenu = function(menuID){
        var menuToShow = menu.find('.megamenu--content[data-menu-id="' + menuID + '"]');
        var navItem = navItems.filter('[data-menu-id="' + menuID + '"]');

        header.addClass('stay-on-top');

        if(html.hasClass('dark-theme')) {
            if(navItem.closest('.header--top').length>0) {
                menuDesktopContainer.addClass('menu-top');
            } else {
                menuDesktopContainer.removeClass('menu-top');
            }
        }

        menuDesktopContainer.addClass('show');

        if(menuToShow.length){
            menuToShow.addClass('active').siblings('.megamenu--content').removeClass('active');

            if(menuToShow.data('section').toUpperCase() == 'HEADER'){
                quickMenu.removeClass('quick-menu-open').addClass('header-menu-open');
                header.removeClass('quick-menu-open').addClass('header-menu-open');
            }else if(menuToShow.data('section').toUpperCase() == 'QUICK-MENU'){
                quickMenu.removeClass('header-menu-open').addClass('quick-menu-open');
                header.removeClass('header-menu-open').addClass('quick-menu-open');
            }

            navItems.removeClass('active');
            navItem.addClass('active');

            if(!html.hasClass('dark-theme')) {
                headerOverlay.addClass('visible');
            }

            if(!header.hasClass('backdrop-filter-supported')) megamenu.addBackgroundBlur();

            if(!html.hasClass('dark-theme')) {
                //Enable Swiper if number of menu group is more than the limit
                if (menuToShow.find('.megamenu--content--group').length > MENU_GROUP_LIMIT) {
                    menuToShow.find('.megamenu--content--menu').addClass('swiper-container');
                    menuToShow.find('.megamenu--content--menu--wrap').addClass('swiper-wrapper');
                    menuToShow.find('.megamenu--content--group').addClass('swiper-slide');

                    if (!menuToShow.find('.megamenu--content--menu--nav').length) {
                        menuToShow.find('.megamenu--content--menu--wrap').after('<div class="megamenu--content--menu--nav"></div>');
                        menuToShow.find('.megamenu--content--menu--nav').append('<div class="swiper-button-prev"></div>');
                        menuToShow.find('.megamenu--content--menu--nav').append('<div class="swiper-button-next"></div>');
                    }

                    window.leonardo.swipers.megamenu = window.leonardo.swipers.megamenu || {};
                    if(!window.leonardo.swipers.megamenu[menuID]){
                        window.leonardo.swipers.megamenu[menuID] = new Swiper('.megamenu--content[data-menu-id=' + menuID + '] .megamenu--content--menu', {
                            slidesPerView: 6,
                            spaceBetween: 25,
                            navigation: {
                                nextEl: '.swiper-button-next',
                                prevEl: '.swiper-button-prev',
                            }
                        });
                    }else {
                        window.leonardo.swipers.megamenu[menuID].slideTo(0)
                    }
                }
                html.addClass('scroll-disabled');
            }
        } else {
            megamenu.hideDesktopMenu();
        }

        doc.on('keydown', function(e){
            if(e.keyCode === 27) {
                megamenu.hideDesktopMenu();
            }
        });
        /* LF Custom per Portlet Topper */
        $("div.leonardocompany").addClass("megamenu-open");

    };

    megamenu.showDeviceMenu = function(){
        menuDeviceContainer.addClass('menu-open');
        header.addClass('device-menu-open');
    }

    megamenu.hideDesktopMenu = function(){
        html.removeClass('scroll-disabled');
        menuDesktopContainer.removeClass('show');
        menu.find('.megamenu--content').removeClass('active');
        menu.removeClass('menu-expanded');
        menuMenuTitleLinks.removeClass('active');
        quickMenu.removeClass('quick-menu-open').removeClass('header-menu-open');
        header.removeClass('quick-menu-open').removeClass('header-menu-open').removeClass('stay-on-top');
        headerOverlay.removeClass('visible');
        navItems.removeClass('active');
        if(!header.hasClass('backdrop-filter-supported')) megamenu.removeBackgroundBlur();
        if (megamenu.selectedNavItem) megamenu.selectedNavItem.addClass('active');
        doc.off('keydown');
        /* LF Custom per Portlet Topper */
        $("#wrapper.leonardocompany").removeClass("megamenu-open");
    };

    megamenu.hideDeviceMenu = function(){
        menuDeviceContainer.removeClass('menu-open menu-open-l1 menu-open-l2 menu-open-l3');
        deviceMenuItems.removeClass('selected');
        header.removeClass('device-menu-open');
        html.removeClass('scroll-disabled');
        //Device Menu language selector closing on closing the menu
        if($('.megamenu--device-menu--content--head--language-selector').hasClass('open')){
            $('.megamenu--device-menu--content--head--language-selector').removeClass('open');
            $('.language-selector-trigger').removeClass('open active');
        }
    }

    megamenu.addBackgroundBlur = function(){
        menu.closest('.section-container').siblings().addClass('blur');
    }

    megamenu.removeBackgroundBlur = function(){
        menu.closest('.section-container').siblings().removeClass('blur');
    }

    window.leonardo.megamenu = megamenu;
})(jQuery);
//End Module: Megamenu
;//Start Module: Multimedia Layer
(function($){
    'use strict';

    var multimediaLayer = window.leonardo.multimediaLayer || new Object({});

    var multimediaLayerDialog   = $('.multimedia-layer'),
        // CUSTOMiZED
        containers				= $('.multimedia,.events-gallery'),
        btnCloseDialog          = $('.multimedia-layer--btn-close'),
        sliderContainer         = $('.multimedia-layer--carousel .carousel-inner'),
        slideTitle              = $('.multimedia-layer--headings--title'),
        slideCaption            = $('.multimedia-layer--headings--caption'),
        slideDesc               = $('.multimedia-layer--headings--description'),
        sliderPagination        = $('.multimedia-layer--carousel .carousel-footer--pagination'),
        sliderIconDownload      = $('.multimedia-layer--carousel .carousel-footer--icons--download'),
        players                 = [],
        downloadIcon            = $('.multimedia-layer--content .carousel-footer--icons--download');

    multimediaLayer.init = function(){

        // CUSTOMiZED
        containers.on('click', '.multimedia-layer-trigger', function(e){

            /* Problemi visualizzazione video - TK 1117259 */
            if($(this).find(".multimedia--card--graphic--play-icon").length > 0  &&
                $("html").hasClass("no-yt-video") &&
                $(this).find(".multimedia--card--graphic-container").hasClass("video-yt")) {
                return;
            }

            var dataList = $(this).parents(".photos,.videos").find('.dataList');
            var _total = dataList.length;
            var multimediaType = $(this).data("media-type");
            var _title  = $(this).data('title') || "";
            var _start = $(this).data('start') || 0;

            multimediaLayerDialog.addClass("show");
            sliderContainer.html('');
            slideTitle.html(_title);

            dataList.each(function(i, e){
                var _caption = $(this).data('caption') || "";
                var _desc = $(this).data('desc') || "";
                var _title = $(this).data('title') || "";
                var _imgSrc_d = $(this).data('src-url-full-d') || "";
                var _imgSrc_tp = $(this).data('src-url-full-tp') || "";
                var _imgSrc_tl = $(this).data('src-url-full-tl') || "";
                var _imgSrc_m = $(this).data('src-url-full-m') || "";
                var _imgSrc_hd = $(this).data('src-url-hd') || "";
                var _videoData = $(this).data('video-data') || "";
                var _active = "";
                var _initialVideo = "";

                _active = i == _start ? "active" : "";
                if (i == _start) {
                    _initialVideo = "initial-video-gallery";
                    _active = "active";
                    slideCaption.html(_caption);
                    slideDesc.html(_desc);
                } else {
                    _active = "";
                    _initialVideo = "";
                }
                // populating the data in slider                                       

                if(multimediaType == "PHOTOS"){
                    var imgAlt = _imgSrc_d.replace(/\\/g, '/');
                    imgAlt = imgAlt.substring(imgAlt.lastIndexOf('/')+ 1);

                    sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" data-desc="'+_desc+'">'+
                        '<img class="d-block" data-title="'+_title+'" src="'+_imgSrc_d+'" data-src-url-hd="'+_imgSrc_hd+'" data-src-url-d="'+_imgSrc_d+'" data-src-url-tl="'+_imgSrc_tl+
                        '" data-src-url-tp="'+_imgSrc_tp+'" data-src-url-m="'+_imgSrc_m+'" alt="'+imgAlt.split('.')[0]+'">'+
                        '</div>');
//                    if (i == _start) {
//                    	sliderIconDownload.attr("href", _imgSrc_hd);
//                    }
                }else if(multimediaType == "VIDEOS"){
                    var type = _videoData.videoSources[0].type || "yt";

                    if($('html').hasClass('dark-theme')) {// eccezione tema dark
                        if (type === 'yt') {
                            sliderContainer.append('<div class="item youtube '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="youtube-wrapper"><div class="youtube-video" id="video_id_'+i+'"  src='+_videoData.videoSources[0].src+' frameborder="0" allowfullscreen></div></div>'+
                                '</div>');
                        } else if(type === 'canto') {
                            sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="leo-video '+ _initialVideo +'" data-video-data=\''+JSON.stringify(_videoData)+'\'></div>'+
                                '</div>');
                        } else {
                            sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="leo-video" data-video-data=\''+JSON.stringify(_videoData)+'\'></div>'+
                                '</div>');
                        }
                    } else {
                        if (type === 'yt') {
                            sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="youtube-video" id="video_id_'+i+'"  src='+_videoData.videoSources[0].src+' frameborder="0" allowfullscreen></div>'+
                                '</div>');
                        } else if(type === 'canto') {
                            sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="leo-video '+ _initialVideo +'" data-video-data=\''+JSON.stringify(_videoData)+'\'></div>'+
                                '</div>');
                        } else {
                            sliderContainer.append('<div class="item '+_active+'" data-caption="'+_caption+'" '+' data-desc="'+_desc+'">'+
                                '<div class="leo-video" data-video-data=\''+JSON.stringify(_videoData)+'\'></div>'+
                                '</div>');
                        }
                    }
                }
            });

            players = [];
            if(multimediaType == "VIDEOS"){
                var player;
                $('.youtube-video').each(function(i, e){
                    var gaSended = false;
                    player = new YT.Player($(e).attr("id"), {

                        videoId: $(e).attr('src'),
                        host: 'https://www.youtube-nocookie.com',
                        playerVars: {
                            rel: 0,
                            iv_load_policy: 3,
                            showinfo: 0,
                            autoplay: 0
                        },
                        events: {
                            'onReady': function(){
                                $(e).removeClass('loading');
                            },
                            'onError': function(){
                                $(e).addClass('loadingError');
                            },
                            'onStateChange': function(f){
                                if(f.data === YT.PlayerState.UNSTARTED && !gaSended){
                                    /*TK 1083915*/
                                    if(typeof(ga) != "undefined"){
                                        ga('send','event','Video','Play',"'"+ $(e).attr('src') +"'");
                                        gaSended = true;
                                    }
                                    /**/
                                } else if(f.data === YT.PlayerState.PLAYING && !gaSended){
                                    /*TK 1083915*/
                                    if(typeof(ga) != "undefined"){
                                        ga('send','event','Video','Play',"'"+ $(e).attr('src') +"'");
                                        gaSended = true;
                                    }
                                    /**/
                                }
                            }
                        }
                    });

                    players.push(player);
                });
                window.leonardo.videoPlayer.init();

                sliderIconDownload.hide();
            } else {
                sliderIconDownload.show();
            }

            sliderPagination.html('<span  class="current">'+ (_start+1) +'</span>/<span class="total">'+ _total +'</span>');
            if(multimediaType == "VIDEOS"){
                $('#multimedia-slider').carousel('pause'); //TLTO:pause sliding if video gallery
                $('#multimedia-slider').carousel({'interval': false});
            }else{
                $('#multimedia-slider').carousel('cycle'); //TLTO:start sliding if photo gallery
                $('#multimedia-slider').carousel({'interval': 5000});
            }

            $('#multimedia-slider').on('slid.bs.carousel', function (i,e) {
                stopVideo();
                var current = sliderContainer.find('.item.active');
                sliderPagination.find('.current').text(current.index()+1);
                slideCaption.html(current.attr("data-caption"));
                slideDesc.html(current.attr("data-desc"));
                //sliderIconDownload.attr("href", current.find("img").data("src-url-hd"));
            });

            window.setTimeout(function(){
                btnCloseDialog.focus();
            }, 100);
        });


        //-- INIZIO - eccezioni tema dark
        if($('html').hasClass('dark-theme')) {

            //-- INIZIO - swipe on multimedia carousel
      /*      if (typeof swipe === 'undefined') {
                var jsCarouselSwipe = document.createElement("script");
                jsCarouselSwipe.src = "/o/leonardocompany-theme/js/vendor/jquery.touchSwipe.1-6-4.min.js";
                jsCarouselSwipe.async = "async";
                document.body.appendChild(jsCarouselSwipe);
                jsCarouselSwipe.onload = function () {
                    $('#multimedia-slider').swipe({
                        swipe: function (event, direction, distance, duration, fingerCount, fingerData) {
                            if (direction == 'left') $(this).carousel('next');
                            if (direction == 'right') $(this).carousel('prev');
                        },
                        allowPageScroll: "vertical"
                    });
                }
            }*/

            //-- INIZIO - visibilità pannello footer
            $('.carousel-footer-switch-panel').on('click touchstart', function(){
                $(this).closest('.carousel-footer').toggleClass('footer-show')
                $(this).closest('.multimedia-layer--content').find('.carousel-inner').toggleClass('footer-show')
            })
            //-- FINE - visibilità pannello footer
        }
        //-- FINE - eccezioni tema dark

        btnCloseDialog.on('click' , function(){
            if($('html').hasClass('dark-theme')) {
                if(!$('.carousel-footer').hasClass("footer-show")) {
                    $('.carousel-footer').addClass("footer-show")
                }
                if(!$('.carousel-inner').hasClass("footer-show")) {
                    $('.carousel-inner').addClass("footer-show")
                }
            }

            stopVideo();
            multimediaLayerDialog.removeClass("show");
        });

        multimediaLayerDialog.on('keydown', function(e){
            if((e.which || e.keyCode) === 27) {
                btnCloseDialog.trigger('click');
            }

            if($('html').hasClass('dark-theme')) {
                if((e.which || e.keyCode) === 39) {
                    $('#multimedia-slider').carousel('next');
                }
                if((e.which || e.keyCode) === 37) {
                    $('#multimedia-slider').carousel('prev');
                }
            }
        });

        var stopVideo = function(){
            window.leonardo.players = players;
            for(var i=0; i<players.length; i++){
                if (typeof players[i].stopVideo === 'function') players[i].stopVideo();
            }
            $("#multimedia-slider video").trigger("pause");
        }
        downloadIcon.on('click' , function(){
            if($(this).closest('.carousel-footer').prev('.carousel-inner').find('.item.active img').length){
                var url = $(this).closest('.carousel-footer').prev('.carousel-inner').find('.item.active img').attr('data-src-url-hd');
                var fileName = $(this).closest('.carousel-footer').prev('.carousel-inner').find('.item.active img').attr('data-title');
                if(typeof(fileName)=="undefined" || fileName == "" ){
                    fileName = url.substring(url.lastIndexOf('/') + 1);
                }
                saveAs(url, fileName);
            }
        });
    };

    window.leonardo.multimediaLayer = multimediaLayer;
})(jQuery);
//End Module: Multimedia Layer

;//Start Module: Social Media Layer
//End Module: Social Media Layer

;//Start Module: Our Presence Map
(function($){
    'use strict';

    var ourPresenceMap = window.leonardo.ourPresenceMap || new Object({});
    var mapSVGContainer = $('.about-us-global-presence--map, .international-presence--map');

    ourPresenceMap.init = function(){
        mapSVGContainer.each(function() {
            var svgContainer = $(this);
            var svg = $(this).find('svg');
            var initialWidth = svg.attr('width');
            var initialHeight = svg.attr('height');

            if (svgContainer.width() !== 0) {
                svg.attr('width', svgContainer.width());
                svg.attr('height', Math.round(svgContainer.width() * (initialHeight / initialWidth)));
            }
        })
    };

    ourPresenceMap.resize = window.leonardo.util.debounce(function(){
        ourPresenceMap.init();
    }, 500);

    if(mapSVGContainer.length){
        $(window).on('resize', function(){
            ourPresenceMap.resize();
        });
    }

    window.leonardo.ourPresenceMap = ourPresenceMap;
})(jQuery);
//End Module: Our Presence Map
;//Start Module: Products Technical Data
(function($){
    'use strict';

    var productTechnicalData = window.leonardo.productTechnicalData || new Object({});

    var btnShowMore = $('.products-technical-data--action-items--show-more .btn');
    var hiddenTechnicalData = $('.products-technical-data--specifications .products-technical-data--spec.invisible');
    var technicalDataContainer = $('.products-technical-data');

    productTechnicalData.init = function(){
        btnShowMore.on('click', function(){
            if(technicalDataContainer.attr('data-expandable') == "true"){
                technicalDataContainer.attr('data-expandable', "false");
                hiddenTechnicalData.removeClass('invisible');
                $(this).text("Show Less");
            }else{
                technicalDataContainer.attr('data-expandable', "true");
                hiddenTechnicalData.addClass('invisible');
                $(this).text("Show More");
            }
        });
    };

    window.leonardo.productTechnicalData = productTechnicalData;
})(jQuery);
//End Module: Products Technical Data
;//Start Module: Scroll to Top
(function($){
    'use strict';

    var scrollToTop = window.leonardo.scrollToTop || new Object({});

    var win = $(window);
    var scrollToTopElement = $('.scroll-to-top');
    var triggerRange = 0.5 * win.height();
    var footerSafeHeight = 75;

    scrollToTop.init = function(){
        win.on('scroll', function(){
            if (win.scrollTop() > triggerRange) {
                scrollToTopElement.removeClass('offscreen');

                if((win.height() + win.scrollTop() > $(document).height() - footerSafeHeight)){
                    scrollToTopElement.addClass('footer-visible');
                }else{
                    scrollToTopElement.removeClass('footer-visible');
                }
            } else {
                scrollToTopElement.addClass('offscreen');
            }
        });

        scrollToTopElement.on('click', function(e){
            $("html, body").animate({scrollTop: 0}, 1000);
        });
    };

    window.leonardo.scrollToTop = scrollToTop;
})(jQuery);
//End Module: Scroll to Top
;//Start Module: Search Results
(function($){
    'use strict';

    var searchResults = window.leonardo.searchResults || new Object({});

    var keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SHIFT: 16,
        SPACE: 32,
        TAB: 9,
        UP: 38
    };
    var searchResults				= $('.search-results');
    var searchResultsInfo			= $('.search-results--filter--search-content--result-info');
    var searchText                  = $('.search-results--filter--search-content--search--text');
    var filterItemOuterContainer    = $('.search-results--filter--filters--item-wrap--items-container');
    var filterItemInnerContainer    = $('.search-results--filter--filters--item-wrap--items-container--items');
    var filterItems                 = $('.search-results--filter--filters--item');
    var sectionFilters              = $('.search-results--section-filters--filter');
    var scrollerLeft                = $('.search-results--filter--filters--item-wrap--scroll.scroll-left');
    var scrollerRight               = $('.search-results--filter--filters--item-wrap--scroll.scroll-right');
    var resultGroups                = $('.search-results--content--group');
    var resultGroupsSeeAll          = $('.search-results--content--group--action--see-all');

    searchResults.init = function(){

        searchText.on('click paste keyup focus', function(){
            window.leonardo.searchWidgetGlobal.open(searchText.val()/*, searchText.get(0).selectionStart, searchText.get(0).selectionEnd*/);
        });

        /* CUSTOM
    	var suggestUrl = searchResults.attr("data-suggest-url") || '/fake';
    	var suggestTimeout;

    	searchText.on('change keyup', function(e, text) {
    		searchResultsInfo.html("");
        	clearTimeout(suggestTimeout);
        	if (searchText.val().length > 0) {
        		suggestTimeout = setTimeout(function() {
                	var url = suggestUrl.replace("QUERY", searchText.val());
                	$.get(url, function(data) {
                		searchResultsInfo.html($(data).html());
                	});
        		}, 250);
        	}
        });
    	END CUSTOM */
        filterItems.on('click', function(){
            var self = $(this);

            self.addClass('active').siblings().removeClass('active');

            if(self.data('target') === '*'){
                resultGroups.removeClass('hidden').removeClass('filtered');
            }else{
                resultGroups.addClass('hidden');
                $(self.data('target')).removeClass('hidden').addClass('filtered');
            }
        });

        resultGroupsSeeAll.on('click', function(){
            var self = $(this);
            var target = self.data('target');

            filterItems.filter("[data-target='"+target+"']").trigger("click");

            $('html, body').animate({
                scrollTop: $(".search-results--filter--filters").offset().top
            }, 1000);
        });

        scrollerLeft.on('click', function(){
            scrollFilterRight();
        });

        scrollerRight.on('click', function(){
            scrollFilterLeft();
        });

        showHideFilterScrollers();

        $(window).on('resize', function(){
            showHideFilterScrollers();
        });
    };

    var showHideFilterScrollers = window.leonardo.util.debounce(function(){
        if(parseFloat(filterItemInnerContainer.css('margin-left')) < 0){
            scrollerLeft.removeClass('hidden');
        }else{
            scrollerLeft.addClass('hidden');
        }

        if(filterItemOuterContainer.width() < (getChildrenWidth(filterItemInnerContainer) + parseFloat(filterItemInnerContainer.css('margin-left')))){
            scrollerRight.removeClass('hidden');
        }else{
            scrollerRight.addClass('hidden');
        }
    }, 500);

    function scrollFilterLeft(){
        var currentLeftMargin = parseFloat(filterItemInnerContainer.css('margin-left'));
        var filterItemInnerContainerWidth = getChildrenWidth(filterItemInnerContainer);
        var filterItemOuterContainerWidth = filterItemOuterContainer.width();
        var scrollWidth = null;

        //Check if scrolling left is possible
        if(filterItemInnerContainerWidth + currentLeftMargin > filterItemOuterContainerWidth){
            scrollWidth = filterItemInnerContainerWidth + currentLeftMargin - filterItemOuterContainerWidth;

            //Limit the scrollWidth, if needed
            if(scrollWidth > filterItemOuterContainerWidth) scrollWidth = filterItemOuterContainerWidth;
        }

        if(scrollWidth) updateFilterScrollPosition(currentLeftMargin - scrollWidth);
    }

    function scrollFilterRight(){
        var currentLeftMargin = parseFloat(filterItemInnerContainer.css('margin-left'));
        var filterItemInnerContainerWidth = getChildrenWidth(filterItemInnerContainer);
        var filterItemOuterContainerWidth = filterItemOuterContainer.width();
        var scrollWidth = null;

        //Check if scrolling right is possible
        if(currentLeftMargin < 0){
            scrollWidth = -1 * currentLeftMargin;

            //Limit the scrollWidth, if needed
            if(scrollWidth > filterItemOuterContainerWidth) scrollWidth = filterItemOuterContainerWidth;
        }

        if(scrollWidth) updateFilterScrollPosition(currentLeftMargin + scrollWidth);
    }

    function updateFilterScrollPosition(marginLeft){
        filterItemInnerContainer.css('margin-left', marginLeft + 'px');
        showHideFilterScrollers();
    }

    function getChildrenWidth(container) {
        if (!container.jquery) container = $(container);

        var childrenWidth = 0;
        container.children().each(function(i, e) {
            childrenWidth += $(e).outerWidth(true);
        });
        return childrenWidth;
    }

    window.leonardo.searchResults = searchResults;

})(jQuery);
//End Module: Search Results
;//Start Module: Search Widget - Global
(function($){
    'use strict';

    var searchWidgetGlobal = window.leonardo.searchWidgetGlobal || new Object({});

    var searchWidget =          $('.search-widget-global');
    var searchContainer =       $('.search-widget-global--content');
    var searchText =            $('.search-widget-global--content--search--text');
    var closeBtn =              $('.search-widget-global--close--btn-close');
    var errorAndSuggestion =    $('.search-widget-global--error-and-suggestion');
    var searchBtn =             $('.search-results--filter--search-content--action--icon');

    var autocompleteUrl = searchWidget.attr("data-autocomplete-url") || '';
    var suggestUrl = searchWidget.attr("data-suggest-url") || '';
    var suggestTimeout, suggestCallId = 0, suggestCall;

    searchWidgetGlobal.init = function(){

        if (!autocompleteUrl) {
            return;
        }

        searchText.parents("form").on("submit", function() {
            if (suggestCall) {
                searchData.remote.cancelLastRequest();
                suggestCall.abort();
                searchWidgetGlobal.hideErrorAndSuggestion();
            }
            //searchText.parents("form").find("button[type='submit']").attr('disabled', 'disabled');
        });

        var searchData = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.whitespace,
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: autocompleteUrl,
                wildcard: 'QUERY',
                rateLimitWait: 1500
            }
        });

        searchText.typeahead(
            {
                hint: false,
                highlight: true,
                minLength: 3,
                async: true
            }, {
                name: 'searchData',
                source: searchData
            }
        );

        searchText.on('typeahead:render', function(e, text) {
            if(text === undefined) {
                searchWidgetGlobal.showErrorAndSuggestion(searchText.val(), "<<Placeholder>>");
            } else {
                searchWidgetGlobal.hideSuggestion();
            }
        });

        searchText.on('typeahead:asyncrequest', function(e, text) {
            if (suggestUrl){
                errorAndSuggestion.html("<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: 5px;background: rgb(255, 255, 255, 0);display: block;\" width=\"20px\" height=\"20px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\"><g transform=\"translate(80,50)\"><g transform=\"rotate(0)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"1\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate></circle></g></g><g transform=\"translate(71.21320343559643,71.21320343559643)\"><g transform=\"rotate(45)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.875\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate></circle></g></g><g transform=\"translate(50,80)\"><g transform=\"rotate(90)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.75\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate></circle></g></g><g transform=\"translate(28.786796564403577,71.21320343559643)\"><g transform=\"rotate(135)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.625\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate></circle></g></g><g transform=\"translate(20,50.00000000000001)\"><g transform=\"rotate(180)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.5\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate></circle></g></g><g transform=\"translate(28.78679656440357,28.786796564403577)\"><g transform=\"rotate(225)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.375\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate></circle></g></g><g transform=\"translate(49.99999999999999,20)\"><g transform=\"rotate(270)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.25\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate></circle></g></g><g transform=\"translate(71.21320343559643,28.78679656440357)\"><g transform=\"rotate(315)\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\" fill-opacity=\"0.125\"> <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform> <animate attributeName=\"fill-opacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate></circle></g></g></svg>");
                clearTimeout(suggestTimeout);
                suggestTimeout = setTimeout(function() {
                    var url = suggestUrl.replace("QUERY", searchText.val());
                    var callId = ++suggestCallId;
                    if (suggestCall) suggestCall.abort();
                    suggestCall = $.get(url, function(data) {
                        if (callId == suggestCallId) errorAndSuggestion.html($(data).html());
                    });
                }, 50);
            }
        });
        searchText.on("typeahead:select", function(e, text) {
            searchText.trigger("typeahead:asyncrequest");
            searchText.parents("form").submit();
        });

        searchText.on('keyup', function(e){
            if(searchText.val().length === 0)
                searchWidgetGlobal.hideErrorAndSuggestion();
        });

    };

    closeBtn.on('click', function(){
        window.leonardo.searchWidgetGlobal.close();
    });
    function clickAnySearch() {
        if(searchWidget.hasClass('open')){

            // If user clicks inside the element, do nothing
            console.log('clock');
            if (event.target.closest('.search-widget-global--content')) return

            // If user clicks outside the element, hide it!
            window.leonardo.searchWidgetGlobal.close();
            document.removeEventListener("click",clickAnySearch );
        }
    }
    searchWidgetGlobal.open = function(searchString, searchStringSelStart, searchStringSelEnd){
        // FIX
        if (searchWidget.length == 0) {
            $(".search-results--filter--search-content--search--text").focus();
        }
        searchWidget.addClass('open');

        if(searchString){
            searchText.typeahead('val', searchString);
        }

        window.setTimeout(function(){
            // FIX
            if (searchText.length > 0){
                if(typeof(searchStringSelStart) !== 'undefined') searchText.get(0).selectionStart = searchStringSelStart;
                else searchText.get(0).selectionStart = searchText.val().length;
                if(typeof(searchStringSelEnd) !== 'undefined') searchText.get(0).selectionEnd = searchStringSelEnd;
                else searchText.get(0).selectionEnd = searchText.val().length;
            }
            document.addEventListener("click",clickAnySearch );
            searchText.focus();
        }, 100);
    };

    searchWidgetGlobal.close = function(){
        searchWidget.removeClass('open');
    };

    searchWidgetGlobal.showErrorAndSuggestion = function(error, suggestion){
        // CUSTOM
        /*errorAndSuggestion.css('top', (searchContainer.offset().top + searchContainer.height() + 50) + 'px');
        errorText.text(error);
        suggestionText.text(suggestion);*/
        errorAndSuggestion.addClass('show');
        searchWidgetGlobal.showSuggestion();
    };

    searchWidgetGlobal.hideErrorAndSuggestion = function(){
        errorAndSuggestion.removeClass('show');
    };

    searchWidgetGlobal.showSuggestion = function(){
        errorAndSuggestion.removeClass('nosuggestion');
    };

    searchWidgetGlobal.hideSuggestion = function(){
        errorAndSuggestion.addClass('nosuggestion');
    };

    window.leonardo.searchWidgetGlobal = searchWidgetGlobal;


})(jQuery);
//End Module: Search Widget - Global
;//Start Module: Section Navigator
(function($){
    'use stict';

    var sectionNavigator = window.leonardo.sectionNavigator || new Object({});

    var header = $('.header');
    var navigator = $('.section-navigator');
    var navigatorList = $('.section-navigator--list');
    var navigatorSpacer = $('.section-navigator--spacer');
    var navigatorListItems = $('.section-navigator--list--item');

    var navigatorWrap = $('.section-navigator--list--item-wrap');


    sectionNavigator.init = function(){
        var firstItem = null;
        var firstItemGap = document.body.offsetHeight;
        navigatorListItems.each(function(){
            var target = $($(this).attr("data-target"));
            if(target.length > 0 && target.offset().top < firstItemGap){
                firstItem = $(this);
                firstItemGap = target.offset().top;
            }
        });
        if(firstItem != null){
            firstItem.addClass('active')
        }

        if(navigator.length > 0){
            navigatorListItems.on('click', function(){
                var target = $($(this).attr('data-target'));

                if(target.length){
                    $('html, body').animate({
                        'scrollTop':target.offset().top-navigator.outerHeight()
                    }, 600);
                }
            });

            $(window).on('resize scroll', function(){
                if($(window).scrollTop() > navigator.offset().top){
                    navigatorList.addClass('sticky');
                    navigatorSpacer.height(navigatorList.height());
                }else{
                    navigatorList.removeClass('sticky');
                    navigatorSpacer.height(0);
                }

                var minimumGap = -document.body.offsetHeight;
                var thisGap = 0;
                navigatorListItems.each(function(){
                    var target = $($(this).attr("data-target"));
                    //LF TEAM: FIX
                    if(target.length > 0){
                        thisGap = target.offset().top - navigator.outerHeight() - ($(window).scrollTop() + 600);
                    }
                    if(target.length > 0 && target.offset().top - navigator.outerHeight() <= $(window).scrollTop() + 1 && thisGap <= 0 && thisGap >= minimumGap){
                        minimumGap = thisGap;
                        navigatorListItems.removeClass('active');
                        $(this).addClass('active');
                    }
//                    if(target.length > 0 && target.offset().top - navigator.outerHeight() <= $(window).scrollTop() + 1){
//                        navigatorListItems.removeClass('active');
//                        $(this).addClass('active');
//                    }
                });

            });

            $(window).trigger('scroll');
        }
    }

    window.leonardo.sectionNavigator = sectionNavigator;
})(jQuery);
//End Module: Section Navigator
;//Start Module: Service Locator Map
(function($){
    'use strict';

    var serviceLocatorMap = window.leonardo.serviceLocatorMap || new Object({});
    var serviceLocatorMapContainer = $(".service-locator-map");
    var mapContainer = document.getElementById('map-service-locator');
    var welcomeMessageContainer = $('.service-locator-map--map-container--welcome-message');
    var btnStartSearch = $('#start-service-locator-search');
    var navContainer = $('.service-locator-map--navbar');
    var btnNavItems = $('.service-locator-map--navbar--item');
    var mapOptionsDefault = {
        zoom: 3,
        center: {
            lat: 12.9421707,
            lng: 77.4630458
        },
        styles: [
            {
                "elementType": "geometry",
                "stylers": [{
                    "color": "#f5f5f5"
                }]
            },
            {
                "elementType": "labels",
                "stylers": [{
                    // "visibility": "off"
                }]
            },
            {
                "elementType": "labels.icon",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#616161"
                }]
            },
            {
                "elementType": "labels.text.stroke",
                "stylers": [{
                    "color": "#f5f5f5"
                }]
            },
            {
                "featureType": "administrative",
                "elementType": "geometry",
                "stylers": [{
                    // "visibility": "off"
                }]
            },
            {
                "featureType": "administrative",
                "elementType": "geometry.fill",
                "stylers": [
                    {
                        "color": "#9e9e9e"
                    }]
            },
            {
                "featureType": "administrative.land_parcel",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "administrative.land_parcel",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#bdbdbd"
                }]
            },
            {
                "featureType": "administrative.neighborhood",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "landscape.natural.landcover",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#e1e1e1"
                }]
            },
            {
                "featureType": "landscape.natural.terrain",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#e1e1e1"
                }]
            },
            {
                "featureType": "landscape.natural.terrain",
                "elementType": "geometry.stroke",
                "stylers": [{
                    "color": "#e1e1e1"
                },
                    {
                        "visibility": "simplified"
                    }
                ]
            },
            {
                "featureType": "poi",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "poi",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#eeeeee"
                }]
            },
            {
                "featureType": "poi",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#757575"
                }]
            },
            {
                "featureType": "poi.park",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#e5e5e5"
                }]
            },
            {
                "featureType": "poi.park",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#9e9e9e"
                }]
            },
            {
                "featureType": "road",
                "stylers": [{
                    // "visibility": "off"
                }]
            },
            {
                "featureType": "road",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#ffffff"
                }]
            },
            {
                "featureType": "road",
                "elementType": "labels.icon",
                "stylers": [{
                    // "visibility": "off"
                }]
            },
            {
                "featureType": "road.arterial",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#757575"
                }]
            },
            {
                "featureType": "road.highway",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#dadada"
                }]
            },
            {
                "featureType": "road.highway",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#616161"
                }]
            },
            {
                "featureType": "road.local",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#9e9e9e"
                }]
            },
            {
                "featureType": "transit",
                "stylers": [{
                    // "visibility": "off"
                }]
            },
            {
                "featureType": "transit.line",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#e5e5e5"
                }]
            },
            {
                "featureType": "transit.station",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#eeeeee"
                }]
            },
            {
                "featureType": "water",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#c9c9c9"
                }]
            },
            {
                "featureType": "water",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#ffffff"
                },
                    {
                        "saturation": 100
                    },
                    {
                        "lightness": 100
                    },
                    {
                        "visibility": "on"
                    }
                ]
            },
            {
                "featureType": "water",
                "elementType": "labels.text.fill",
                "stylers": [{
                    // "color": "#9e9e9e"
                }]
            }
        ],
        mapTypeControl: false,
        zoomControl: true,
        fullscreenControl: true,
        streetViewControl: false,
        scaleControl: true,
        gestureHandling: 'auto'
    };
    var mapOptionsLanding = {
        zoom: 2.25,
        center: {
            lat: 39.17116953678616,
            lng: 7.011720014888169
        },
        styles: [
            {
                "elementType": "geometry",
                "stylers": [{
                    "color": "#f5f5f5"
                }]
            },
            {
                "elementType": "labels",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "elementType": "labels.icon",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#616161"
                }]
            },
            {
                "elementType": "labels.text.stroke",
                "stylers": [{
                    "color": "#f5f5f5"
                }]
            },
            {
                "featureType": "administrative",
                "elementType": "geometry",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "administrative.land_parcel",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "administrative.land_parcel",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#bdbdbd"
                }]
            },
            {
                "featureType": "administrative.neighborhood",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "landscape.natural.landcover",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#e1e1e1"
                }]
            },
            {
                "featureType": "landscape.natural.terrain",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#e1e1e1"
                }]
            },
            {
                "featureType": "landscape.natural.terrain",
                "elementType": "geometry.stroke",
                "stylers": [{
                    "color": "#e1e1e1"
                },
                    {
                        "visibility": "simplified"
                    }
                ]
            },
            {
                "featureType": "poi",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "poi",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#eeeeee"
                }]
            },
            {
                "featureType": "poi",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#757575"
                }]
            },
            {
                "featureType": "poi.park",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#e5e5e5"
                }]
            },
            {
                "featureType": "poi.park",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#9e9e9e"
                }]
            },
            {
                "featureType": "road",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "road",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#ffffff"
                }]
            },
            {
                "featureType": "road",
                "elementType": "labels.icon",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "road.arterial",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#757575"
                }]
            },
            {
                "featureType": "road.highway",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#dadada"
                }]
            },
            {
                "featureType": "road.highway",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#616161"
                }]
            },
            {
                "featureType": "road.local",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#9e9e9e"
                }]
            },
            {
                "featureType": "transit",
                "stylers": [{
                    "visibility": "off"
                }]
            },
            {
                "featureType": "transit.line",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#e5e5e5"
                }]
            },
            {
                "featureType": "transit.station",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#eeeeee"
                }]
            },
            {
                "featureType": "water",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#c9c9c9"
                }]
            },
            {
                "featureType": "water",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#ffffff"
                },
                    {
                        "saturation": 100
                    },
                    {
                        "lightness": 100
                    },
                    {
                        "visibility": "on"
                    }
                ]
            },
            {
                "featureType": "water",
                "elementType": "labels.text.fill",
                "stylers": [{
                    "color": "#9e9e9e"
                }]
            }
        ],
        mapTypeControl: false,
        zoomControl: false,
        fullscreenControl: false,
        streetViewControl: false,
        scaleControl: false,
        gestureHandling: 'none'
    };
    var mapMaxZoomLevel = 15;
    var mapMarkers = [];
    var mapMarkerCluster;
    var mapMarkerIconDefault;
    var mapMarkerIconActive;
    var mapInfoWindow;
    var contactType = {
        facilities: {
            headOffices: "contactType.facilities.headOffices",
            manufacturingPlants: "contactType.facilities.manufacturingPlants",
            serviceCentres: "contactType.facilities.serviceCentres",
            repairCentres: "contactType.facilities.repairCentres",
            logisticCentres: "contactType.facilities.logisticCentres",
            trainingCentres: "contactType.facilities.trainingCentres"
        },
        people: {
            csManager: "contactType.people.csManager",
            technicalRepresentative: "contactType.people.technicalRepresentative",
            trainingManager: "contactType.people.trainingManager",
            salesManager: "contactType.people.salesManager"
        }
    };
    var svgMarkupArrowRight =
        '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="17" height="9" viewBox="0 0 17 9">' +
        '<g fill="none" fill-rule="evenodd">' +
        '<path class="arrow" fill="#000" d="M13.313 3.765L10.47 1.047 11.424 0l4.75 4.54L11.42 9l-.945-1.056 2.964-2.78H0V3.765h13.313z"/>' +
        '</g>' +
        '</svg>';
    var contactTypeSelected = serviceLocatorMapContainer.attr("data-contact-type") || contactType.facilities.serviceCentres;
    serviceLocatorMap.markerSelected = false;

    serviceLocatorMap.init = function(){
        if (serviceLocatorMapContainer.length > 0) {
            window.leonardo.maps.loadLibrary();
        }
        $(window).on('mapLibraryReady', function(){
            if(mapContainer != null){
                serviceLocatorMap.map = new google.maps.Map(mapContainer, mapOptionsLanding);
                mapMarkerIconDefault = {
                    url: Liferay.ThemeDisplay.getPathThemeImages() + '/icon-map-pointer.svg',
                    scaledSize: new google.maps.Size(25, 32),
                    origin: new google.maps.Point(0, 0)
                };
                mapMarkerIconActive = {
                    url: Liferay.ThemeDisplay.getPathThemeImages() + '/icon-map-pointer-active.svg',
                    scaledSize: new google.maps.Size(25, 32),
                    origin: new google.maps.Point(0, 0)
                };
                mapInfoWindow = new google.maps.InfoWindow();

                google.maps.event.addListener(mapInfoWindow, 'closeclick', function() {
                    deselectMapMarkers();
                });

                welcomeMessageContainer.removeClass('offscreen');
                serviceLocatorMap.loadSupportCentresData(function(data){
                    serviceLocatorMap.processSupportCentresData(data);
                    navContainer.removeClass('fade');
                    btnStartSearch.removeClass("disabled");
                    buildFilterCustom();
//                    buildFilter();
                });

                btnNavItems.on('click', function(){
                    if($(this).hasClass('selected')){
                        $(this).removeClass('selected');
                    } else {
                        btnNavItems.removeClass('selected');
                        $(this).addClass('selected');
                        //                    buildFilterCustom();
                        //                  buildFilter();
                    }
                    buildAddresses();
                });

                btnStartSearch.on('click', function(){
                    if ($(this).hasClass("disabled")) return;
                    welcomeMessageContainer.addClass('offscreen');
                    serviceLocatorMap.map.setOptions(mapOptionsDefault);
                    buildAddresses();
                    //$('.service-locator-map--navbar--item[data-contact-type="'+contactTypeSelected+'"]').trigger("click");
                });

            }
        });
    };

    serviceLocatorMap.loadSupportCentresData = function(cb){
        var responseData;
        var url = serviceLocatorMapContainer.attr("data-url") || "";
        url = Liferay.Util.addParams("rnd="+window.leonardo.util.guid(), url);

        if (url){
            $.ajax({
                type: 'GET',
                dataType: "json",
                url: url,
                success: function(data){
                    if(typeof(data) != 'object') data = JSON.parse(data);
                    responseData = data;
                },
                error: function(XMLHttpRequest, textStatus, errorThrown) {
                    if(console){
                        console.log (textStatus);
                        console.log (errorThrown);
                    }
                },
                complete: function(xhr, status){
                    if(status == 'success'){
                        if(cb) cb(responseData);
                    }else{
                        if(console){
                            console.log('Status: ' + xhr.statusText);
                            console.log(xhr);
                        }
                    }
                }
            });
        } else {
            cb();
        }

    };

    serviceLocatorMap.processSupportCentresData = function(data){
        serviceLocatorMap.data = serviceLocatorMap.data || {};
        serviceLocatorMap.data.original = data;
        serviceLocatorMap.data.processed = serviceLocatorMap.data.processed || {};
        serviceLocatorMap.data.processed.facilities = serviceLocatorMap.data.processed.facilities || {};
        serviceLocatorMap.data.processed.people = serviceLocatorMap.data.processed.people || {};

        if(data){
            var tempData;

            if(data.headOffices){
                serviceLocatorMap.data.processed.facilities.headOffices = [];

                var regions = Object.keys(data.headOffices);
                regions.forEach(function(e) {
                    data.headOffices[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.headOffices.push(e);
                    });
                });
            }

            if(data.manufacturingPlants){
                serviceLocatorMap.data.processed.facilities.manufacturingPlants = [];

                var regions = Object.keys(data.manufacturingPlants);
                regions.forEach(function(e) {
                    data.manufacturingPlants[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.manufacturingPlants.push(e);
                    });
                });
            }

            if(data.serviceCentres){
                serviceLocatorMap.data.processed.facilities.serviceCentres = [];

                var regions = Object.keys(data.serviceCentres);
                regions.forEach(function(e) {
                    data.serviceCentres[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.serviceCentres.push(e);
                    });
                });
            }

            if(data.repairCentres){
                serviceLocatorMap.data.processed.facilities.repairCentres = [];

                var regions = Object.keys(data.repairCentres);
                regions.forEach(function(e) {
                    data.repairCentres[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.repairCentres.push(e);
                    });
                });
            }

            if(data.logisticCentres){
                serviceLocatorMap.data.processed.facilities.logisticCentres = [];

                var regions = Object.keys(data.logisticCentres);
                regions.forEach(function(e) {
                    data.logisticCentres[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.logisticCentres.push(e);
                    });
                });
            }

            if(data.trainingCentres){
                serviceLocatorMap.data.processed.facilities.trainingCentres = [];

                var regions = Object.keys(data.trainingCentres);
                regions.forEach(function(e) {
                    data.trainingCentres[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.facilities.trainingCentres.push(e);
                    });
                });
            }

            if(data.csManager){
                serviceLocatorMap.data.processed.people.csManager = [];

                var regions = Object.keys(data.csManager);
                regions.forEach(function(e) {
                    data.csManager[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.people.csManager.push(e);
                    });
                });
            }

            if(data.technicalRepresentative){
                serviceLocatorMap.data.processed.people.technicalRepresentative = [];

                var regions = Object.keys(data.technicalRepresentative);
                regions.forEach(function(e) {
                    data.technicalRepresentative[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.people.technicalRepresentative.push(e);
                    });
                });
            }

            if(data.trainingManager){
                serviceLocatorMap.data.processed.people.trainingManager = [];

                var regions = Object.keys(data.trainingManager);
                regions.forEach(function(e) {
                    data.trainingManager[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.people.trainingManager.push(e);
                    });
                });
            }

            if(data.salesManager){
                serviceLocatorMap.data.processed.people.salesManager = [];

                var regions = Object.keys(data.salesManager);
                regions.forEach(function(e) {
                    data.salesManager[e].forEach(function(e) {
                        serviceLocatorMap.data.processed.people.salesManager.push(e);
                    });
                });
            }
        }
    };

    function getDomains(data){
        var retData = [];

        if(data){
            if(data.length){
                data.forEach(function(e, i){
                    if(e.domain){
                        if(retData.indexOf(e.domain) < 0){
                            retData.push(e.domain);
                        }
                    }
                });
            }
        }
        retData.sort();

        return retData;
    }

    function getDivisions(data){
        var retData = [];

        if(data){
            if(data.length){
                data.forEach(function(e, i){
                    if(e.division){
                        if(retData.indexOf(e.division) < 0){
                            retData.push(e.division);
                        }
                    }
                });
            }
        }
        retData.sort();

        return retData;
    }

    function getRegions(data){
        var retData = [];

        if(data){
            if(data.length){
                data.forEach(function(e, i){
                    if(e.continent){
                        if(retData.indexOf(e.continent) < 0){
                            retData.push(e.continent);
                        }
                    }
                });
            }
        }
        retData.sort();

        return retData;
    }

    function getCountriesInRegion(data, region){
        var retData = [];

        if(data && region){
            if(data.length){
                data.forEach(function(e, i){
                    if(e.continent.toUpperCase() === region.toUpperCase() && retData.indexOf(e.country) < 0){
                        retData.push(e.country);
                    }
                });
            }
        }
        retData.sort();

        return retData;
    }

    function getRegion2InCountry(data, country){
        var retData = [];

        if(data && country){
            if(data.length){
                data.forEach(function(e, i){
                    if(e.country.toUpperCase() === country.toUpperCase() && e.region != null && retData.indexOf(e.region) < 0){
                        retData.push(e.region);
                    }
                });
            }
        }
        retData.sort();

        return retData;
    }

    serviceLocatorMap.getAllData = function(){
        var data = [];
        //costruisco tutto l'oggetto con l'info del contactType x ogni POI
        $.each(window.leonardo.serviceLocatorMap.data.processed, function(key, item){
            $.each(item, function(contractType, array){
                $.each(array, function (index, object){
                    object.contactType = "contactType." + key + "." + contractType;
                    data.push(object);
                })
            });
        });
        return data;
    };

    serviceLocatorMap.getSelectedData = function(){
        //Returns the data corresponding to the currently selected category in the nav
        var selected = btnNavItems.filter('.selected').data('contact-type');
        switch(selected){
            case contactType.facilities.headOffices:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.headOffices;
                break;
            case contactType.facilities.manufacturingPlants:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.manufacturingPlants;
                break;
            case contactType.facilities.serviceCentres:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.serviceCentres;
                break;
            case contactType.facilities.repairCentres:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.repairCentres;
                break;
            case contactType.facilities.logisticCentres:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.logisticCentres;
                break;
            case contactType.facilities.trainingCentres:
                return window.leonardo.serviceLocatorMap.data.processed.facilities.trainingCentres;
                break;
            case contactType.people.csManager:
                return window.leonardo.serviceLocatorMap.data.processed.people.csManager;
                break;
            case contactType.people.technicalRepresentative:
                return window.leonardo.serviceLocatorMap.data.processed.people.technicalRepresentative;
                break;
            case contactType.people.trainingManager:
                return window.leonardo.serviceLocatorMap.data.processed.people.trainingManager;
                break;
            case contactType.people.salesManager:
                return window.leonardo.serviceLocatorMap.data.processed.people.salesManager;
                break;
            default:
                var data = [];
                var facilities = Object.keys(window.leonardo.serviceLocatorMap.data.processed.facilities);
                facilities.forEach(function(e) {
                    window.leonardo.serviceLocatorMap.data.processed.facilities[e].forEach(function(e) {
                        data = data.concat(e);
                    });
                });
                var people = Object.keys(window.leonardo.serviceLocatorMap.data.processed.people);
                people.forEach(function(e) {
                    window.leonardo.serviceLocatorMap.data.processed.people[e].forEach(function(e) {
                        data = data.concat(e);
                    });
                });
                return data;
        }
    };

    serviceLocatorMap.getfilterData = function(data){
        if(data){

            var selectedDomain = $('.service-locator-map--filters--filter--level1.selected').children('[data-filter-type="domain"]');

            selectedDomain = selectedDomain.length ? selectedDomain.text() : null;

            if(selectedDomain){
                data = data.filter(function(e, i, arr){
                    if(e.domain){
                        return e.domain.toUpperCase() == selectedDomain.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

            var selectedDivision = $('.service-locator-map--filters--filter--level1.selected').children('[data-filter-type="division"]');

            selectedDivision = selectedDivision.length ? selectedDivision.text() : null;

            if(selectedDivision){
                data = data.filter(function(e, i, arr){
                    if(e.division){
                        return e.division.toUpperCase() == selectedDivision.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

            var selectedContinet = $('.service-locator-map--filters--filter--level1.selected').children('[data-filter-type="continent"]');
            var selectedCountry = selectedContinet.parent().find('.service-locator-map--filters--filter--level2.selected').children('[data-filter-type="country"]');
            var selectedRegion = selectedCountry.parent().find('.service-locator-map--filters--filter--level3.selected').children('[data-filter-type="region"]');

            selectedContinet = selectedContinet.length ? selectedContinet.text() : null;
            selectedCountry = selectedCountry.length ? selectedCountry.text() : null;
            selectedRegion = selectedRegion.length ? selectedRegion.text() : null;

            if(selectedContinet){
                data = data.filter(function(e, i, arr){
                    if(e.continent){
                        return e.continent.toUpperCase() == selectedContinet.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

            if(selectedCountry){
                data = data.filter(function(e, i, arr){
                    if(e.country){
                        return e.country.toUpperCase() == selectedCountry.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

            if(selectedRegion){
                data = data.filter(function(e, i, arr){
                    if(e.region){
                        return e.region.toUpperCase() == selectedRegion.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

            var selectedContactType = btnNavItems.filter('.selected').data('contact-type');

            if(selectedContactType != null){
                data = data.filter(function(e, i, arr){
                    if(e.contactType){
                        return e.contactType.toUpperCase() == selectedContactType.toUpperCase();
                    }else{
                        return false;
                    }
                });
            }

        }

        return data;
    };

    function buildFilterCustom(){
        var data =                          serviceLocatorMap.getfilterData(serviceLocatorMap.getAllData());
        var filtersContainer =              $('.service-locator-map--filters');
        var addressesContainer =            $('.service-locator-map--addresses');
        var noDataNotificationContainer =   $('.service-locator-map--no-data-notification');

        if(data){
            if(data.length){
                var filterContainer = $('.service-locator-map--filters--filter');

                clearFilterUI();
                filterContainer.get(0).appendChild(createFilterElement(buildDomainFilterData(data)));
                filterContainer.get(0).appendChild(createFilterElement(buildDivisionFilterData(data)));
                filterContainer.get(0).appendChild(createFilterElement(buildRegionFilterData(data)));

                filtersContainer.removeClass('hidden');
                addressesContainer.removeClass('hidden');
                noDataNotificationContainer.addClass('hidden');

                //Attach event listeners
                var filterItems =           $('.service-locator-map--filters--filter--level0--item, .service-locator-map--filters--filter--level1--item, .service-locator-map--filters--filter--level2--item, .service-locator-map--filters--filter--level3--item');
                var filterButtons =         filterItems.filter('.btn-leo-filter');
                var filterMenuButton =      $('.service-locator-map--filters--misc--menu-trigger');
                var filterCloseButton =     $('.service-locator-map--filters--misc--close-button');
                var filterResetButton =     $('.service-locator-map--filters--misc--reset-button');
                var l0FilterClass =         '.service-locator-map--filters--filter--level0';

                filterItems.on('click', function(){

                    var filterItem = $(this);

                    if($(window).scrollTop() === 0 && !(filterItem.parent().hasClass('selected'))){
                        $('html, body').animate({
                            'scrollTop': $(this).offset().top - $(this).outerHeight() - ($(".service-locator-map--map-container").outerHeight()/2)
                        }, 600);
                    }

                    if(filterItem.parent().hasClass('selected')){
                        filterItem.parent().removeClass('selected').css('padding-bottom', '0');
                    }else{
                        filterItem
                            .parent()
                            .addClass('selected')
                            .siblings()
                            .removeClass('selected');
                    }

                    var l0Filter = filterItem.closest(l0FilterClass);
                    var l0SubItem = $('.service-locator-map--filters--filter--level0.selected')
                        .children('.service-locator-map--filters--filter--level0--sub-items');
                    var l1SubItem = $('.service-locator-map--filters--filter--level1.selected')
                        .children('.service-locator-map--filters--filter--level1--sub-items');
                    var l2SubItem = $('.service-locator-map--filters--filter--level2.selected')
                        .children('.service-locator-map--filters--filter--level2--sub-items');

                    var l0SubItemHeight = 0;
                    var l1SubItemHeight = 0;
                    var l2SubItemHeight = 0;

                    //Adjust the height of the level0 container, becuase the sub-items container is absolutely positioned in non-mobile breakpoints
                    if(l0SubItem.length && l0SubItem.parent().hasClass('selected')){
                        l0SubItemHeight = l0SubItem.outerHeight(true);
                    }else{
                        l0SubItemHeight = 0;
                    }

                    if(l1SubItem.length && l1SubItem.parent().hasClass('selected')){
                        l1SubItemHeight = l1SubItem.outerHeight(true);
                    }else{
                        l1SubItemHeight = 0;
                    }

                    if(l2SubItem.length && l2SubItem.parent().hasClass('selected')){
                        l2SubItemHeight = l2SubItem.outerHeight(true);
                    }else{
                        l2SubItemHeight = 0;
                    }

                    l0Filter
                        .css('padding-bottom', (l0SubItemHeight + l1SubItemHeight + l2SubItemHeight) + 'px')
                        .siblings()
                        .css('padding-bottom', '0');
                });

                filterButtons.on('click', function(){
                    manageSubFilterActiveClass();
                    buildAddresses();
                });

                filterMenuButton.on('click', function(){
                    filtersContainer.toggleClass('filter-menu-open');
                });

                filterCloseButton.on('click', function(){
                    filtersContainer.removeClass('filter-menu-open');
                });

                filterResetButton.on('click', function(){
                    //resetFilters();
                    location.reload();
                });
            }else{
                clearMapMarkers();
                //filtersContainer.addClass('hidden');
                addressesContainer.addClass('hidden');
                noDataNotificationContainer.removeClass('hidden');
                hideArrowResults();
            }
        }else{
            clearMapMarkers();
            //filtersContainer.addClass('hidden');
            addressesContainer.addClass('hidden');
            noDataNotificationContainer.removeClass('hidden');
            hideArrowResults();
        }
    }

    function buildFilter(){
        var data =                          serviceLocatorMap.getSelectedData();
        var filtersContainer =              $('.service-locator-map--filters');
        var addressesContainer =            $('.service-locator-map--addresses');
        var noDataNotificationContainer =   $('.service-locator-map--no-data-notification');

        if(data){
            if(data.length){
                var filterContainer = $('.service-locator-map--filters--filter');

                clearFilterUI();
                filterContainer.get(0).appendChild(createFilterElement(buildDomainFilterData(data)));
                filterContainer.get(0).appendChild(createFilterElement(buildDivisionFilterData(data)));
                filterContainer.get(0).appendChild(createFilterElement(buildRegionFilterData(data)));

                filtersContainer.removeClass('hidden');
                addressesContainer.removeClass('hidden');
                noDataNotificationContainer.addClass('hidden');

                //Attach event listeners
                var filterItems =           $('.service-locator-map--filters--filter--level0--item, .service-locator-map--filters--filter--level1--item, .service-locator-map--filters--filter--level2--item, .service-locator-map--filters--filter--level3--item');
                var filterButtons =         filterItems.filter('.btn-leo-filter');
                var filterMenuButton =      $('.service-locator-map--filters--misc--menu-trigger');
                var filterCloseButton =     $('.service-locator-map--filters--misc--close-button');
                var filterResetButton =     $('.service-locator-map--filters--misc--reset-button');
                var l0FilterClass =         '.service-locator-map--filters--filter--level0';

                filterItems.on('click', function(){
                    var filterItem = $(this);

                    if(filterItem.parent().hasClass('selected')){
                        filterItem.parent().removeClass('selected').css('padding-bottom', '0');
                    }else{
                        filterItem
                            .parent()
                            .addClass('selected')
                            .siblings()
                            .removeClass('selected');
                    }

                    var l0Filter = filterItem.closest(l0FilterClass);
                    var l0SubItem = $('.service-locator-map--filters--filter--level0.selected')
                        .children('.service-locator-map--filters--filter--level0--sub-items');
                    var l1SubItem = $('.service-locator-map--filters--filter--level1.selected')
                        .children('.service-locator-map--filters--filter--level1--sub-items');
                    var l2SubItem = $('.service-locator-map--filters--filter--level2.selected')
                        .children('.service-locator-map--filters--filter--level2--sub-items');

                    var l0SubItemHeight = 0;
                    var l1SubItemHeight = 0;
                    var l2SubItemHeight = 0;

                    //Adjust the height of the level0 container, becuase the sub-items container is absolutely positioned in non-mobile breakpoints
                    if(l0SubItem.length && l0SubItem.parent().hasClass('selected')){
                        l0SubItemHeight = l0SubItem.outerHeight(true);
                    }else{
                        l0SubItemHeight = 0;
                    }

                    if(l1SubItem.length && l1SubItem.parent().hasClass('selected')){
                        l1SubItemHeight = l1SubItem.outerHeight(true);
                    }else{
                        l1SubItemHeight = 0;
                    }

                    if(l2SubItem.length && l2SubItem.parent().hasClass('selected')){
                        l2SubItemHeight = l2SubItem.outerHeight(true);
                    }else{
                        l2SubItemHeight = 0;
                    }

                    l0Filter
                        .css('padding-bottom', (l0SubItemHeight + l1SubItemHeight + l2SubItemHeight) + 'px')
                        .siblings()
                        .css('padding-bottom', '0');
                });

                filterButtons.on('click', function(){
                    if(btnNavItems.filter('.selected').data('contact-type') == null){
                        $('.service-locator-map--navbar--item[data-contact-type="'+contactTypeSelected+'"]').addClass("selected");
                    }
                    manageSubFilterActiveClass();

                    buildAddresses();
                });

                filterMenuButton.on('click', function(){
                    filtersContainer.toggleClass('filter-menu-open');
                });

                filterCloseButton.on('click', function(){
                    filtersContainer.removeClass('filter-menu-open');
                });

                filterResetButton.on('click', function(){
                    //resetFilters();
                    location.reload();
                });
            }else{
                clearMapMarkers();
                //filtersContainer.addClass('hidden');
                addressesContainer.addClass('hidden');
                noDataNotificationContainer.removeClass('hidden');
                hideArrowResults();
            }
        }else{
            clearMapMarkers();
            //filtersContainer.addClass('hidden');
            addressesContainer.addClass('hidden');
            noDataNotificationContainer.removeClass('hidden');
            hideArrowResults();
        }
    }

    function manageSubFilterActiveClass(){
        if($('.service-locator-map--filters--filter--level0.selected .service-locator-map--filters--filter--level0--sub-items>.selected').length > 0){
            $('.service-locator-map--filters--filter--level0.selected .service-locator-map--filters--filter--level0--item').addClass("subFilterActive");
        } else {
            $('.service-locator-map--filters--filter--level0.selected .service-locator-map--filters--filter--level0--item').removeClass("subFilterActive");
        }
    }

    function buildAddresses(){
        var data = serviceLocatorMap.getfilterData(serviceLocatorMap.getAllData());

        if(data){
            var addressesContainer = $('.service-locator-map--addresses');
            addressesContainer.empty();
            //var sameAddress = new Set();
            var sameAddress = new Map();

            data.forEach(function(addr, i){
                var idAddr = buildPoiIdentifier(addr);
                if(!sameAddress.has(idAddr)){
                    sameAddress.set(idAddr, addr.dataArticleId);
                    addressesContainer.get(0).appendChild(createAddressElement(addr));
                } else {
                    var siblingArticleId = sameAddress.get(idAddr);

//                	var containerArticleInfo = document.createElement('div');
//                	containerArticleInfo.setAttribute('class', 'journal-article-info-container');
//                	containerArticleInfo.setAttribute('id', addr.dataArticleId);
//
//            		var articleInfo = document.createElement('div');
//                	articleInfo.setAttribute('class', 'journal-article-info');
//                	articleInfo.setAttribute('style', 'display:none;');
//                	articleInfo.setAttribute('data-article-id', addr.dataArticleId);
//                	articleInfo.setAttribute('data-template', 'Service POI Search');
//                	articleInfo.innerHTML = "<svg class=\"lexicon-icon lexicon-icon-info-panel-closed\" focusable=\"false\" role=\"presentation\" title=\"\" viewBox=\"0 0 512 512\"><path class=\"lexicon-icon-body\" fill=\"none\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z\"></path><path class=\"lexicon-icon-outline\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z M256,480C132.5,480,32,379.5,32,256S132.5,32,256,32s224,100.5,224,224S379.5,480,256,480z\"></path><path class=\"lexicon-icon-outline\" d=\"M288,384V224c0-17.7-14.3-32-32-32c-17.7,0-32,14.3-32,32v160c0,17.7,14.3,32,32,32C273.7,416,288,401.7,288,384z\"></path><circle cx=\"256\" cy=\"128\" r=\"32\"></circle></svg>"

//            		containerArticleInfo.append(articleInfo);
                    var articleIds = JSON.parse($("#"+siblingArticleId)[0].getAttribute('data-article-id'));
                    if(!Array.isArray(articleIds)){
                        var arrayArticleIds = [""+articleIds];
                        arrayArticleIds.push(addr.dataArticleId);
                        $("#"+siblingArticleId)[0].setAttribute('data-article-id', JSON.stringify(arrayArticleIds));
                    } else {
                        articleIds.push(addr.dataArticleId);
                        $("#"+siblingArticleId)[0].setAttribute('data-article-id', JSON.stringify(articleIds));
                    }
                }
            });

            if(window.Liferay.PopoverInfo){
                window.Liferay.PopoverInfo.init();
            }

            buildMapMarkers(data);

            if(!data.length){
                hideArrowResults();
                var emptyMessage = '<div class="empty-message">'+ Liferay.Language.get('the-applied-filter-did-not-produce-any-results') +'</div>';
                $(addressesContainer.get(0)).append(emptyMessage);
            } else {
                showArrowResults();
            }
        }
    }

    function buildPoiIdentifier(addr){
        var id = "";
        if (addr.continent) {id += addr.continent.trim()+"-";}
        if (addr.division) {id += addr.division.trim()+"-";}
        if (addr.country) {id += addr.country.trim()+"-";}
        if (addr.capability) {id += addr.capability.trim()+"-";}
        if (addr.poiAddress) {id += addr.poiAddress.trim()+"-";}
        if (addr.domain) {id += addr.domain.trim()+"-";}
        addr.details.forEach(function(detail, i){
            detail.poiEmail.forEach(function(email, j){
                id += email+"-";
            });
            detail.poiPhone.forEach(function(phone, j){
                id += phone+"-";
            });
            id += detail.poiTitle+"-";
        });
        return id;
    }

    function showArrowResults(){
        $('.service-locator-map--filters--misc--container .section-grid').removeClass('invisible');
    }

    function hideArrowResults(){
        $('.service-locator-map--filters--misc--container .section-grid').addClass('invisible');
    }

    function buildMapMarkers(data){
        if(data){
            //Remove markers already present
            clearMapMarkers();

            //Set the map in active mode, if not already done
            if(!welcomeMessageContainer.hasClass('offscreen')){
                welcomeMessageContainer.addClass('offscreen');
                serviceLocatorMap.map.setOptions(mapOptionsDefault);
            }

            //Create markers, one each for every address
            data.forEach(function(address){
                var marker = new google.maps.Marker({
                    position: {
                        lat: parseFloat(address.poiLatitude),
                        lng: parseFloat(address.poiLongitude)
                    },
                    icon: mapMarkerIconDefault,
                    animation: google.maps.Animation.DROP,
                    map: serviceLocatorMap.map,
                    data: address
                });

                google.maps.event.addListener(marker, 'click', function(){
                    deselectMapMarkers();
                    marker.setIcon(mapMarkerIconActive);
                    showInfoWindow(marker, address);
                });

                if ( !serviceLocatorMap.markerSelected && (address.selected || false) ){
                    serviceLocatorMap.markerSelected = true;
                    setTimeout(function() {
                        serviceLocatorMap.map.setZoom(mapMaxZoomLevel);
                        serviceLocatorMap.map.panTo(marker.position);
                        google.maps.event.trigger(marker, "click");
                    }, 500);
                }

                mapMarkers.push(marker);
            });

            var fmc = function() {
                if (typeof MarkerClusterer !== 'undefined' && MarkerClusterer != null) {
                    mapMarkerCluster = new MarkerClusterer(serviceLocatorMap.map, mapMarkers, {
                        imagePath: '/o/leonardocompany-theme/images/maps/m'
                    });
                    mapMarkerCluster.setStyles(mapMarkerCluster.getStyles().map(function (style) {
                        style.textColor = '#fff';
                        return style;
                    }));

                    /**
                     * Override the clusterclick event
                     */
                    ClusterIcon.prototype.triggerClusterClick = function() {
                        var samePosition = true;
                        var markers = this.cluster_.getMarkers();
                        var position = markers[0].getPosition();
                        markers.forEach(function(marker){
                            if(!marker.getPosition().equals(position)){
                                samePosition = false;
                                return false;
                            }
                        });
                        if (!samePosition) {
                            // Zoom into the cluster.
                            this.map_.fitBounds(this.cluster_.getBounds());

                            // modified zoom in function
                        } else {
                            deselectMapMarkers();
                            var addresses = [];
                            for(var i=0;i<markers.length;i++){
                                addresses[i] = markers[i].data;
                            }
                            markers[0].setIcon(mapMarkerIconActive);
                            showMultipleMakersInfoWindow(markers[0], addresses);
                        }
                    };
                } else {
                    setTimeout(fmc, 500);
                }
            };
            setTimeout(fmc, 500);

            //Zoom and center the map appropriately
            var mapMarkerBounds = new google.maps.LatLngBounds();

            mapMarkers.forEach(function(marker){
                mapMarkerBounds.extend(marker.getPosition());
            });
            if(mapMarkers.length){
                serviceLocatorMap.map.fitBounds(mapMarkerBounds);
                serviceLocatorMap.map.setCenter(mapMarkerBounds.getCenter());
            }

            if(serviceLocatorMap.map.zoom > mapMaxZoomLevel) serviceLocatorMap.map.setZoom(mapMaxZoomLevel);
        }
    }

    function resetFilters(){
        var filtersContainer = $('.service-locator-map--filters');

        filtersContainer.find('.service-locator-map--filters--filter--level2.selected')
            .removeClass('selected');
        filtersContainer.find('.service-locator-map--filters--filter--level1.selected')
            .removeClass('selected');
        filtersContainer.find('.service-locator-map--filters--filter--level0.selected')
            .children('.service-locator-map--filters--filter--level0--item')
            .trigger('click');

        window.setTimeout(function(){
            buildAddresses();
        }, 250);
    }

    function showMultipleMakersInfoWindow(marker, data){
        mapInfoWindow.setContent(createMultipleAddressElements(data));
        mapInfoWindow.open(serviceLocatorMap.map, marker);
    }

    function showInfoWindow(marker, data){
        mapInfoWindow.setContent(createAddressElement(data, true));
        mapInfoWindow.open(serviceLocatorMap.map, marker);
    }

    function createCustomFilterElement(item){
        var filterClassLevel0 = 'service-locator-map--filters--filter--level0';
        var filterItemClassLevel0 = 'service-locator-map--filters--filter--level0--item';
        var filterClassLevel1 = 'service-locator-map--filters--filter--level1';
        var filterItemClassLevel1 = 'service-locator-map--filters--filter--level1--item btn-leo btn-leo-filter';
        var filterClassLevel2 = 'service-locator-map--filters--filter--level2';
        var filterItemClassLevel2 = 'service-locator-map--filters--filter--level2--item btn-leo btn-leo-filter btn-leo-filter-dark';
        var filterClassLevel3 = 'service-locator-map--filters--filter--level3';
        var filterItemClassLevel3 = 'service-locator-map--filters--filter--level3--item btn-leo btn-leo-filter btn-leo-filter-grey';

        var filter = document.createElement('div');

        var filterLevel0 = document.createElement('div');
        filterLevel0.setAttribute('class', filterClassLevel0);
        var filterLevel1 = document.createElement('div');
        filterLevel1.setAttribute('class', filterClassLevel1);
        var filterLevel2 = document.createElement('div');
        filterLevel2.setAttribute('class', filterClassLevel2);
        var filterLevel3 = document.createElement('div');
        filterLevel3.setAttribute('class', filterClassLevel3);

        var filterItem = document.createElement('a');
        filterItem.setAttribute('class', filterItemClassLevel0);
        filterItem.setAttribute('href', item.href);
        filterItem.setAttribute('title', item.title);
        if(item.filterType) filterItem.setAttribute('data-filter-type', item.filterType);
        filterItem.innerHTML = item.title;

        filterLevel0.appendChild(filterItem);

        if(item.subItems){
            item.subItems.forEach(function(subItemLevel1, i){
                var filterItem = document.createElement('a');
                filterItem.setAttribute('class', filterItemClassLevel1);
                filterItem.setAttribute('href', subItemLevel1.href);
                filterItem.setAttribute('title', subItemLevel1.title);
                if(item.filterType) filterItem.setAttribute('data-filter-type', subItemLevel1.filterType);
                filterItem.innerHTML = subItemLevel1.title;
                filterLevel1.appendChild(filterItem);

                //Level2
                if(subItemLevel1.subItems){
                    subItemLevel1.subItems.forEach(function(subItemLevel2, i){
                        var filterItem = document.createElement('a');
                        filterItem.setAttribute('class', filterItemClassLevel2);
                        filterItem.setAttribute('href', subItemLevel2.href);
                        filterItem.setAttribute('title', subItemLevel2.title);
                        if(item.filterType) filterItem.setAttribute('data-filter-type', subItemLevel2.filterType);
                        filterItem.innerHTML = subItemLevel2.title;
                        filterLevel2.appendChild(filterItem);

                        //Level3
                        if(subItemLevel2.subItems){
                            subItemLevel2.subItems.forEach(function(subItemLevel3, i){
                                var filterItem = document.createElement('a');
                                filterItem.setAttribute('class', filterItemClassLevel3);
                                filterItem.setAttribute('href', subItemLevel3.href);
                                filterItem.setAttribute('title', subItemLevel3.title);
                                if(item.filterType) filterItem.setAttribute('data-filter-type', subItemLevel3.filterType);
                                filterItem.innerHTML = subItemLevel3.title;
                                filterLevel3.appendChild(filterItem);
                            });
                        }
                    });
                }
            });
        }
        filterLevel2.appendChild(filterLevel3);
        filterLevel1.appendChild(filterLevel2);
        filterLevel0.appendChild(filterLevel1);

        return filterLevel0;
    }

    function createFilterElement(item){
        var filterClass;
        var filterItemClass;

        switch(item.level){
            case 0:
                filterClass = 'service-locator-map--filters--filter--level0';
                filterItemClass = 'service-locator-map--filters--filter--level0--item';
                break;
            case 1:
                filterClass = 'service-locator-map--filters--filter--level1';
                filterItemClass = 'service-locator-map--filters--filter--level1--item btn-leo btn-leo-filter';
                break;
            case 2:
                filterClass = 'service-locator-map--filters--filter--level2';
                filterItemClass = 'service-locator-map--filters--filter--level2--item btn-leo btn-leo-filter btn-leo-filter-dark';
                break;
            case 3:
                filterClass = 'service-locator-map--filters--filter--level3';
                filterItemClass = 'service-locator-map--filters--filter--level3--item btn-leo btn-leo-filter btn-leo-filter-grey';
                break;
        }

        var filter = document.createElement('div');
        filter.setAttribute('class', filterClass);

        var filterItem = document.createElement('a');
        filterItem.setAttribute('class', filterItemClass);
        filterItem.setAttribute('href', item.href);
        filterItem.setAttribute('title', item.title);
        if(item.filterType) filterItem.setAttribute('data-filter-type', item.filterType);
        filterItem.innerHTML = item.title;
        filter.appendChild(filterItem);

        if(item.subItems){
            if(item.subItems.length){
                var subFilterContainer = document.createElement('div');
                subFilterContainer.setAttribute('class', filterClass + '--sub-items');

                item.subItems.forEach(function(subItem, i){
                    subFilterContainer.appendChild(createFilterElement(subItem));
                });

                filter.appendChild(subFilterContainer);
            }
        }

        return filter;
    }

    function createMultipleAddressElements(addresses){
        var addressElements = document.createElement('div');
        for(var i=0;i<addresses.length;i++){
            var data = addresses[i];
            var addressElement = document.createElement('div');
            var addressElementClass = "service-locator-map--addresses--address";
            var infoWindowClass = "map-info-window";

            addressElement.setAttribute('class', addressElementClass + ' ' + infoWindowClass);

            if(data){

                var containerArticleInfo = document.createElement('div');
                containerArticleInfo.setAttribute('class', 'journal-article-info-container');

                var articleInfo = document.createElement('div');
                articleInfo.setAttribute('class', 'journal-article-info');
                articleInfo.setAttribute('style', 'display:none;');
                articleInfo.setAttribute('data-article-id', data.dataArticleId);
                articleInfo.setAttribute('data-template', 'Service POI Search');
                articleInfo.innerHTML = "<svg class=\"lexicon-icon lexicon-icon-info-panel-closed\" focusable=\"false\" role=\"presentation\" title=\"\" viewBox=\"0 0 512 512\"><path class=\"lexicon-icon-body\" fill=\"none\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z\"></path><path class=\"lexicon-icon-outline\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z M256,480C132.5,480,32,379.5,32,256S132.5,32,256,32s224,100.5,224,224S379.5,480,256,480z\"></path><path class=\"lexicon-icon-outline\" d=\"M288,384V224c0-17.7-14.3-32-32-32c-17.7,0-32,14.3-32,32v160c0,17.7,14.3,32,32,32C273.7,416,288,401.7,288,384z\"></path><circle cx=\"256\" cy=\"128\" r=\"32\"></circle></svg>"

                containerArticleInfo.appendChild(articleInfo);
                addressElement.appendChild(containerArticleInfo);

                //Name
                if(data.details){
                    if(data.details.length){
                        if(data.details[0].poiTitle){
                            var addressNameElement = document.createElement('div');
                            addressNameElement.setAttribute('class', addressElementClass + '--name');
                            addressNameElement.innerHTML = data.details[0].poiTitle;
                            addressElement.appendChild(addressNameElement);
                        }
                        if(data.details[0].poiInfo){
                            var addressCategoryElement = document.createElement('div');
                            addressCategoryElement.setAttribute('class', addressElementClass + '--category');
                            addressCategoryElement.innerHTML = data.details[0].poiInfo;
                            addressElement.appendChild(addressCategoryElement);
                        }
                    }
                }

                //Domain
                if(data.domain){
                    if(data.domain.length){
                        var addressDomainElement = document.createElement('div');
                        addressDomainElement.setAttribute('class', addressElementClass + '--domain');
                        addressDomainElement.innerHTML = data.domain;
                        addressElement.appendChild(addressDomainElement);
                    }
                }

                //Division
                if(data.division){
                    if(data.division.length){
                        var addressDivisionElement = document.createElement('div');
                        addressDivisionElement.setAttribute('class', addressElementClass + '--division');
                        addressDivisionElement.innerHTML = data.division;
                        addressElement.appendChild(addressDivisionElement);
                    }
                }

                //Products Served
                if(data.capability){
                    if(data.capability.length){
                        var addressProductsServedElement = document.createElement('div');
                        addressProductsServedElement.setAttribute('class', addressElementClass + '--products-served');
                        addressProductsServedElement.innerHTML = data.capability;
                        addressElement.appendChild(addressProductsServedElement);
                    }
                }

                //Contacts
                var addressContactsElement = document.createElement('div');
                addressContactsElement.setAttribute('class', addressElementClass + '--contacts');

                //Contacts Title
                var addressContactsTitleElement = document.createElement('div');
                addressContactsTitleElement.setAttribute('class', addressElementClass + '--contacts--title');
                addressContactsTitleElement.innerHTML = Liferay.Language.get('contacts');
                addressContactsElement.appendChild(addressContactsTitleElement);

                //Contacts Postal Address
                if(data.poiAddress){
                    var addressContactsPostalAddressElement = document.createElement('div');
                    addressContactsPostalAddressElement.setAttribute('class', addressElementClass + '--contacts--postal-address');
                    addressContactsPostalAddressElement.innerHTML = data.poiAddress;
                    addressContactsElement.appendChild(addressContactsPostalAddressElement);
                } else {
                    var addressContactsPostalAddressElement = document.createElement('div');
                    addressContactsPostalAddressElement.setAttribute('class', addressElementClass + '--contacts--postal-address');
                    addressContactsPostalAddressElement.innerHTML = data.continent+'/'+data.country;
                    addressContactsElement.appendChild(addressContactsPostalAddressElement);
                }

                if(data.details){
                    if(data.details.length){
                        //Contacts Telephone
                        if (data.details[0].poiPhone) {
                            //Contacts Telephone
                            data.details[0].poiPhone.forEach(function(poiPhone, i){
                                var addressContactsTelephoneElement = document.createElement('div');
                                addressContactsTelephoneElement.setAttribute('class', addressElementClass + '--contacts--telephone');
                                addressContactsTelephoneElement.innerHTML = Liferay.Language.get('phone') + ': ' + poiPhone;
                                addressContactsElement.appendChild(addressContactsTelephoneElement);
                            });
                        }

                        //Contacts Email
                        if (data.details[0].poiEmail) {
                            data.details[0].poiEmail.forEach(function(poiEmail, i){
                                var addressContactsEmailElement = document.createElement('div');
                                addressContactsEmailElement.setAttribute('class', addressElementClass + '--contacts--email');
                                var addressContactsEmailAnchor = document.createElement('a');
                                addressContactsEmailAnchor.href = "mailto:" + poiEmail;
                                addressContactsEmailAnchor.innerHTML = Liferay.Language.get('email') + ': ' + poiEmail;
                                addressContactsEmailElement.appendChild(addressContactsEmailAnchor);
                                addressContactsElement.appendChild(addressContactsEmailElement);
                            });
                        }

                        //Contacts Link
                        if (data.details[0].poiLinkName){
                            var addressContactsLinkElement = document.createElement('div');
                            addressContactsLinkElement.setAttribute('class', addressElementClass + '--contacts--link');
                            var addressContactsLinkAnchor = document.createElement('a');
                            addressContactsLinkAnchor.href = data.details[0].poiLinkURL;
                            addressContactsLinkAnchor.target = data.details[0].poiLinkTarget;
                            addressContactsLinkAnchor.innerHTML = data.details[0].poiLinkName;
                            addressContactsLinkElement.appendChild(addressContactsLinkAnchor);
                            addressContactsElement.appendChild(addressContactsLinkElement);
                        }

                    }
                }

                addressElement.appendChild(addressContactsElement);

                //Driving direction
                if(i == (addresses.length - 1)){
                    //var drivingDirectionURLTemplate = 'https://www.google.com/maps/dir//_NAME_+_ADDRESS_/@_LAT_,_LNG_';
                    var drivingDirectionURLTemplate = 'https://www.google.com/maps/dir//_LAT_,_LNG_/@_LAT_,_LNG_';
                    var drivingDirectionURL = drivingDirectionURLTemplate
                        //.replace(/_NAME_/gi, data.details[0].poiTitle.replace(/\s/g, '+'))
                        //.replace(/_ADDRESS_/gi, data.poiAddress.replace(/\s/g, '+'))
                        .replace(/_LAT_/gi, parseFloat(data.poiLatitude))
                        .replace(/_LNG_/gi, parseFloat(data.poiLongitude));
                    var addressDrivingDirectionElement = document.createElement('div');
                    addressDrivingDirectionElement.setAttribute('class', addressElementClass + '--driving-direction');
                    addressDrivingDirectionElement.innerHTML =
                        '<a class="' + addressElementClass + '--driving-direction--link' + '" href="' + drivingDirectionURL + '" title="Take me there" target="_blank">' +
                        '<span class="' + addressElementClass + '--driving-direction--link--text' + '">Take me there</span>' +
                        '<span class="' + addressElementClass + '--driving-direction--link--icon' + '">' + svgMarkupArrowRight + '</span>' +
                        '</a>';
                    addressElement.appendChild(addressDrivingDirectionElement);
                }
                addressElements.appendChild(addressElement);
            }
        }
        return addressElements;
    }

    function createAddressElement(data, forMapInfoWindow){
        var addressElement = document.createElement('div');
        var addressElementClass = "service-locator-map--addresses--address";
        var infoWindowClass = "map-info-window";

        if(forMapInfoWindow){
            addressElement.setAttribute('class', addressElementClass + ' ' + infoWindowClass);
        }else{
            addressElement.setAttribute('class', addressElementClass);
        }

        if(data){

            var containerArticleInfo = document.createElement('div');
            containerArticleInfo.setAttribute('class', 'journal-article-info-container');

            var articleInfo = document.createElement('div');
            articleInfo.setAttribute('class', 'journal-article-info');
            articleInfo.setAttribute('id', data.dataArticleId);
            articleInfo.setAttribute('style', 'display:none;');
            articleInfo.setAttribute('data-article-id', data.dataArticleId);
            articleInfo.setAttribute('data-template', 'Service POI Search');
            articleInfo.innerHTML = "<svg class=\"lexicon-icon lexicon-icon-info-panel-closed\" focusable=\"false\" role=\"presentation\" title=\"\" viewBox=\"0 0 512 512\"><path class=\"lexicon-icon-body\" fill=\"none\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z\"></path><path class=\"lexicon-icon-outline\" d=\"M437,75C388.7,26.6,324.4,0,256,0C187.6,0,123.3,26.6,75,75C26.6,123.3,0,187.6,0,256c0,68.4,26.6,132.7,75,181c48.4,48.4,112.6,75,181,75c68.4,0,132.7-26.6,181-75c48.4-48.4,75-112.6,75-181C512,187.6,485.4,123.3,437,75z M256,480C132.5,480,32,379.5,32,256S132.5,32,256,32s224,100.5,224,224S379.5,480,256,480z\"></path><path class=\"lexicon-icon-outline\" d=\"M288,384V224c0-17.7-14.3-32-32-32c-17.7,0-32,14.3-32,32v160c0,17.7,14.3,32,32,32C273.7,416,288,401.7,288,384z\"></path><circle cx=\"256\" cy=\"128\" r=\"32\"></circle></svg>"

            containerArticleInfo.appendChild(articleInfo);
            addressElement.appendChild(containerArticleInfo);

            //Name
            if(data.details){
                if(data.details.length){
                    if(data.details[0].poiTitle){
                        var addressNameElement = document.createElement('div');
                        addressNameElement.setAttribute('class', addressElementClass + '--name');
                        addressNameElement.innerHTML = data.details[0].poiTitle;
                        addressElement.appendChild(addressNameElement);
                    }
                    if(data.details[0].poiInfo){
                        var addressCategoryElement = document.createElement('div');
                        addressCategoryElement.setAttribute('class', addressElementClass + '--category');
                        addressCategoryElement.innerHTML = data.details[0].poiInfo;
                        addressElement.appendChild(addressCategoryElement);
                    }
                }
            }

            //Domain
            if(data.domain){
                if(data.domain.length){
                    var addressDomainElement = document.createElement('div');
                    addressDomainElement.setAttribute('class', addressElementClass + '--domain');
                    addressDomainElement.innerHTML = data.domain;
                    addressElement.appendChild(addressDomainElement);
                }
            }

            //Division
            if(data.division){
                if(data.division.length){
                    var addressDivisionElement = document.createElement('div');
                    addressDivisionElement.setAttribute('class', addressElementClass + '--division');
                    addressDivisionElement.innerHTML = data.division;
                    addressElement.appendChild(addressDivisionElement);
                }
            }

            //Products Served
            if(data.capability){
                if(data.capability.length){
                    var addressProductsServedElement = document.createElement('div');
                    addressProductsServedElement.setAttribute('class', addressElementClass + '--products-served');
                    addressProductsServedElement.innerHTML = data.capability;
                    addressElement.appendChild(addressProductsServedElement);
                }
            }

            //Contacts
            var addressContactsElement = document.createElement('div');
            addressContactsElement.setAttribute('class', addressElementClass + '--contacts');

            //Contacts Title
            var addressContactsTitleElement = document.createElement('div');
            addressContactsTitleElement.setAttribute('class', addressElementClass + '--contacts--title');
            addressContactsTitleElement.innerHTML = Liferay.Language.get('contacts');
            addressContactsElement.appendChild(addressContactsTitleElement);

            //Contacts Postal Address
            if(data.poiAddress){
                var addressContactsPostalAddressElement = document.createElement('div');
                addressContactsPostalAddressElement.setAttribute('class', addressElementClass + '--contacts--postal-address');
                addressContactsPostalAddressElement.innerHTML = data.poiAddress;
                addressContactsElement.appendChild(addressContactsPostalAddressElement);
            } else {
                var addressContactsPostalAddressElement = document.createElement('div');
                addressContactsPostalAddressElement.setAttribute('class', addressElementClass + '--contacts--postal-address');
                addressContactsPostalAddressElement.innerHTML = data.continent+'/'+data.country;
                addressContactsElement.appendChild(addressContactsPostalAddressElement);
            }

            if(data.details){
                if(data.details.length){
                    //Contacts Telephone
                    if (data.details[0].poiPhone) {
                        //Contacts Telephone
                        data.details[0].poiPhone.forEach(function(poiPhone, i){
                            var addressContactsTelephoneElement = document.createElement('div');
                            addressContactsTelephoneElement.setAttribute('class', addressElementClass + '--contacts--telephone');
                            addressContactsTelephoneElement.innerHTML = Liferay.Language.get('phone') + ': ' + poiPhone;
                            addressContactsElement.appendChild(addressContactsTelephoneElement);
                        });
                    }

                    //Contacts Email
                    if (data.details[0].poiEmail) {
                        data.details[0].poiEmail.forEach(function(poiEmail, i){
                            var addressContactsEmailElement = document.createElement('div');
                            addressContactsEmailElement.setAttribute('class', addressElementClass + '--contacts--email');
                            var addressContactsEmailAnchor = document.createElement('a');
                            addressContactsEmailAnchor.href = "mailto:" + poiEmail;
                            addressContactsEmailAnchor.innerHTML = Liferay.Language.get('email') + ': ' + poiEmail;
                            addressContactsEmailElement.appendChild(addressContactsEmailAnchor);
                            addressContactsElement.appendChild(addressContactsEmailElement);
                        });
                    }

                    //Contacts Link
                    if (data.details[0].poiLinkName){
                        var addressContactsLinkElement = document.createElement('div');
                        addressContactsLinkElement.setAttribute('class', addressElementClass + '--contacts--link');
                        var addressContactsLinkAnchor = document.createElement('a');
                        addressContactsLinkAnchor.href = data.details[0].poiLinkURL;
                        addressContactsLinkAnchor.target = data.details[0].poiLinkTarget;
                        addressContactsLinkAnchor.innerHTML = data.details[0].poiLinkName;
                        addressContactsLinkElement.appendChild(addressContactsLinkAnchor);
                        addressContactsElement.appendChild(addressContactsLinkElement);
                    }

                }
            }

            addressElement.appendChild(addressContactsElement);

            //Driving direction
            if(forMapInfoWindow){
                //var drivingDirectionURLTemplate = 'https://www.google.com/maps/dir//_NAME_+_ADDRESS_/@_LAT_,_LNG_';
                var drivingDirectionURLTemplate = 'https://www.google.com/maps/dir//_LAT_,_LNG_/@_LAT_,_LNG_';
                var drivingDirectionURL = drivingDirectionURLTemplate
                    //.replace(/_NAME_/gi, data.details[0].poiTitle.replace(/\s/g, '+'))
                    //.replace(/_ADDRESS_/gi, data.poiAddress.replace(/\s/g, '+'))
                    .replace(/_LAT_/gi, parseFloat(data.poiLatitude))
                    .replace(/_LNG_/gi, parseFloat(data.poiLongitude));
                var addressDrivingDirectionElement = document.createElement('div');
                addressDrivingDirectionElement.setAttribute('class', addressElementClass + '--driving-direction');
                addressDrivingDirectionElement.innerHTML =
                    '<a class="' + addressElementClass + '--driving-direction--link' + '" href="' + drivingDirectionURL + '" title="Take me there" target="_blank">' +
                    '<span class="' + addressElementClass + '--driving-direction--link--text' + '">Take me there</span>' +
                    '<span class="' + addressElementClass + '--driving-direction--link--icon' + '">' + svgMarkupArrowRight + '</span>' +
                    '</a>';
                addressElement.appendChild(addressDrivingDirectionElement);
            }
        }

        return addressElement;
    }

    function buildDomainFilterData(data){
        var domainFilterData = {};
        domainFilterData.level = 0;
        domainFilterData.href = 'javascript:void(0)';
        domainFilterData.title = Liferay.Language.get("map-category-domain");
        domainFilterData.filterType = 'domain';

        if(getDomains(data).length){
            domainFilterData.subItems = [];

            getDomains(data).forEach(function(domain, i){
                var subItem1 = {};
                subItem1.level = 1;
                subItem1.href = 'javascript:void(0)';
                subItem1.title = domain;
                subItem1.filterType = 'domain';

                domainFilterData.subItems.push(subItem1);
            });
        }

        return domainFilterData;
    }

    function buildDivisionFilterData(data){
        var divisionFilterData = {};
        divisionFilterData.level = 0;
        divisionFilterData.href = 'javascript:void(0)';
        divisionFilterData.title = Liferay.Language.get("map-category-division");
        divisionFilterData.filterType = 'division';

        if(getDivisions(data).length){
            divisionFilterData.subItems = [];

            getDivisions(data).forEach(function(division, i){
                var subItem1 = {};
                subItem1.level = 1;
                subItem1.href = 'javascript:void(0)';
                subItem1.title = division;
                subItem1.filterType = 'division';

                divisionFilterData.subItems.push(subItem1);
            });
        }

        return divisionFilterData;
    }

    function buildRegionFilterData(data){
        var regionFilterData = {};
        regionFilterData.level = 0;
        regionFilterData.href = 'javascript:void(0)';
        regionFilterData.title = Liferay.Language.get("map-category-region");
        regionFilterData.filterType = 'region';

        if(getRegions(data).length){
            regionFilterData.subItems = [];

            getRegions(data).forEach(function(region, i){
                var subItem1 = {};
                subItem1.level = 1;
                subItem1.href = 'javascript:void(0)';
                subItem1.title = region;
                subItem1.filterType = 'continent';

                if(getCountriesInRegion(data, region).length){
                    subItem1.subItems = [];

                    getCountriesInRegion(data, region).forEach(function(country, j){
                        var subItem2 = {};
                        subItem2.level = 2;
                        subItem2.href = 'javascript:void(0)';
                        subItem2.title = country;
                        subItem2.filterType = 'country';

                        if(getRegion2InCountry(data, country).length){
                            subItem2.subItems = [];

                            getRegion2InCountry(data, country).forEach(function(region, j){
                                var subItem3 = {};
                                subItem3.level = 3;
                                subItem3.href = 'javascript:void(0)';
                                subItem3.title = region;
                                subItem3.filterType = 'region';

                                subItem2.subItems.push(subItem3);
                            });
                        }

                        subItem1.subItems.push(subItem2);
                    });
                }

                regionFilterData.subItems.push(subItem1);
            });
        }

        return regionFilterData;
    }

    function deselectMapMarkers(){
        mapMarkers.forEach(function(marker){
            marker.setIcon(mapMarkerIconDefault);
        });
    }

    function clearMapMarkers(){
        mapMarkers.forEach(function(marker){
            marker.setMap(null);
        });
        mapMarkers = [];

        if (mapMarkerCluster) mapMarkerCluster.clearMarkers();
    }

    function clearFilterUI(){
        var filterContainer =       $('.service-locator-map--filters--filter');
        var addressesContainer =    $('.service-locator-map--addresses');

        filterContainer.empty();
        addressesContainer.empty();
    }

    window.leonardo.serviceLocatorMap = serviceLocatorMap;
})(jQuery);
//End Module: Service Locator Map
;//Start Module: Social Share
(function($){
    'use strict';

    var socialShare = window.leonardo.socialShare || new Object({});

    var socialShareDialog = $('.social-share'),
        btnOpenDialog = $('.social-share-trigger'),
        btnCloseDialog =  $('.social-share--btn-close');

    socialShare.init = function(){
        btnOpenDialog.on('click' , function(){
            socialShareDialog.addClass("show");

            window.setTimeout(function(){
                btnCloseDialog.focus();
            }, 100);
        });

        btnCloseDialog.on('click' , function(){
            socialShareDialog.removeClass("show");
        });

        socialShareDialog.on('keydown', function(e){
            if((e.which || e.keyCode) === 27)
                btnCloseDialog.trigger('click');
        });
    };

    window.leonardo.socialShare = socialShare;
})(jQuery);
//End Module: Social Share
;//Start Module: Swiper
(function($){
    'use strict';

    var swipers = window.leonardo.swipers || new Object({});

    swipers.loadLazy = function() {
        var swiper = $(this)[0];
        var activeIndex = swiper.activeIndex;
        var slidesCount = swiper.slides.length;
        var loadNextAmount = 0;

        for (var i = activeIndex; i <= (activeIndex+loadNextAmount) && i < slidesCount; i++) {
            var slide = swiper.slides[i];
            var imgUrl = "";
            switch (window.leonardo.util.getCurrentViewport()){
                case 'DESKTOP':
                    imgUrl = $(slide).data('img-url-lazy-d'); break;
                case 'TABLET_LANDSCAPE':
                    imgUrl = $(slide).data('img-url-lazy-tl'); break;
                case 'TABLET_PORTRAIT':
                    imgUrl = $(slide).data('img-url-lazy-tp'); break;
                case 'MOBILE':
                    imgUrl = $(slide).data('img-url-lazy-m'); break;
            }
            if(slide && imgUrl) slide.style.setProperty( 'background-image', 'url(\''+ imgUrl +'\')', 'important' );
        }
    };

    swipers.init = function(){
        //Hero Swiper
        swipers.Hero = new Swiper('.swiper-container--hero', {
            autoplay: {
                delay: 6000,
                disableOnInteraction: false
            },
            pagination: {
                el: '.swiper-pagination',
                type: 'bullets',
                clickable: true
            },
            autoHeight: false,
            on: {
                init: swipers.loadLazy,
                slideChangeTransitionStart: swipers.loadLazy
            }
        });

        if(Array.isArray(swipers.Hero)) {
            for(var w = 0;w < swipers.Hero.length;w++) {
                swipers.Hero[w].on('slideChange', function (e) {
                    var activeIndex = $(this)[0].activeIndex;
                    var previousIndex = $(this)[0].previousIndex;

                    if($(this)[0].slides[activeIndex].innerHTML.indexOf("<video") >= 0){
                        var childrens = $(this)[0].slides[activeIndex].children;
                        for(var k=0; k<childrens.length; k++){
                            if($(this)[0].slides[activeIndex].children[k].outerHTML.indexOf("<video") == 0 && $(this)[0].slides[activeIndex].children[k].played.length > 0){
                                $(this)[0].slides[activeIndex].children[k].play();
                                break;
                            }
                        }
                    }

                    if($(this)[0].slides[previousIndex].innerHTML.indexOf("<video") >= 0){
                        var childrens = $(this)[0].slides[previousIndex].children;
                        for(var k=0; k<childrens.length; k++){
                            if($(this)[0].slides[previousIndex].children[k].outerHTML.indexOf("<video") == 0 && $(this)[0].slides[previousIndex].children[k].played.length > 0){
                                $(this)[0].slides[previousIndex].children[k].pause();
                                break;
                            }
                        }
                    }

                });
            }
        } else  {
            swipers.Hero.on('slideChange', function (e) {
                var activeIndex = swipers.Hero.activeIndex;
                var previousIndex = swipers.Hero.previousIndex;

                if(swipers.Hero.slides[activeIndex].innerHTML.indexOf("<video") >= 0){
                    var childrens = swipers.Hero.slides[activeIndex].children;
                    for(var k=0; k<childrens.length; k++){
                        if(swipers.Hero.slides[activeIndex].children[k].outerHTML.indexOf("<video") == 0 && swipers.Hero.slides[activeIndex].children[k].played.length > 0){
                            swipers.Hero.slides[activeIndex].children[k].play();
                            break;
                        }
                    }
                }

                if(swipers.Hero.slides[previousIndex].innerHTML.indexOf("<video") >= 0){
                    var childrens = swipers.Hero.slides[previousIndex].children;
                    for(var k=0; k<childrens.length; k++){
                        if(swipers.Hero.slides[previousIndex].children[k].outerHTML.indexOf("<video") == 0 && swipers.Hero.slides[previousIndex].children[k].played.length > 0){
                            swipers.Hero.slides[previousIndex].children[k].pause();
                            break;
                        }
                    }
                }

            });
        }

        //News Highlight Swiper
        $(".swiper-container--highlights-content .swiper-wrapper .journal-content-article").addClass("swiper-slide");
        swipers.highlightsContent = new Swiper('.swiper-container--highlights-content', {
            pagination: {
                el: '.swiper-pagination',
                type: 'bullets',
                clickable: true
            },
            slidesPerView: 1
        });

        //About Us Management Swiper
        swipers.aboutUsManagement = [];

        $('.swiper-container--about-us-management').each(function(){

            var dataSwipeId = $(this).attr("data-swipe-id");

            var newSwiper = new Swiper('.swiper-container--about-us-management-'+dataSwipeId, {
                pagination: {
                    el: '.swiper-pagination-'+dataSwipeId,
                    type: 'bullets',
                    clickable: true
                },
                navigation: {
                    nextEl: '.swiper-button-next-'+dataSwipeId,
                    prevEl: '.swiper-button-prev-'+dataSwipeId,
                },
                slidesPerView: 'auto',
                spaceBetween: 25,
                breakpoints: {
                    1023: {
                        spaceBetween: 20
                    },
                    767: {
                        spaceBetween: 10
                    }
                }
            });

            swipers.aboutUsManagement.push(newSwiper);
        });

        //News and Stories Latest Stories Swiper
        swipers.newsAndStoriesLatestStories = new Swiper('.swiper-container--news-and-stories-latest-stories', {
            pagination: {
                el: '.swiper-pagination',
                type: 'bullets',
                clickable: true
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            slidesPerView: 'auto',
            spaceBetween: 25,
            breakpoints: {
                1023: {
                    spaceBetween: 20
                },
                767: {
                    spaceBetween: 10
                }
            }
        });

        //Events Gallery Swiper
        if($('html').hasClass('dark-theme')) {
            swipers.eventsGallery = new Swiper('.swiper-container--events-gallery', {
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                //autoHeight: true,
                slidesPerView: 4,
                centerInsufficientSlides: true,
                spaceBetween: 17,
                watchOverflow: true,
                breakpoints: {
                    1024: {
                        slidesPerView: 3
                    },
                    768: {
                        slidesPerView: 2,
                        spaceBetween: 16
                    },
                    520: {
                        slidesPerView: 1,
                        spaceBetween: 0
                    }
                }
            });
            swipers.eventsGallery = new Swiper('.swiper-container--related-news', {
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                //autoHeight: true,
                slidesPerView: 3,
                centerInsufficientSlides: true,
                spaceBetween: 0,
                watchOverflow: true,
                breakpoints: {
                    1024: {
                        slidesPerView: 3
                    },
                    768: {
                        slidesPerView: 2,
                        spaceBetween: 16
                    },
                    520: {
                        slidesPerView: 1,
                        spaceBetween: 0
                    }
                }
            });
        } else {
            swipers.eventsGallery = new Swiper('.swiper-container--events-gallery', {
                pagination: {
                    el: '.swiper-pagination',
                    type: 'fraction'
                },
                paginationType: 'fraction',
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                slidesPerView: 4,
                centerInsufficientSlides: true,
                spaceBetween: 17,
                breakpoints: {
                    1024: {
                        slidesPerView: 3
                    },
                    768: {
                        slidesPerView: 2,
                        spaceBetween: 16
                    },
                    375: {
                        slidesPerView: 1,
                        spaceBetween: 0
                    }
                }
            });
        }

        if(!$('html').hasClass('dark-theme')) {// tolgo lo swiper per anchor bar
            swipers.sectionNavigator = new Swiper ('.swiper-container--sectionNavigator', {
                slidesPerView: 5,
                slidesPerGroup: 1,
                spaceBetween: 10,
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                breakpoints: {
                    1024: {
                        slidesPerView: 3
                    },
                    768: {
                        slidesPerView: 2
                    },
                    375: {
                        slidesPerView: 1
                    }
                }
            });
        }

        /* LFTO FIX Gallerie multiple in pagina */
        $('.events-gallery--show-all-link').on('click',function(){
            var eventsGallery = $(this).parents('.events-gallery');
            eventsGallery.toggleClass('show-all');

            var swiper = eventsGallery.find(".swiper-container--events-gallery")[0].swiper;
            if(eventsGallery.hasClass('show-all')){
                $(this).text($(this).attr("data-lbl-hide"));
                //swiper.params.spaceBetween = 20;
                swiper.params.allowSwipeToNext = false;
                swiper.params.allowSwipeToPrev = false;
                swiper.slideTo(0,50);
            }
            else{
                $(this).text($(this).attr("data-lbl-show"));
                //swiper.params.spaceBetween = 23;
                swiper.params.allowSwipeToNext = true;
                swiper.params.allowSwipeToPrev = true;
                swiper.slideTo(0);
            }
            swiper.update();
        });

        //Service Locator Map Nav Swiper

        swipers.serviceLocatorMapNav = new Swiper('.swiper-container--service-locator-map--nav', {
            slidesPerView: 'auto',
            spaceBetween: 40,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            }
        });
    };

    window.leonardo.swipers = swipers;
})(jQuery);
//End Module: Swiper
;//Start Module: Timeline
(function($){
    "use strict";

    var timeline = window.leonardo.timeline || new Object({});

    var timelineTab = $('.timeline-content--header--tablist--tab');
    var timelineTabList = $('.timeline-content--header--tablist');
    var timelineTabActive = $('.timeline-content--header--tablist--tab.active');
    var timelineTabLeftText = $('.timeline-content--header--tablist--tab--title-left');
    var timelineTabRightText = $('.timeline-content--header--tablist--tab--title-right');

    var navigator = $('.timeline-content--navigation--navigate');
    var navigatorLeft = $('.timeline-content--navigation--navigate.left-direction');
    var navigatorRight = $('.timeline-content--navigation--navigate.right-direction');

    timeline.init = function(){
        var timelineTabActiveIndex = timelineTabActive.index();

        //timeLineImageCompress();

        timelineTab.on('click', function(e){
            var _target = $(this).attr('data-target');

            e.preventDefault();

            timelineTab.removeClass('active');
            $(this).addClass('active');
            timelineTabActive = $(this);
            timeline.showDirection(timelineTabActive);

            if($(this).index() > timelineTabActiveIndex){
                timeline.setTabPositionPrev(timelineTabActive);
            }

            if($(this).index() < timelineTabActiveIndex){
                timeline.setTabPositionNext(timelineTabActive);
            }

            $('.timeline-articles--tab-content').each(function(){
                if($(this).attr('id') == _target){
                    $(this).addClass('active');
                }else{
                    $(this).removeClass('active');
                }
            });

            timeline.timelineLoader(timelineTabActive);
            timelineTabActiveIndex = $(this).index();
        });

        navigator.on("click",function(e){
            e.preventDefault();

            if($(this).hasClass('left-direction')){
                timelineTabActive.prev().trigger("click");
            }else{
                timelineTabActive.next().trigger("click");
            }

            timeline.showDirection(timelineTabActive);
        });

        //  $(document).ready(function(){
        window.leonardo.util.debounce(timeline.timelineLoader(timelineTabActive), 500);

        $(window).resize(function(){
            window.leonardo.util.debounce(timeline.timelineLoader(timelineTabActive), 500);
            //timeLineImageCompress();
        });

        timelineTabList.on("click", function(){
            $(this).toggleClass('tab-active');
        });

        $('.timeline-articles--tab-content:first-child').addClass('active');

        //  });
    };

    timeline.timelineLoader = function(timelineTabActive){
        timelineTabActive.prevAll().find(timelineTabRightText).addClass('hide');
        timelineTabActive.prevAll().find(timelineTabLeftText).removeClass('hide');
        timelineTabActive.nextAll().find(timelineTabLeftText).addClass('hide');
        timelineTabActive.nextAll().find(timelineTabRightText).removeClass('hide');
        timeline.showDirection(timelineTabActive);

        var _activeLeft = ($('.timeline-content').width() - timelineTabActive.innerWidth()) / 2;
        timelineTabActive.css("left", _activeLeft);

        timelineTabActive.prevAll().each(function(){
            var _left = $(this).next().position().left - $(this).innerWidth();
            $(this).css("left", _left);
        });

        timelineTabActive.nextAll().each(function(result, index){
            var _left = $(this).prev().position().left + $(this).prev().innerWidth();
            $(this).css("left", _left);
        });
    };

    timeline.showDirection = function(timelineTabActive){
        if(timelineTabActive.prev().length == 0){
            navigatorLeft.addClass('hide-arrow');
        }else{
            navigatorLeft.removeClass('hide-arrow');
        }

        if(timelineTabActive.next().length == 0){
            navigatorRight.addClass('hide-arrow');
        }else{
            navigatorRight.removeClass('hide-arrow');
        }

        timelineTabActive.prevAll().find(timelineTabRightText).addClass('hide');
        timelineTabActive.prevAll().find(timelineTabLeftText).removeClass('hide');

        timelineTabActive.nextAll().find(timelineTabLeftText).addClass('hide');
        timelineTabActive.nextAll().find(timelineTabRightText).removeClass('hide');
    };

    timeline.setTabPositionPrev = function(timelineTabActive){
        var _activeLeft = ($('.timeline-content').width() - timelineTabActive.innerWidth()) / 2;

        timelineTabActive.css("left", _activeLeft);

        timelineTabActive.prevAll().each(function(){
            var _left = $(this).position().left - $(this).innerWidth();
            $(this).css("left", _left);
        });

        timelineTabActive.nextAll().each(function(result, index){
            var _left = $(this).prev().position().left + $(this).prev().innerWidth();
            $(this).css("left", _left);
        });
    };

    timeline.setTabPositionNext = function(timelineTabActive){
        var _activeLeft = ($('.timeline-content').width() - timelineTabActive.innerWidth()) / 2;

        timelineTabActive.css("left", _activeLeft);

        timelineTabActive.prevAll().each(function(result, index){
            var _left = $(this).innerWidth() + $(this).position().left ;
            $(this).css("left", _left);
        });

        timelineTabActive.nextAll().each(function(result, index){
            var _left = $(this).prev().position().left + $(this).prev().innerWidth();
            $(this).css("left", _left);
        });
    };

    /* converting 2x image size to 1x size in mobile and table portrait */
    function timeLineImageCompress(){
        var imageList = document.querySelectorAll('.timeline-articles--gallery-wrap--img');

        if(window.leonardo.util.getCurrentViewport() != "DESKTOP")
        {
            for(var i=0; i<=imageList.length-1; i++){
                var imgWidth = imageList[i].naturalWidth / 2;
                imageList[i].style.width =  imgWidth+'px';
            }
        }else{
            for(var i=0; i<=imageList.length-1; i++){
                imageList[i].style.width = 'auto';
            }
        }
    }

    window.leonardo.timeline = timeline;
    window.leonardo.timeline.activeTab = timelineTabActive;
})(jQuery);
//End Module: Timeline


;//Start Module: Where Are We Map - modificato da team liferay
(function($){
    'use strict';

    var whereAreWeMap = window.leonardo.whereAreWeMap || new Object({});

    whereAreWeMap.init = function() {

        var mapOptions = window.leonardo.mapOptions || window.dynamicMapOptions || new Object;

        if(!mapOptions.mapContainerDivId) {
            mapOptions.mapContainerDivId = 'map-content';
        }

        if ($('#' + mapOptions.mapContainerDivId).length > 0) {
            window.leonardo.maps.loadLibrary();
        }

        $(window).one('mapLibraryReady', function(){

            if ($('#' + mapOptions.mapContainerDivId).length == 0) return;

            //var uluru = {lat: -25.344, lng: 131.036};
            var markerIconDefault = {
                url: '/o/leonardocompany-theme/images/icon-map-pointer.svg',
                scaledSize: new google.maps.Size(25, 25),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(12,25),
                labelOrigin:  new google.maps.Point(50,33)
            };
            var markerIconActive = {
                url: '/o/leonardocompany-theme/images/icon-map-pointer-active.svg',
                scaledSize: new google.maps.Size(25, 25),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(12,25),
                labelOrigin:  new google.maps.Point(50,33)
            };
            var markers=[];
            var markerList = {lat: 0, lng: 0};

            if(!mapOptions.gestureHandling) {
                mapOptions.gestureHandling = 'auto';
            }

            if(!mapOptions.markerList /*|| mapOptions.markerList.length == 0*/) {
                mapOptions.markerList = [];
            }

            if(!mapOptions.mapCenter) {
                if(mapOptions.markerList.length == 1) {
                    mapOptions.mapCenter = {
                        lat: mapOptions.markerList[0].lat,
                        lng: mapOptions.markerList[0].lng
                    };
                } else {
                    mapOptions.mapCenter = {
                        lat: 43.6027481,
                        lng: 11.8817926
                    };
                }
            }

            if(!mapOptions.mapZoom){
                mapOptions.defaultZoom = 0;
            }else{
                mapOptions.defaultZoom = mapOptions.mapZoom;
            }
            if(mapOptions.defaultZoom == 0){
                if(mapOptions.markerList.length == 1) {
                    mapOptions.defaultZoom = 4.5;
                } else {
                    mapOptions.defaultZoom = 7;
                }
            }

            if(!mapOptions.mapStyle || mapOptions.mapStyle.length == 0) {

                mapOptions.mapStyle = [{ "elementType": "geometry", "stylers": [{ "color": "#f5f5f5" }]},
                    {"elementType": "labels","stylers": [{"visibility": "off"}]},
                    {"elementType": "labels.icon","stylers": [{"visibility": "off"}]},
                    {"elementType": "labels.text.fill","stylers": [{"color": "#616161"}]},
                    {"elementType": "labels.text.stroke","stylers": [{"color": "#f5f5f5"}]},
                    {"featureType": "administrative","elementType": "geometry","stylers": [{"visibility": "on"}]},
                    {"featureType": "administrative.country","elementType": "geometry.stroke","stylers": [{"color": "#888888"}]},
                    {"featureType": "administrative.land_parcel","stylers": [{"visibility": "off"}]},
                    {"featureType": "administrative.land_parcel","elementType": "labels.text.fill","stylers": [{"color": "#bdbdbd"}]},
                    {"featureType": "administrative.neighborhood","stylers": [{"visibility": "off"}]},
                    {"featureType": "landscape.natural.landcover","elementType": "geometry.fill","stylers": [{"color": "#e1e1e1"}]},
                    {"featureType": "landscape.natural.terrain","elementType": "geometry.fill","stylers": [{"color": "#e1e1e1"}]},
                    {"featureType": "landscape.natural.terrain","elementType": "geometry.stroke","stylers": [{"color": "#e1e1e1"},{"visibility": "simplified"}]},
                    {"featureType": "poi","stylers": [{"visibility": "off"}]},
                    {"featureType": "poi","elementType": "geometry","stylers": [{"color": "#eeeeee"}]},
                    {"featureType": "poi","elementType": "labels.text.fill","stylers": [{"color": "#757575"}]},
                    {"featureType": "poi.park","elementType": "geometry","stylers": [{"color": "#e5e5e5"}]},
                    {"featureType": "poi.park","elementType": "labels.text.fill","stylers": [{"color": "#9e9e9e"}]},
                    {"featureType": "road","stylers": [{"visibility": "off"}]},
                    {"featureType": "road","elementType": "geometry","stylers": [{"color": "#ffffff"}]},
                    {"featureType": "road","elementType": "labels.icon","stylers": [{"visibility": "off"}]},
                    {"featureType": "road.arterial","elementType": "labels.text.fill","stylers": [{"color": "#757575"}]},
                    {"featureType": "road.highway","elementType": "geometry","stylers": [{"color": "#dadada"}]},
                    {"featureType": "road.highway","elementType": "labels.text.fill","stylers": [{"color": "#616161"}]},
                    {"featureType": "road.local","elementType": "labels.text.fill","stylers": [{"color": "#9e9e9e"}]},
                    {"featureType": "transit","stylers": [{"visibility": "off"}]},
                    {"featureType": "transit.line","elementType": "geometry","stylers": [{"color": "#e5e5e5"}]},
                    {"featureType": "transit.station","elementType": "geometry","stylers": [{"color": "#eeeeee"}]},
                    {"featureType": "water","elementType": "geometry","stylers": [{"color": "#c9c9c9"}]},
                    {"featureType": "water","elementType": "geometry.fill","stylers": [{"color": "#ffffff"},{"saturation": 100},
                            {"lightness": 100},{"visibility": "on"}]},
                    {"featureType": "water","elementType": "labels.text.fill","stylers": [{"color": "#9e9e9e"}]}
                ];
            }

            mapOptions.showLabels = (typeof mapOptions.showLabels !== 'undefined') ? mapOptions.showLabels : 1;
            mapOptions.markerColor = (mapOptions.showLabels == 1) ? "#202020" : "transparent";
            mapOptions.markerColorActive = "#e4002b";
            mapOptions.markerColorHover = (mapOptions.showLabels == 2) ? "#202020" : mapOptions.markerColor;

            window.leonardo.mapOptions = mapOptions;

            $('.where-are-we--text .leo-accordion--title').on('click',function(e){
                var pointerTarget = $(this).attr('href');
                var pointerText = $(this).text();
                $('.where-are-we--map--pointer').removeClass('active');
                $('.where-are-we--map--pointer').each(function(){
                    if($(this).find('a').attr('data-target') == pointerTarget){
                        $(this).addClass('active');
                    }
                });

                $('.where-are-we--text .leo-accordion').removeClass('active');
                $(this).closest('.leo-accordion').addClass('active');

                if($(this).parents('.panel').children('.panel-collapse').hasClass('in')){
                    e.preventDefault();
                    e.stopPropagation();
                }

                $.each(markers,function(i,marker){
                    var label = marker.getLabel();
                    if(pointerText == label.text){
                        marker.setIcon(markerIconActive);
                        label.color = "#e4002b";
                    }else{
                        marker.setIcon(markerIconDefault);
                        label.color = "#202020";
                    }
                });
            });

            // The map, centered at Australia
            var bounds  = new google.maps.LatLngBounds();

            var map = new google.maps.Map(
                document.getElementById(mapOptions.mapContainerDivId),
                {
                    center: mapOptions.mapCenter,
                    zoom: mapOptions.defaultZoom,
                    styles: mapOptions.mapStyle,
                    mapTypeControl: false,
                    scaleControl: true,
                    disableDefaultUI: true,
                    zoomControl: true,
                    fullscreenControl: true,
                    streetViewControl: false
                }
            );

            // The marker, positioned at Australia
            mapOptions.markerList.forEach(function(element){
                if(element.active){
                    var _icon = markerIconActive;
                    var _color = mapOptions.markerColorActive;
                }else{
                    var _icon = markerIconDefault;
                    var _color = mapOptions.markerColor;
                }
                // The marker, positioned at element lat and lng position: element
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(element.lat, element.lng),
                    icon: _icon,
                    label: {
                        text: element.location,
                        color: _color,
                        fontSize: "16px",
                        left: "100px",
                        fontFamily: "Raleway-Regular, Arial, Georgia, Times New Roman"
                    },
                    animation: google.maps.Animation.DROP,
                    map: map,
                    labelClass: "markerLabels"
                });
                google.maps.event.addListener(marker, 'click', function() {
                    toggleMarker(markers, element);
                    marker.setIcon(markerIconActive);
                    var label= this.getLabel();
                    label.color = mapOptions.markerColorActive;
                });
                google.maps.event.addListener(marker, 'mouseover', function() {
                    marker.setIcon(marker.getIcon());
                    var label= this.getLabel();
                    if (marker.getIcon().url === markerIconActive.url) {
                        label.color = mapOptions.markerColorActive;
                    } else {
                        label.color = mapOptions.markerColorHover;
                    }
                });
                google.maps.event.addListener(marker, 'mouseout', function() {
                    marker.setIcon(marker.getIcon());
                    var label= this.getLabel();
                    if (marker.getIcon().url === markerIconActive.url) {
                        label.color = mapOptions.markerColorActive;
                    } else {
                        label.color = mapOptions.markerColor;
                    }
                });
                markers.push(marker);

                var loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
                bounds.extend(loc);
            });

            var fmc = function() {
                if (typeof MarkerClusterer !== 'undefined' && MarkerClusterer != null) {
                    var markerCluster = new MarkerClusterer(map, markers, {
                        imagePath: '/o/leonardocompany-theme/images/maps/m',
                    });
                    markerCluster.setStyles(markerCluster.getStyles().map(function (style) {
                        style.textColor = '#fff';
                        return style;
                    }));
                } else {
                    setTimeout(fmc, 500);
                }
            };
            setTimeout(fmc, 500);

            if(mapOptions.markerList.length > 1) {
                if(!mapOptions.mapZoom){
                    map.fitBounds(bounds);       // auto-zoom
                }
                map.panToBounds(bounds);     // auto-center
            }

            var toggleMarker = function(markers, element){
                $.each(markers,function(i,marker){
                    marker.setIcon(markerIconDefault);
                    var label = marker.getLabel();
                    label.color = mapOptions.markerColor;
                });

                $('.where-are-we--text .leo-accordion').removeClass('active');
                $('.where-are-we--text .leo-accordion--content').removeClass('in').css('height','');
                $('.where-are-we--text .leo-accordion--title').addClass('collapsed');
                $(element.tabId).addClass('in').prev('.panel-heading').find('.leo-accordion--title').removeClass('collapsed').closest('.leo-accordion').addClass('active');
            };
        });

    };

    window.leonardo.whereAreWeMap = whereAreWeMap;
})(jQuery);
//End Module: Where Are We Map - modificato da team liferay
;//Start Module: YouTube Player
(function($){
    'use strict';

    var ytPlayer = window.leonardo.ytPlayer || new Object({});
    var playerContainer;
    var fullscreenCloseButtonMarkup = '<div class=\'youtube-player-container--btn-close\' title=\'close\'></div>';
    var customPosterMarkup =
        '<div class="youtube-player-container--custom-poster hidden" '+
        'data-img-url-d="__POSTER_D_URL__" data-img-url-tl="__POSTER_TL_URL__" data-img-url-tp="__POSTER_TP_URL__" data-img-url-m="__POSTER_M_URL__">' +
        '<div class="youtube-player-container--custom-poster--overlay"></div>' +
        '<div class="youtube-player-container--custom-poster--controls">' +
        '<a href="javascript:void(0)" class="youtube-player-container--custom-poster--controls--play leo-video--play" title="Play"></a>' +
        '</div>' +
        '</div>';
    var keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    };

    ytPlayer.init = function(){
        playerContainer = $('.youtube-player-container');

        ytPlayer.players = [];

        playerContainer.each(function(i, e){
            //LF TEAM: mute, autoplay added
            e = $(e);

            //Add close button, if fullscreen mode enabled
            if(e.data('play-fullscreen')){
                if(e.data('play-fullscreen') === true){
                    e.prepend(fullscreenCloseButtonMarkup);
                }
            }

            //Add custom poster container, if opted for
            var poster = customPosterMarkup, lastImage;
            if(e.data('img-url-d')){
                lastImage = e.data('img-url-d');
                poster = poster.replace(/__POSTER_D_URL__/gi, lastImage);
            }
            if (e.data('img-url-tl')){
                lastImage = e.data('img-url-tl');
                poster = poster.replace(/__POSTER_TL_URL__/gi, lastImage);
            }
            if (e.data('img-url-tp')){
                lastImage = e.data('img-url-tp');
                poster = poster.replace(/__POSTER_TP_URL__/gi, lastImage);
            }
            if (e.data('img-url-m')){
                lastImage = e.data('img-url-m');
                poster = poster.replace(/__POSTER_M_URL__/gi, lastImage);
            }
            if (lastImage){
                // Rimpiazzo i mancanti con l'ultima immagine valida
                poster = poster.replace(/__POSTER_D_URL__/gi, lastImage);
                poster = poster.replace(/__POSTER_TL_URL__/gi, lastImage);
                poster = poster.replace(/__POSTER_TP_URL__/gi, lastImage);
                poster = poster.replace(/__POSTER_M_URL__/gi, lastImage);
                // Ho le immagini -> aggiungo il poster
                e.append(poster);
            }
            if(poster){
                var obj = e.find(".youtube-player-container--custom-poster");
                window.leonardo.backgroundImage.applyTo(obj,true);
                obj.removeClass('hidden');
            }
            if(e.data('video-autoplay') || 0){ /* TK 1277516 refs #766 */
                var link = e.find(".youtube-player-container--custom-poster--controls--play");
                if(link != null) {
                    link.removeClass('leo-video--play');
                }
            }

            var fullscreenCloseButton = e.find('.youtube-player-container--btn-close');
            var customPoster = e.find('.youtube-player-container--custom-poster');
            /*TK 1083915*/
            var gaSended = false;
            /**/
            var parentSwiperHero = null;
            if(Array.isArray(window.leonardo.swipers.Hero)) {
                for(var i = 0; i < window.leonardo.swipers.Hero.length; i++){
                    if(window.leonardo.swipers.Hero[i].el == e.parents(".swiper-container")[0]) {
                        parentSwiperHero = window.leonardo.swipers.Hero[i];
                        break;
                    }
                }
            } else {
                parentSwiperHero = window.leonardo.swipers.Hero;
            }
            var player = new YT.Player(e.data('div-id'), {
                videoId: e.data('video-id'),
                host: e.data('use-no-cookie-domain') ? 'https://www.youtube-nocookie.com' : 'https://www.youtube.com',
                playerVars: {
                    rel: 0,
                    iv_load_policy: 3,
                    showinfo: e.data('video-showinfo') || 0,
                    controls: e.data('video-controls') || 0,
                    autoplay: e.data('video-autoplay') || 0,
                    mute: e.data('video-mute') || 0
                },
                events: {
                    'onReady': function(){
                        e.find('div').removeClass('no-video').addClass('video-ok');
                    },
                    'onStateChange': function(f){
//                       if(player.getPlayerState() === YT.PlayerState.ENDED){
//                            ytPlayer.showOverlayContent(e);
//                        }else{
//                            ytPlayer.hideOverlayContent(e);
//                        }UNSTARTED
                        if(f.data === YT.PlayerState.UNSTARTED){
                            if(e.data('play-fullscreen') || false){
                                e.addClass('fullscreen').focus();
                            } else {
                                e.find(".youtube-player-container--custom-poster").addClass("hidden");
                            }
                            if(typeof(window.leonardo.swipers) != 'undefined' &&
                                typeof(parentSwiperHero) != 'undefined' && parentSwiperHero != null &&
                                typeof(parentSwiperHero.autoplay) != 'undefined'){
                                parentSwiperHero.autoplay.stop();
                            }

                            /*TK 1083915*/
                            if(typeof(ga) != 'undefined'){
                                ga('send','event','Video','Play',"'"+ e.data('video-id') +"'");
                                gaSended = true;
                            }
                            /**/

                        } else if(f.data === YT.PlayerState.PLAYING){
                            if(e.data('play-fullscreen') || false){
                                e.addClass('fullscreen').focus();
                            } else {
                                e.find(".youtube-player-container--custom-poster").addClass("hidden");
                            }
                            if(typeof(window.leonardo.swipers) != 'undefined' &&
                                typeof(parentSwiperHero) != 'undefined' && parentSwiperHero != null &&
                                typeof(parentSwiperHero.autoplay) != 'undefined'){
                                parentSwiperHero.autoplay.stop();
                            }
                            if(!gaSended){
                                /*TK 1083915*/
                                if(typeof(ga) != 'undefined'){
                                    ga('send','event','Video','Play',"'"+ e.data('video-id') +"'");
                                    gaSended = true;
                                }
                                /**/
                            }
                        } else if(f.data === YT.PlayerState.ENDED){
                            e.removeClass('fullscreen');
                            e.find(".youtube-player-container--custom-poster").removeClass("hidden");
                        }
                    },
                    'onError': function(g){
                        if(console)console.log("VIDEO onError: "+g.data);
                        e.find('div').removeClass('no-video').addClass('video-err');
                    }
                }
            });

            e.on('keypress', function(ev){
                if((ev.which || ev.keyCode) === keyCode.ESCAPE){
                    e.find('.youtube-player-container--btn-close').trigger('click');
                }

                if((ev.which || ev.keyCode) === keyCode.SPACE){
                    if(player.getPlayerState() === YT.PlayerState.PLAYING){
                        player.pauseVideo();
                    }else if(player.getPlayerState() === YT.PlayerState.PAUSED){
                        player.playVideo();
                    }
                }
            });

            fullscreenCloseButton.on('click', function(){
                //Stops the video and returns to normal mode, if in fullscreen
                player.seekTo(player.getDuration());
            });

            customPoster.on('click', function(e){
                e.stopPropagation();
                player.playVideo();
            });

            ytPlayer.players.push(player);
        });
    };

    ytPlayer.hideOverlayContent = function(playerContainer){
        if(!playerContainer.jquery) playerContainer = $(playerContainer);

        var overlayContent = playerContainer.siblings('.hero-slide--content');
        var customPoster = playerContainer.find('.youtube-player-container--custom-poster');

        if(overlayContent.length){
            overlayContent.addClass('fade');

            window.setTimeout(function(){
                overlayContent.addClass('hidden');
            }, 500);
        }

        if(customPoster.length){
            customPoster.addClass('hidden');
        }
    };

    ytPlayer.showOverlayContent = function(playerContainer){
        if(!playerContainer.jquery) playerContainer = $(playerContainer);

        var overlayContent = playerContainer.siblings('.hero-slide--content');
        var customPoster = playerContainer.find('.youtube-player-container--custom-poster');

        if(overlayContent.length){
            overlayContent.removeClass('hidden').removeClass('fade');

            window.setTimeout(function(){
                overlayContent.removeClass('fade');
            }, 500);
        }

        if(customPoster.length){
            customPoster.removeClass('hidden');
        }
    };

    window.leonardo.ytPlayer = ytPlayer;
})(jQuery);
//End Module: YouTube Player

// FIX Bug IE new Event
(function () {
    if ( typeof window.CustomEvent === "function" ) return false; // If not IE

    function CustomEvent ( event, params ) {
        params = params || { bubbles: false, cancelable: false, detail: undefined };
        var evt = document.createEvent( 'CustomEvent' );
        evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );
        return evt;
    }

    CustomEvent.prototype = window.Event.prototype;

    window.CustomEvent = CustomEvent;
})();

//Start Module: HTML Player event TCKT - 1278048
(function($){
    'use strict';

    var htmlPlayer = window.leonardo.htmlPlayer || new Object({});
    var playerContainer;

    htmlPlayer.init = function(){
        playerContainer = $('.track-play-event');

        playerContainer.each(function(i, e){
            e=$(e);
            e.one('play', function () {
                if(typeof(ga) != "undefined"){
                    var src = "";
                    if(e.attr('src') != undefined) {
                        src = e.attr('src')
                    } else {
                        src = $('source', e).attr('src');
                    }
//              console.log("sending ga for play video " + src);
                    ga('send','event','Video','Play',"'"+ src +"'");
                }
            });
        });
    };

    window.leonardo.htmlPlayer = htmlPlayer;

})(jQuery);
//End Module: HTML Player Event

//Start Module: Acordion cards
(function ($, root, undefined) {

    $(function () {
        $('.accordion-cards .accordion-title').click(function() {
            $(this).toggleClass('open');
            var accordionContent = $(this).parent().find('.accordion-content');
            if (accordionContent.length > 0) {
                accordionContent.slideToggle(300);
            }
        })
    }); /* end of function */

})(jQuery, this);
//End Module: Acordion cards


//Start Module: Researchers Detail
(function ($, root, undefined) {

    $(function () {
        var researchersDetailTabs = $('.researchers-detail-tabs .tabs-head li span');
        if(researchersDetailTabs.length>0) {
            researchersDetailTabs.each(function(){
                $(this).on('click', function(event){
                    var itemList = $(event.target).closest('li');
                    itemList.siblings().removeClass('active');
                    itemList.addClass('active');
                    var targetId = itemList.attr('data-tab-head');
                    var contentTab = itemList.closest('.researchers-detail-tabs').find('.tabs-body *[data-tab-body="'+targetId+'"]');
                    if(contentTab.length>0) {
                        contentTab.siblings().removeClass('active');
                        contentTab.addClass('active');
                    }
                })
            })
            researchersDetailTabs[0].click();
        }
    }); /* end of function */

})(jQuery, this);
//End  Module: Researchers Detail



//Start Module: Focus Container
(function ($, root, undefined) {

    $(function () {
        $('.focus-container .btn-show-all').click(function(){
            $(this).closest('.focus-container').find('.content-hidden').removeClass('content-hidden')
            $(this).closest('.show-all-wrapper').hide()
        })
    }); /* end of function */

})(jQuery, this);
//End Module: Focus Container


//Start Module: Focus Article List
(function ($, root, undefined) {

    $(function () {
        $('.focus-article-list--cards .btn-show-all').click(function(){
            var hiddenCardsCount = 0
            $(this).closest('.focus-article-list--cards').find('.content-hidden').each(function(){
                if(hiddenCardsCount<4) {
                    $(this).removeClass('content-hidden')
                }
                hiddenCardsCount ++;
            })
            if($(this).closest('.focus-article-list--cards').find('.content-hidden').length==0) {
                $(this).closest('.show-all-wrapper').hide()
            }
        })
    }); /* end of function */

})(jQuery, this);
//End Module: Focus Article List


//Start Module: Tracciamenti video html5
(function($){
    'use strict';

    window.html5VideoTrack = function(video, videoId) {
        //var /** boolean */ trackDynamicContent = true;
        var /** string */ attribute = 'data-media-listener';
        var /** number */ step = 25;

        // Checking if this video has an event listener.
        if (typeof $(video).attr(attribute)==='undefined' || $(video).attr(attribute)===false) {
            // Setting the attribute flag that a listener has already been added to this video.
            $(video).attr(attribute, 1);

            if(typeof videoId == 'undefined') {
                if($(video).closest('.journal-content-article').length>0) {
                    videoId = 'article-video-'+$(video).closest('.journal-content-article').attr('data-analytics-asset-id')

                    if(typeof $(video).attr('autoplay') != 'undefined') {
                        videoId = videoId + '-autoplay'
                    }

                    if(typeof $(video).attr('loop') != 'undefined') {
                        videoId = videoId + '-loop'
                    }

                }
            }


            // Adding an event listener to this video.
            video.on('timeupdate', function() {

                // Calculating watched percentage based on current time and video duration.
                var /** number */ percentage = this.currentTime * 100 / this.duration;
                // Calculating an integer value based on percentage and step.
                var /** number */ value = ~~(percentage / step) * step;

                // Checking if this value is not tracked yet.
                if (typeof $(video).attr(attribute + value) === 'undefined' && value % step == 0) {
                    // Setting the attribute flag that this value already tracked.
                    video.attr(attribute + value, 1);


                    var /** string */ event = (percentage<step)?'0000_startVideo':'0001_progressVideo';
                    var /** string */ eventCategory = 'video';
                    var /** string */ eventAction = (percentage<step)?'start':'progress '+value+'%';
                    var /** string */ eventLabel = typeof videoId != 'undefined'? videoId : this.currentSrc;

                    var journalArticle = $(this).closest('.journal-content-article');

                    if(typeof window.dataLayer !== 'undefined') {
                        dataLayer.push({
                            event: event,
                            eventCategory: eventCategory,
                            eventAction: eventAction,
                            eventLabel: eventLabel
                        });
                    } else {
                        console.error('dataLayer is not defined')
                    }
                }
            });
        }
    }

})(jQuery);
//End Module: Tracciamenti video html5

//Start Module: Acordion
(function ($, root, undefined) {

    $(function () {
        $('.uk-accordion .uk-accordion-title').click(function() {
            $(this).toggleClass('open');
            var accordionContent = $(this).parent().find('.uk-accordion-content');
            if (accordionContent.length > 0) {
                accordionContent.slideToggle(300);
            }
        })
    }); /* end of function */

})(jQuery, this);
//End Module: Acordion

//Start Module: Modale
(function ($, root, undefined) {

    $(function () {
        $("a[data-target^=mug--modal--]").click(function(event){
            event.preventDefault();
            var modalWindow = $(this).attr("data-target");
            var modalObj = $("div[id="+modalWindow+"]");
            var pos = $('html').scrollTop();
            $('body').addClass('mute-mobile-dropdown');
            $(modalObj).fadeIn("slow");
            $('html').css("top",-pos).addClass('fix-scroll');
            modalObj.find(".md-product-card-modal")[0].scrollIntoView();
        });
        $("div[id^=mug--modal--] button.mug-close-button, div[id^=mug--modal--] .md-product-card-modal-overlay, div[id^=mug--modal--] .md-product-card-modal").click(function(){
            var cls=$(this).attr("class");

            if(!(cls=="md-product-card-modal")){
                var modalObj = $(".multi-use-grid--modal");
                $(modalObj).fadeOut( "slow");
                $('body').removeClass('mute-mobile-dropdown');
                $('html').removeClass('fix-scroll');
                var top = $('html').offset().top;
                $('html').css("top","0").scrollTop(-top);
            }
            if(typeof event !== "undefined") {
                event.stopPropagation();
            }
        });
        $(document).keyup(function(event) {
            $("div[id^=mug--modal--] .md-product-card-modal-overlay:visible").click();
        });
    }); /* end of function */

})(jQuery, this);
//End Module: Modale

//Start Module: Header Mobile Slide Up
(function($) {
    'use strict';

    if($('html').hasClass('dark-theme')) {
        var lastScrollTop = 0;

        var header = $('.header');

        function toggleHeader(scrollTop) {
            var scrollTimeout = false;
            var headerStatus = '';

            if(scrollTimeout) {
                return false;
            }
            if($('body').hasClass('mute-mobile-dropdown')) {
                return false;
            }

            scrollTimeout = setTimeout(function(){
                var newScrollTop = $(document).scrollTop();
                var range = newScrollTop - scrollTop;
                scrollTop = newScrollTop;

                if(range >= 60 && headerStatus != 'slideUp') {
                    header.slideUp(250);
                    headerStatus = 'slideUp';
                }
                else if(range <= -60 && headerStatus != 'slideDown') {
                    header.slideDown(250);
                    headerStatus = 'slideDown';
                }

                scrollTimeout = false;

            }, 250);
        }


        var lastScrollTop = 0;

        var initScrollMobileMenu = function() {
            if(window.leonardo.globals.currentViewport.toUpperCase() !== 'DESKTOP'){
                toggleHeader(lastScrollTop);
                lastScrollTop = $(document).scrollTop();
            }
        }


        $(document).on('scroll', function(e){
            if(typeof window.leonardo === 'undefined') {
                var handle = setInterval(function() {
                    if (typeof window.leonardo !== 'undefined') {
                        initScrollMobileMenu();
                        clearInterval(handle);
                    }
                }, 100);
            } else {
                initScrollMobileMenu();
            }

        });
    }

})(jQuery);
//Start Module: Header Mobile Slide Up



//Start Module: Tab Nav Sticky
(function($) {
    'use strict';

    if($('html').hasClass('dark-theme')) {

        var anchorBar = $('.section-navigator--list');
        var anchorBarPositionTop = 0;

        var lastScrollTop = 0;
        var navTabs = [];


        /*  Inizio Gestione Tabbed  */
        var calcAchorPositionTop = function() {
            if(anchorBar.length==0) {
                return;
            }

            if(window.leonardo.globals.currentViewport.toUpperCase() === 'DESKTOP'){
                anchorBarPositionTop = (anchorBar.length>0)?anchorBar.outerHeight():0;
            } else {
                anchorBarPositionTop = (anchorBar.length>0)?40:0;
            }
        }


        var navTabLinkClicked = false;
        var handlerOnClickNavTabLink = function(navTab, index) {
            navTab.element.find('a').on('click', function(){
                if(isActiveTabArchive(navTab.element) && !navTabLinkClicked) {
                    navTabLinkClicked = true;
                    $('html').animate({scrollTop:navTab.originTop-anchorBarPositionTop}, 200, function(){
                        navTabLinkClicked = false;
                        setActiveTextDropdown();
                    });
                }
            })
        }


        var calcOriginTop = function() {
            for(var i=0; i<navTabs.length; i++) {
                if(!isActiveTabArchive(navTabs[i].element)) {
                    navTabs[i].originTop = $(navTabs[i].element).offset().top// - $(window).scrollTop();
                }
                handlerOnClickNavTabLink(navTabs[i], i);
            }
        }


        var isActiveTabArchive = function(navTab) {
            return navTab.hasClass('sticky')
        }


        var enableStickyTabArchive = function(navTab, index) {
            if(!isActiveTabArchive(navTab.element)) {
                navTab.element.addClass('sticky');
                navTab.element.css('top', anchorBarPositionTop);
                calcOriginTop();
            }
        }


        var disableStickyTabArchive = function(navTab, index) {
            if(isActiveTabArchive(navTab.element)) {
                navTab.element.removeClass('sticky');
                navTab.element.css('top', 'auto');
                calcOriginTop();
            }
        }


        //-- calcola tutti i nav-tabs
        var calcNavTabs = function() {
            $(".nav.nav-tabs").each(function (index) {
                if($(this).find('li').length > 0) {
                    $(this).css('z-index', 10+index);
                    var element = $(this);
                    var container = $(this).closest('.section-container');
                    var containerTop = container.offset().top;
                    var containerBottom = containerTop + container.height();

                    var originTop = element.offset().top
                    var navTab = {
                        element: element,
                        originTop: originTop,
                        container: container,
                        containerTop: containerTop,
                        containerBottom: containerBottom}
                    handlerOnClickNavTabLink(navTab)
                    navTabs.push(navTab);
                }
            });
        }
        /*  Inizio Gestione Tabbed  */


        /*  Inizio Gestione Dropdown Anchor Bar  */
        var setDropdown = function() {
            if(!anchorBar.hasClass('sticky')) {
                var anchorBarTopPosition = anchorBar.offset().top - $(window).scrollTop();
                anchorBar.css('top', anchorBarTopPosition)
                anchorBar.addClass('sticky-dropdown')
                $('.section-navigator').addClass('sticky-dropdown-wrapper');
            }
            $('.section-navigator').addClass('dropdown-wrapper-select-open');
            $(anchorBar).find('.section-navigator--list--item-wrap').addClass('select-open');
        }


        var unsetDropdown = function(delay) {
            var timeDelay = (typeof delay !== 'undefined')?delay:0;

            if(anchorBar.hasClass('sticky-dropdown')) {
                setTimeout(function(){
                    anchorBar.removeAttr('style');
                    anchorBar.removeClass('sticky-dropdown');
                    $('.section-navigator').removeClass('sticky-dropdown-wrapper');
                }, timeDelay);
            }
            $('.section-navigator').removeClass('dropdown-wrapper-select-open');
            $(anchorBar).find('.section-navigator--list--item-wrap').removeClass('select-open');
        }


        var toggleDropdown = function() {
            if($(anchorBar).find('.section-navigator--list--item-wrap').hasClass('select-open')) {
                unsetDropdown(300);
            } else {
                setDropdown();
            }
        }

        //-- Testo Anchor bar dropdown
        var setActiveTextDropdown = function() {
            if(anchorBar.length!==0) {
                var activeSectionText = anchorBar.find(".section-navigator--list--item.active").text();
                anchorBar.find('.swiper-button-prev .section-navigator--scroll--left--icon').text(activeSectionText);
            }
        }
        /*  Fine Gestione Dropdown Anchor Bar  */


        //-- inizio gestione visibilità tabbed sticky all'interno del contenitore
        function isScrolledIntoView(elem)
        {
            var docViewTop = $(window).scrollTop();
            var docViewBottom = docViewTop + $(window).height();

            var elemTop = $(elem).offset().top;
            var elemBottom = elemTop + $(elem).height();

            return ((elemTop <= docViewBottom) && (elemBottom >= docViewTop));
        }


        var toggleHideTabNavOutContainer = function(navTab, index) {
            if(isActiveTabArchive(navTab.element)) {
                if(navTab.container) {
                    if(!isScrolledIntoView(navTab.container)) {
                        navTab.element.addClass('ghost-sticky')
                    } else {
                        navTab.element.removeClass('ghost-sticky')
                    }
                }

            }
        }
        //-- inizio gestione visibilità tabbed sticky all'interno del contenitore


        //-- inibisce il dropdown del menu mobile
        var muteMobileMenuDropdown = function() {
            $('body').addClass('mute-mobile-dropdown');
            setTimeout(function(){
                $('body').removeClass('mute-mobile-dropdown');
            }, 1000)
        }


        //-- inibisce il tabbed sticky
        var muteTabbedSticky = function() {
            $('body').addClass('mute-tabbed-sticky');
            setTimeout(function(){
                $('body').removeClass('mute-tabbed-sticky');
            }, 1000)
        }


        $(document).ready(function(){
            var handle = setInterval(function() {
                if (typeof window.leonardo !== 'undefined') {
                    calcAchorPositionTop();
                    calcNavTabs();
                    clearInterval(handle);
                    setActiveTextDropdown();
                }
            }, 100);
        })



        //-- fix riposizionamenti dopo il reload
        $(window).on('beforeunload', function() {
            if(navTabs.length>0 && $(window).scrollTop()>navTabs[0].originTop-anchorBarPositionTop) {
                $(window).scrollTop(navTabs[0].originTop-anchorBarPositionTop);
            }
        });


        $(window).on('resize scroll', function(e){

            setActiveTextDropdown();

            if(typeof window.leonardo !== 'undefined' && window.leonardo.globals.currentViewport.toUpperCase() !== 'DESKTOP'){
                unsetDropdown();
            }

            var currentPosition = $(window).scrollTop();

            if(currentPosition > lastScrollTop){
                //Scrolling down
                for(var i=0; i<navTabs.length; i++) {
                    var navTab = navTabs[i];

                    toggleHideTabNavOutContainer(navTab, i);

                    var heightTop = navTab.originTop - anchorBarPositionTop;
                    if((heightTop <= currentPosition) && (!$('body').hasClass('mute-tabbed-sticky'))) {
                        enableStickyTabArchive(navTab, i);
                    }
                }
            } else {
                //Scrolling up
                for(var i=0; i<navTabs.length; i++) {
                    var navTab = navTabs[i];

                    toggleHideTabNavOutContainer(navTab);

                    var heightTop = navTab.originTop - anchorBarPositionTop;
                    if((heightTop > currentPosition) && (!$('body').hasClass('mute-tabbed-sticky'))) {
                        disableStickyTabArchive(navTab, i);
                    }
                }
            }

            lastScrollTop = currentPosition;

        });


        $('.section-navigator--list .swiper-button-prev').on('click', function(event){
            if(window.leonardo.globals.currentViewport.toUpperCase() !== 'DESKTOP'){
                toggleDropdown();
            }
        });


        $('.section-navigator--list .section-navigator--list--item').on('click', function(event){
            muteTabbedSticky();
            if(window.leonardo.globals.currentViewport.toUpperCase() !== 'DESKTOP'){
                unsetDropdown();
                muteMobileMenuDropdown();
                setTimeout(function(){
                    setActiveTextDropdown();
                }, 1000)

            }
        });


        $('.nav.nav-tabs').find('a').click(function(){
            muteTabbedSticky();
            muteMobileMenuDropdown();
        })

    }

})(jQuery);
//End Module: Tab Nav Sticky



(function ($, root, undefined) {

    $(function () {
    window.leonardo.globals.init();
    window.leonardo.serviceLocatorMap.init();
    window.leonardo.lazyLoad.init();
    /* 
     * Commentato perche' la logica e' diversa
     * 
    window.leonardo.allProducts.init();
    */
    window.leonardo.chosenSelect.init();
    window.leonardo.cookiePolicyDialog.init();
    window.leonardo.countdownWidget.init();
    window.leonardo.datepicker.init();
    window.leonardo.filterWidget.init();
    window.leonardo.filterWidgetMultimedia.init();
    window.leonardo.goto.init();
    window.leonardo.header.init();
    window.leonardo.langSelector.init();
    window.leonardo.masonryGrid.init();
    window.leonardo.megamenu.init();
    window.leonardo.multimediaLayer.init();
    window.leonardo.ourPresenceMap.init();
    window.leonardo.productTechnicalData.init();
    window.leonardo.scrollToTop.init();
    window.leonardo.searchResults.init();
    window.leonardo.searchWidgetGlobal.init();
    window.leonardo.sectionNavigator.init();
    window.leonardo.socialShare.init();
    window.leonardo.swipers.init();
    window.leonardo.timeline.init();
   //window.leonardo.videoDialog.init();
    //window.leonardo.videoPlayer.init();
    window.leonardo.htmlPlayer.init();
    window.leonardo.whereAreWeMap.init();
    // Messa come ultima per caricare alla fine le immagini
    window.leonardo.backgroundImage.init();

    // Custom init
    var timestamp = $("body").data("timestamp");

    // Custom
    //var jsCustom=document.createElement("script");
    //jsCustom.src="/o/leonardocompany-theme/js/custom.js?t="+timestamp+"&minifierType=js";
    //jsCustom.async="async";
    //document.body.appendChild(jsCustom);

    // YouTube
    var loadYouTubeLib = false;
    var ytLib = document.createElement("script");
    ytLib.src = window.ytLibraryURL;
    if(loadYouTubeLib){
        window.onYouTubeIframeAPIReady = function() {
            var loadEvent = new CustomEvent("ytLibraryReady");
            window.dispatchEvent(loadEvent);
            window.leonardo.ytPlayer.init();
            $('html.no-yt-video').removeClass('no-yt-video').addClass('yes-yt-video');
        }
        document.body.appendChild(ytLib);
    }
    $(".youtube-player-container").each(function(){
        window.leonardo.backgroundImage.applyTo(this,true);
    });
    $($(".leo-accordion--content.training-adt.collapse")[0]).addClass("in").css("height","").attr("aria-expanded","true");
    }); /* end of function */

})(jQuery, this);